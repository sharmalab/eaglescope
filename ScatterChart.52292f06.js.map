{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/ScatterChart.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eoPnA\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $a7bb2973674b6268$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\nclass $a7bb2973674b6268$export$2e2bcd8739ae039 extends (0, $acw62.PureComponent) {\n    constructor(props){\n        super(props);\n        this.self = /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createRef();\n        this.state = {\n            margin: {\n                top: 5,\n                right: 10,\n                bottom: 25,\n                left: 25\n            }\n        };\n        this.state.data = this.props.data.filter((d)=>d[this.props.fields.x] !== 'N/A' && d[this.props.fields.y] !== 'N/A' && d[this.props.fields.z] !== 'N/A');\n    }\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n    componentDidUpdate() {\n        setTimeout(()=>{\n            $9NlP8.select(this.self.current).selectAll('canvas').remove('canvas');\n            $9NlP8.select(this.self.current).selectAll('svg').remove('svg');\n            this.rect = this.self.current.getBoundingClientRect();\n            const innerWidth = this.rect.width - this.state.margin.left - this.state.margin.right;\n            const innerHeight = this.rect.height - this.state.margin.top - this.state.margin.bottom;\n            this.canvas = $9NlP8.select(this.self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${this.state.margin.left}px,${this.state.margin.top}px)`);\n            // create svg\n            const svg = $9NlP8.select(this.self.current).append('svg').attr('width', this.rect.width).attr('height', this.rect.height).attr('transform', `translate(${0},${-innerHeight})`);\n            // create viewer\n            const viewer = svg.append('g').attr('transform', `translate(${this.state.margin.left},0)`);\n            //\n            this.xScale = this.createScaleLiner(this.props.fields.x, [\n                0,\n                innerWidth\n            ]);\n            this.yScale = this.createScaleLiner(this.props.fields.y, [\n                innerHeight,\n                0\n            ]);\n            this.radiusScale = this.createScaleLiner(this.props.fields.z, [\n                3,\n                10\n            ]);\n            const getCurrentMouseClickPosition = ()=>{\n                console.log(svg);\n                const mouseX = $9NlP8.event.sourceEvent.clientX - svg.node().getBoundingClientRect().x - this.state.margin.left;\n                const mouseY = $9NlP8.event.sourceEvent.clientY - svg.node().getBoundingClientRect().y;\n                return [\n                    mouseX,\n                    mouseY\n                ];\n            };\n            viewer.append('g').attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(this.xScale).tickSize(-innerHeight));\n            // add the y Axis\n            viewer.append('g').call($9NlP8.axisLeft(this.yScale).tickSize(-innerWidth));\n            this.brush = $9NlP8.brush().extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    innerWidth,\n                    innerHeight\n                ]\n            ]).on('start', ()=>{\n                this.startPosition = getCurrentMouseClickPosition();\n            }).on('brush', ()=>{\n                this.endPosition = getCurrentMouseClickPosition();\n                svg.selectAll('rect').remove('rect');\n                const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n                const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n                const selectedArea = svg.append('rect').attr('position', 'absolute').attr('x', startX + this.state.margin.left).attr('y', startY).attr('width', Math.abs(this.endPosition[0] - this.startPosition[0])).attr('height', Math.abs(this.endPosition[1] - this.startPosition[1])).attr('fill', 'rgba(211, 211, 211, 0.5)');\n            }).on('end', ()=>{\n                this.endPosition = getCurrentMouseClickPosition();\n                svg.selectAll('rect').remove('rect');\n                const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n                const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n                const selectedArea = svg.append('rect').attr('position', 'absolute').attr('x', startX + this.state.margin.left).attr('y', startY).attr('width', Math.abs(this.endPosition[0] - this.startPosition[0])).attr('height', Math.abs(this.endPosition[1] - this.startPosition[1])).attr('fill', 'rgba(211, 211, 211, 0.5)');\n                this.end();\n            });\n            viewer.append('g').call(this.brush);\n            this.draw();\n        }, 100);\n    }\n    drawPoint(point) {\n        const cx = this.xScale(point[this.props.fields.x]);\n        const cy = this.yScale(point[this.props.fields.y]);\n        const r = this.props.fields.z ? this.radiusScale(point[this.props.fields.z]) : 3;\n        this.context.beginPath();\n        this.context.arc(cx, cy, r, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.fill();\n        this.context.stroke();\n    }\n    draw() {\n        this.context = this.canvas.node().getContext('2d');\n        this.context.clearRect(0, 0, this.rect.width, this.rect.height);\n        this.context.fillStyle = '#87CEEB';\n        this.context.strokeWidth = 1;\n        this.context.strokeStyle = '#4682B4';\n        this.context.globalAlpha = 1;\n        if (this.props.filters.length === 0) this.state.data.forEach((point)=>{\n            this.drawPoint(point);\n        });\n        else this.state.data.forEach((point)=>{\n            if (this.props.filterData.includes(point)) {\n                this.context.fillStyle = '#87CEEB';\n                this.context.strokeWidth = 1;\n                this.context.strokeStyle = '#4682B4';\n                this.context.globalAlpha = 1;\n            } else {\n                this.context.fillStyle = '#c0c0c0c0';\n                this.context.strokeWidth = 1;\n                this.context.strokeStyle = '#000000';\n                this.context.globalAlpha = 0.2;\n            }\n            this.drawPoint(point);\n        });\n    }\n    createScaleLiner(f, range) {\n        const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n        const domainExtent = $9NlP8.extent(this.state.data, (d)=>d[f]);\n        const domainPadding = (domainExtent[1] - domainExtent[0]) * paddingPercent;\n        const scaleLiner = $9NlP8.scaleLinear().domain([\n            domainExtent[0] - domainPadding,\n            domainExtent[1] + domainPadding\n        ]).range(range).nice();\n        return scaleLiner;\n    }\n    end() {\n        if (!$9NlP8.event.selection) return;\n        const [x0, y0] = [\n            Math.min(this.startPosition[0], this.endPosition[0]),\n            Math.min(this.startPosition[1], this.endPosition[1])\n        ];\n        const [x1, y1] = [\n            Math.max(this.startPosition[0], this.endPosition[0]),\n            Math.max(this.startPosition[1], this.endPosition[1])\n        ];\n        const filters = [\n            {\n                id: `${this.props.id}_x`,\n                title: this.props.title,\n                field: this.props.fields.x,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(this.xScale.invert(x0)),\n                    (0, $63tWu.numFixed)(this.xScale.invert(x1))\n                ]\n            },\n            {\n                id: `${this.props.id}_y`,\n                title: this.props.title,\n                field: this.props.fields.y,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(this.yScale.invert(y1)),\n                    (0, $63tWu.numFixed)(this.yScale.invert(y0))\n                ]\n            }\n        ];\n        this.props.filterAdded(filters);\n    }\n    render() {\n        return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n            id: this.props.id,\n            ref: this.self,\n            role: \"figure\",\n            style: {\n                width: '100%',\n                height: '100%'\n            }\n        });\n    }\n}\n$a7bb2973674b6268$export$2e2bcd8739ae039.propTypes = {\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        x: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        z: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string\n    }).isRequired,\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired\n};\n\n});\n\n\n//# sourceMappingURL=ScatterChart.52292f06.js.map\n","import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nexport default class ScatterChart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.self = React.createRef();\n    this.state = {\n      margin: {\n        top: 5,\n        right: 10,\n        bottom: 25,\n        left: 25,\n      },\n    };\n    this.state.data = this.props.data.filter(\n      (d) => d[this.props.fields.x] !== 'N/A'\n        && d[this.props.fields.y] !== 'N/A'\n        && d[this.props.fields.z] !== 'N/A',\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      d3.select(this.self.current).selectAll('canvas').remove('canvas');\n      d3.select(this.self.current).selectAll('svg').remove('svg');\n      this.rect = this.self.current.getBoundingClientRect();\n      const innerWidth = this.rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = this.rect.height - this.state.margin.top - this.state.margin.bottom;\n\n      this.canvas = d3\n        .select(this.self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${this.state.margin.left}px,${this.state.margin.top}px)`);\n\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', this.rect.width)\n        .attr('height', this.rect.height)\n        .attr('transform', `translate(${0},${-innerHeight})`);\n\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},0)`);\n\n      //\n      this.xScale = this.createScaleLiner(this.props.fields.x, [0, innerWidth]);\n      this.yScale = this.createScaleLiner(this.props.fields.y, [innerHeight, 0]);\n      this.radiusScale = this.createScaleLiner(this.props.fields.z, [3, 10]);\n      const getCurrentMouseClickPosition = () => {\n        console.log(svg);\n        const mouseX = d3.event.sourceEvent.clientX - svg.node().getBoundingClientRect().x\n        - this.state.margin.left;\n        const mouseY = d3.event.sourceEvent.clientY - svg.node().getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n      viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).tickSize(-innerHeight));\n\n      // add the y Axis\n      viewer.append('g').call(d3.axisLeft(this.yScale).tickSize(-innerWidth));\n\n      this.brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          this.startPosition = getCurrentMouseClickPosition();\n        }).on('brush', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n        })\n        .on('end', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n          this.end();\n        });\n\n      viewer.append('g').call(this.brush);\n\n      this.draw();\n    }, 100);\n  }\n\n  drawPoint(point) {\n    const cx = this.xScale(point[this.props.fields.x]);\n    const cy = this.yScale(point[this.props.fields.y]);\n    const r = this.props.fields.z ? this.radiusScale(point[this.props.fields.z]) : 3;\n\n    this.context.beginPath();\n    this.context.arc(cx, cy, r, 0, 2 * Math.PI);\n    this.context.closePath();\n    this.context.fill();\n    this.context.stroke();\n  }\n\n  draw() {\n    this.context = this.canvas.node().getContext('2d');\n    this.context.clearRect(0, 0, this.rect.width, this.rect.height);\n    this.context.fillStyle = '#87CEEB';\n    this.context.strokeWidth = 1;\n    this.context.strokeStyle = '#4682B4';\n    this.context.globalAlpha = 1;\n\n    if (this.props.filters.length === 0) {\n      this.state.data.forEach((point) => {\n        this.drawPoint(point);\n      });\n    } else {\n      this.state.data.forEach((point) => {\n        if (this.props.filterData.includes(point)) {\n          this.context.fillStyle = '#87CEEB';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#4682B4';\n          this.context.globalAlpha = 1;\n        } else {\n          this.context.fillStyle = '#c0c0c0c0';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#000000';\n          this.context.globalAlpha = 0.2;\n        }\n        this.drawPoint(point);\n      });\n    }\n  }\n\n  createScaleLiner(f, range) {\n    const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n    const domainExtent = d3.extent(this.state.data, (d) => d[f]);\n    const domainPadding = (domainExtent[1] - domainExtent[0]) * paddingPercent;\n    const scaleLiner = d3\n      .scaleLinear()\n      .domain([domainExtent[0] - domainPadding,\n        domainExtent[1] + domainPadding])\n      .range(range)\n      .nice();\n    return scaleLiner;\n  }\n\n  end() {\n    if (!d3.event.selection) return;\n\n    const [x0, y0] = [Math.min(this.startPosition[0], this.endPosition[0]),\n      Math.min(this.startPosition[1], this.endPosition[1])];\n    const [x1, y1] = [Math.max(this.startPosition[0], this.endPosition[0]),\n      Math.max(this.startPosition[1], this.endPosition[1])];\n\n    const filters = [\n      {\n        id: `${this.props.id}_x`,\n        title: this.props.title,\n        field: this.props.fields.x,\n        operation: 'range',\n        values: [numFixed(this.xScale.invert(x0)), numFixed(this.xScale.invert(x1))],\n      },\n      {\n        id: `${this.props.id}_y`,\n        title: this.props.title,\n        field: this.props.fields.y,\n        operation: 'range',\n        values: [numFixed(this.yScale.invert(y1)), numFixed(this.yScale.invert(y0))],\n      },\n    ];\n    this.props.filterAdded(filters);\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} ref={this.self} role=\"figure\" style={{ width: '100%', height: '100%' }} />\n    );\n  }\n}\n\nScatterChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$a7bb2973674b6268$export$2e2bcd8739ae039","set","s","enumerable","$ayMG0","$acw62","$9NlP8","$c9Z8w","$63tWu","PureComponent","constructor","props","self","createRef","state","margin","top","right","bottom","left","data","filter","d","fields","x","y","z","componentDidMount","componentDidUpdate","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","canvas","append","attr","style","svg","viewer","xScale","createScaleLiner","yScale","radiusScale","getCurrentMouseClickPosition","console","log","event","sourceEvent","clientX","node","clientY","call","axisBottom","tickSize","axisLeft","brush","extent","on","startPosition","endPosition","startX","Math","min","startY","abs","end","draw","drawPoint","point","cx","cy","r","context","beginPath","arc","PI","closePath","fill","stroke","getContext","clearRect","fillStyle","strokeWidth","strokeStyle","globalAlpha","filters","length","forEach","filterData","includes","f","range","domainExtent","domainPadding","scaleLinear","domain","nice","selection","x0","y0","x1","y1","max","id","title","field","operation","values","numFixed","invert","filterAdded","render","jsx","ref","role","propTypes","arrayOf","shape","isRequired","string","func"],"version":3,"file":"ScatterChart.52292f06.js.map"}