{"version":3,"sources":["components/VisualTools/Chart/PieChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_tooltip","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","PieChart","props","self","useRef","margin","data","nest","key","d","fields","x","rollup","v","length","entries","sum","value","arcs","pie","sortValues","b","useEffect","setTimeout","select","current","remove","selectAll","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","radius","Math","min","arc","innerRadius","outerRadius","color","scaleOrdinal","domain","map","range","quantize","interpolateSpectral","svg","append","attr","viewer","concat","legendG","enter","style","text","offset","y","tooltipHandlers","createTooltip","format","pies","join","on","mousemove","mouseleave","selected","values","reduce","point","push","filter","id","title","field","operation","filterAdded","filterRemove","filters","f","forEach","layout","createElement","role","ref","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","func","number","currentCols"],"mappings":"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","file":"PieChart.27ef6d2f.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport createTooltip from '../../partials/tooltip';\n\nfunction PieChart(props) {\n  const self = useRef();\n  const margin = {\n    top: 5,\n    right: 5,\n    bottom: 5,\n    left: 5,\n  };\n  const data = d3\n    .nest()\n    .key((d) => d[props.fields.x])\n\n    .rollup((v) => v.length)\n    .entries(props.data);\n\n  const sum = d3.sum(data, (d) => d.value);\n  const pie = d3\n    .pie()\n    .sortValues((a, b) => b - a)\n    .value((d) => d.value);\n\n  const arcs = pie(data);\n\n  useEffect(() => {\n    setTimeout(() => {\n      // Remove old svg if any\n      d3.select(self.current).select('.tooltip').remove('.tooltip');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      // calculate chart dimensions\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n      const radius = Math.min(innerWidth, innerHeight) / 2;\n\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n      const color = d3\n        .scaleOrdinal()\n        .domain(data.map((d) => d.key))\n        .range(d3.quantize((t) => d3.interpolateSpectral(t), data.length));\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n\n      const viewer = svg\n        .append('g')\n        .attr(\n          'transform',\n          `translate(${innerWidth / 2 + margin.left},${innerHeight / 2 + margin.top})`,\n        );\n\n      if (innerWidth > 500) {\n        const legendG = svg\n          .selectAll('.legend')\n          .data(arcs)\n          .enter()\n          .append('g')\n          .attr('transform', (d, i) => `translate(${innerWidth - 110},${i * 15 + 20})`)\n          .attr('class', 'legend');\n\n        legendG\n          .append('rect') // make a matching color rect\n          .attr('width', 13)\n          .attr('height', 13)\n          .attr('fill', (d, i) => color(i))\n          .attr('stroke', 'grey')\n          .style('stroke-width', '1px');\n\n        legendG\n          .append('text') // add the text\n          .text((d) => `${d.value}  ${d.data.key}`)\n          .style('font-size', 15)\n          .attr('y', 13)\n          .attr('x', 15);\n      }\n\n      // create a tooltip\n      const addLabel = (d) => `Class: ${d.data.key} Count: ${d.data.value} \n      Percentage: ${d3.format('.0%')(d.data.value / sum)}`;\n      const offset = {\n        x: rect.width / 2 + 20,\n        y: rect.height / 2,\n      };\n      const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n\n      const onClick = (d) => {\n        d.data.selected = !d.data.selected;\n        const values = data.reduce((value, point) => {\n          if (point.selected) value.push(point.key);\n          return value;\n        }, []);\n        if (values.length > 0) {\n          const filter = {\n            id: props.id,\n            title: props.title,\n            field: props.fields.x,\n            operation: 'in',\n            values,\n          };\n          props.filterAdded([filter]);\n        } else {\n          props.filterRemove(props.id);\n        }\n      };\n\n      const pies = viewer\n        .selectAll('path')\n        .data(arcs)\n        .join('path')\n        .attr('class', 'slide')\n        .attr('fill', (d) => color(d.data.key))\n        .attr('d', arc)\n        .on('mousemove', tooltipHandlers.mousemove)\n        .on('mouseleave', tooltipHandlers.mouseleave)\n        .on('click', onClick);\n\n      const filters = props.filters.filter((f) => f.id === props.id);\n      if (filters.length > 0) {\n        filters[0].values.forEach((value) => {\n          data.forEach((d) => {\n            if (d.key === value) d.selected = true;\n          });\n        });\n      }\n      if (filters.length > 0) {\n        pies\n          .attr('fill', (d) => (d.data.selected ? color(d.data.key) : '#C0C0C0'))\n          .attr('fill-opacity', (d) => (d.data.selected ? 1 : 0.5))\n          .attr('stroke', '#CCCCCC')\n          .attr('stroke-width', (d) => (d.data.selected ? 3 : 0));\n      } else {\n        data.forEach((d) => {\n          d.selected = false;\n        });\n        pies\n          .attr('fill', (d) => color(d.data.key))\n          .attr('fill-opacity', 1)\n          .attr('stroke', 'none');\n      }\n    }, 100);\n  }, [props.layout, props.filters]);\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <div role=\"figure\" id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />\n    </div>\n  );\n}\n\nexport default PieChart;\n\nPieChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  filterRemove: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"]}