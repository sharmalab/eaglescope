{"version":3,"sources":["components/VisualTools/Chart/BarChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_tooltip","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","transformList","data","f","map","Map","forEach","d","items","Array","isArray","from","key","value","transform","field","arguments","length","undefined","nest","sortKeys","ascending","rollup","v","entries","wrap","text","width","each","word","currentText","select","words","split","reverse","line","lineNumber","y","attr","dy","parseFloat","tspan","append","concat","pop","push","join","node","getComputedTextLength","BarChart","props","margin","fields","fullData","x","isList","self","useRef","scaleRef","hightRef","viewerRef","drawBar","selection","className","tooltipHandlers","createTooltip","current","updateBars","selectAll","enterBars","enter","bandwidth","on","mousemove","mouseleave","currentData","_props$fields","filter","id","title","operation","values","filterAdded","merge","transition","duration","exit","remove","useEffect","setTimeout","rect","getBoundingClientRect","innerWidth","innerHeight","height","svg","xScale","scaleBand","domain","flat","range","padding","yScale","scaleLinear","max","createYScale","xAxis","axisBottom","yAxis","axisLeft","tickSize","layout","filters","filterData","createElement","ref","role","style","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","bool","func","number","currentCols"],"mappings":";AAmOC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnOD,IAAAA,EAAAC,EAAAC,QAAA,UACAC,EAAAF,EAAAC,QAAA,OACAE,EAAAC,EAAAH,QAAA,eACAI,EAAAD,EAAAH,QAAA,2BAAmD,SAAAG,EAAAE,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,GAAA,SAAAG,EAAAH,GAAAI,GAAAA,mBAAAA,QAAAC,OAAAA,KAAAA,IAAAA,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,QAAAD,OAAAA,EAAAA,SAAAH,GAAAA,OAAAA,EAAAM,EAAAD,IAAAL,GAAA,SAAAN,EAAAM,EAAAK,GAAAA,IAAAA,GAAAL,GAAAA,EAAAC,WAAAD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAE,MAAAA,CAAAA,QAAAF,GAAAM,IAAAA,EAAAH,EAAAE,GAAAC,GAAAA,GAAAA,EAAAC,IAAAP,GAAAM,OAAAA,EAAAE,IAAAR,GAAAS,IAAAA,EAAAC,CAAAA,UAAAC,MAAAA,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAAC,IAAAA,IAAAA,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,GAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAP,QAAAF,EAAAM,GAAAA,EAAAa,IAAAnB,EAAAS,GAAAA,EAEnD,IAAMW,EAAgB,SAACC,EAAMC,GAC3B,IAAMC,EAAM,IAAIC,IAahB,OAZAH,EAAKI,QAAQ,SAACC,GACZ,IAAMC,EAAQD,EAAEJ,GACZM,MAAMC,QAAQF,GAChBA,EAAMF,QAAQ,SAACP,GACRK,EAAIhB,IAAIW,IAAMK,EAAIJ,IAAID,EAAG,GAC9BK,EAAIJ,IAAID,EAAGK,EAAIf,IAAIU,GAAK,MAGrBK,EAAIhB,IAAIoB,IAAUJ,EAAIJ,IAAIQ,EAAO,GACtCJ,EAAIJ,IAAIQ,EAAOJ,EAAIf,IAAImB,GAAS,MAG7BC,MAAME,KAAKP,GAAKA,IAAI,SAACG,GAAC,MAAM,CAAEK,IAAKL,EAAE,GAAIM,MAAON,EAAE,OAGrDO,EAAY,SAACZ,EAAMa,GACvB,OADoCC,UAAAC,OAAAD,QAAAE,IAAAF,UAAAE,IAAAF,UAAG,GAE9Bf,EAAcC,EAAMa,GAEtBtC,EAAG0C,OAAOP,IAAI,SAACL,GAAC,OAAKA,EAAEQ,KAC3BK,SAAS3C,EAAG4C,WACZC,OAAO,SAACC,GAAC,OAAKA,EAAEN,SAChBO,QAAQtB,IAGPuB,EAAO,SAACC,EAAMC,GAClBD,EAAKE,KAAK,WACR,IAEIC,EAFEC,EAAcrD,EAAGsD,OAAO,MACxBC,EAAQF,EAAYJ,OAAOO,MAAM,OAAOC,UAE1CC,EAAO,GACPC,EAAa,EAEXC,EAAIP,EAAYQ,KAAK,KACrBC,EAAKC,WAAWV,EAAYQ,KAAK,OACnCG,EAAQX,EACTJ,KAAK,MACLgB,OAAO,SACPJ,KAAK,IAAK,GACVA,KAAK,IAAKD,GACVC,KAAK,KAAIK,GAAAA,OAAKJ,EAAM,OAEvB,IADAV,EAAOG,EAAMY,MACNf,GACLM,EAAKU,KAAKhB,GACVY,EAAMf,KAAKS,EAAKW,KAAK,MACjBL,EAAMM,OAAOC,wBAA0BrB,IACzCQ,EAAKS,MACLH,EAAMf,KAAKS,EAAKW,KAAK,MACrBX,EAAO,CAACN,GACRY,EAAQX,EACLY,OAAO,SACPJ,KAAK,IAAK,GACVA,KAAK,IAAKD,GACVC,KAAK,KAAIK,GAAAA,OArBG,MAqBIP,EAA0BG,EAAM,OAChDb,KAAKG,IAEVA,EAAOG,EAAMY,SAKnB,SAASK,EAASC,GAChB,IAAMC,EACC,GADDA,EAEG,GAFHA,EAGI,GAHJA,EAIE,GAGFC,EAAc,MAAdA,EAAwB,QACxBC,EAAWvC,EAAUoC,EAAMhD,KAAMgD,EAAME,OAAOE,EAAGJ,EAAME,OAAOG,QAC9DC,GAAO,EAAAC,EAAM,UACbC,GAAW,EAAAD,EAAM,UACjBE,GAAW,EAAAF,EAAM,UACjBG,GAAY,EAAAH,EAAM,UAoBlBI,EAAU,SAACC,EAAW5D,GAA2B,IAArB6D,EAAS/C,UAAAC,OAAAD,QAAAE,IAAAF,UAAAE,GAAAF,UAAG,GAAA,KAMtCgD,GAAkB,EAAAC,EAAa,SAACT,EAAKU,QAL1B,SAAC3D,GAAC,MAAAoC,GAAAA,OAAQpC,EAAEK,IAAG+B,MAAAA,OAAKpC,EAAEM,QACxB,CACbyC,EAAG,GACHjB,EAAG,IAGC8B,EAAaL,EAAUM,UAASzB,QAAAA,OAASoB,IAAa7D,KAAKA,EAAM,SAACK,GAAC,OAAKA,EAAE6C,KAE1EiB,EAAYF,EAAWG,QAAQ5B,OAAO,QA6C5C,OA5CA2B,EACG/B,KAAK,QAAOK,GAAAA,OAAKoB,IACjBzB,KAAK,IAAK,SAAC/B,GAAC,OAAKmD,EAASQ,QAAQZ,EAAE/C,EAAE6C,MACtCd,KAAK,QAASoB,EAASQ,QAAQZ,EAAEiB,aACjCjC,KAAK,IAAKqB,EAASO,SACnB5B,KAAK,OAAQ,mBAChB+B,EACGG,GAAG,YAAaR,EAAgBS,WAChCD,GAAG,aAAcR,EAAgBU,YACjCF,GAAG,QAAS,SAACG,GAAgB,IAAAC,EAEtB/D,EADWwD,EAAUQ,OAAO,SAACtE,GAAC,OAAKA,IAAMoE,IACxBzE,OAAO,GAAGU,IAC3BiE,EAAS3B,MAAAA,GAAa0B,QAARA,EAAL1B,EAAOE,cAAPwB,IAAaA,GAAbA,EAAerB,OAAS,CACrCuB,GAAI5B,EAAM4B,GACVC,MAAO7B,EAAM6B,MACbhE,MAAOmC,EAAME,OAAOE,EACpB0B,UAAW,MACXC,OAAQpE,GACN,CACFiE,GAAI5B,EAAM4B,GACVC,MAAO7B,EAAM6B,MACbhE,MAAOmC,EAAME,OAAOE,EACpB0B,UAAW,KACXC,OAAQpE,GAEVqC,EAAMgC,YAAY,CAACL,MAGvBV,EACGgB,MAAMd,GACNe,aACAC,SAAS,KACT/C,KAAK,IAAK,SAAC/B,GAAC,OAAKmD,EAASQ,QAAQ7B,EAAE9B,EAAE6C,MACtCd,KAAK,SAAU,SAAC/B,GAAC,OAAKoD,EAASO,QAAUR,EAASQ,QAAQ7B,EAAE9B,EAAE6C,MAGjEe,EACGmB,OACAF,aACAC,SAAS,KACT/C,KAAK,IAAKqB,EAASO,SACnB5B,KAAK,SAAU,GACfiD,SAEIpB,GAuDT,OApDA,EAAAqB,EAAS,WAAC,WACRC,WAAW,WACThH,EAAGsD,OAAOyB,EAAKU,SAASE,UAAU,OAAOmB,OAAO,OAChD,IAAMG,EAAOlC,EAAKU,QAAQyB,wBACpBC,EAAaF,EAAK/D,MAAQwB,EAAcA,EACxC0C,EAAcH,EAAKI,OAAS3C,EAAaA,EAC/CQ,EAASO,QAAU2B,EAGnB,IAAME,EAAMtH,EACTsD,OAAOyB,EAAKU,SACZxB,OAAO,OACPJ,KAAK,QAASoD,EAAK/D,OACnBW,KAAK,SAAUoD,EAAKI,QACpBxD,KAAK,OAAQ,OAEhBsB,EAAUM,QAAU6B,EACjBrD,OAAO,KACPJ,KAAK,YAAWK,aAAAA,OAAeQ,EAAWR,KAAAA,OAAIQ,EAAa,MAC9D,IA9FkBhD,EAAGwB,EA8FfqE,GA9FY7F,EA8FUiD,EA9FPzB,EA8FiBiE,EA5FzBnH,EACZwH,YACAC,OAAO7C,EAASjD,IAAI,SAACG,GAAC,OAAKA,EAAEJ,KAAIgG,QACjCC,MAAM,CAAC,EAAGzE,IACV0E,QAAQ,KAyFHC,EArFW,SAACnG,EAAG2F,GAKvB,OAJerH,EACZ8H,cACAL,OAAO,CAAC,EAAGzH,EAAG+H,IAAInD,EAAU,SAAC9C,GAAC,OAAKA,EAAEJ,OACrCiG,MAAM,CAACN,EAAQ,IAiFDW,CAAarD,EAAUyC,GACtCnC,EAASQ,QAAU,CAAEZ,EAAG0C,EAAQ3D,EAAGiE,GAEnC,IAAMI,EAAQjI,EAAGkI,WAAWX,GAC5BpC,EAAUM,QACPxB,OAAO,KACPJ,KAAK,QAAS,UACdA,KAAK,YAAWK,eAAAA,OAAiBkD,EAAc,MAC/C/F,KAAK4G,GACLtC,UAAU,cACVtE,KAAK2B,EAAMuE,EAAOzB,aAGrB,IAAMqC,EAAQnI,EAAGoI,SAASP,GAAQQ,UAAUlB,GAC5ChC,EAAUM,QAAQxB,OAAO,KAAK5C,KAAK8G,GAEnC/C,EAAQD,EAAUM,QAASb,EAAU,OACpC,MACF,CAACH,EAAM6D,UAEV,EAAAvB,EAAS,WAAC,WACRC,WAAW,WACT,IAAIvF,EAAO,GAETA,EADEgD,EAAM8D,QAAQ/F,OAAS,EAClBH,EAAUoC,EAAM+D,WAAY/D,EAAME,OAAOE,EAAGJ,EAAME,OAAOG,QAEzDF,EAETQ,EAAQD,EAAUM,QAAShE,EAAM,OAChC,MACF,CAACgD,EAAM8D,QAAS9D,EAAM+D,WAAY/D,EAAM6D,SAEpCzI,EAAAS,QAAAmI,cAAA,MAAA,CAAKpC,GAAI5B,EAAM4B,GAAIqC,IAAK3D,EAAM4D,KAAK,SAASC,MAAO,CAAE1F,MAAO,OAAQmE,OAAQ,UACpF,IAAAwB,EAAAC,QAAAxI,QAEckE,EAEfA,EAASuE,UAAY,CACnBtH,KAAMuH,EAAS,QAACC,QAAQD,EAAS,QAACE,MAAM,KAAKC,WAC7CxE,OAAQqE,EAAS,QAACE,MAAM,CAAErE,EAAGmE,EAAS,QAACI,OAAOD,WAAYrE,OAAQkE,EAAS,QAACK,OAAQF,WACpF9C,GAAI2C,EAAS,QAACI,OAAOD,WACrB7C,MAAO0C,EAAS,QAACI,OAAOD,WACxBX,WAAYQ,EAAS,QAACC,QAAQD,EAAS,QAACE,MAAM,KAAKC,WACnDZ,QAASS,EAAS,QAACC,QAAQD,EAAS,QAACE,MAAM,KAAKC,WAChD1C,YAAauC,EAAS,QAACM,KAAKH,WAC5Bb,OAAQU,EAAS,QAACE,MAAM,CACtBhG,MAAO8F,EAAS,QAACO,OAAOJ,WACxBK,YAAaR,EAAS,QAACO,OAAOJ,aAC7BA","file":"BarChart.fa4140c9.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport createTooltip from '../../partials/tooltip';\n\nconst transformList = (data, f) => {\n  const map = new Map();\n  data.forEach((d) => {\n    const items = d[f];\n    if (Array.isArray(items)) {\n      items.forEach((i) => {\n        if (!map.has(i)) { map.set(i, 0); }\n        map.set(i, map.get(i) + 1);\n      });\n    } else {\n      if (!map.has(items)) { map.set(items, 0); }\n      map.set(items, map.get(items) + 1);\n    }\n  });\n  return Array.from(map).map((d) => ({ key: d[0], value: d[1] }));\n};\n\nconst transform = (data, field, isList = false) => {\n  if (isList) {\n    return transformList(data, field);\n  }\n  return d3.nest().key((d) => d[field])\n    .sortKeys(d3.ascending)\n    .rollup((v) => v.length)\n    .entries(data);\n};\n\nconst wrap = (text, width) => {\n  text.each(function updateBars() {\n    const currentText = d3.select(this);\n    const words = currentText.text().split(/\\s+/).reverse();\n    let word;\n    let line = [];\n    let lineNumber = 0;\n    const lineHeight = 1.1; // ems\n    const y = currentText.attr('y');\n    const dy = parseFloat(currentText.attr('dy'));\n    let tspan = currentText\n      .text(null)\n      .append('tspan')\n      .attr('x', 0)\n      .attr('y', y)\n      .attr('dy', `${dy}em`);\n    word = words.pop();\n    while (word) {\n      line.push(word);\n      tspan.text(line.join(' '));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(' '));\n        line = [word];\n        tspan = currentText\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', `${++lineNumber * lineHeight + dy}em`)\n          .text(word);\n      }\n      word = words.pop();\n    }\n  });\n};\n\nfunction BarChart(props) {\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 35,\n    left: 35,\n  };\n\n  const fields = { x: 'key', y: 'value' };\n  const fullData = transform(props.data, props.fields.x, props.fields.isList);\n  const self = useRef();\n  const scaleRef = useRef();\n  const hightRef = useRef();\n  const viewerRef = useRef();\n\n  const createXScale = (f, width) => {\n    // set the ranges\n    const xScale = d3\n      .scaleBand()\n      .domain(fullData.map((d) => d[f]).flat())\n      .range([0, width])\n      .padding(0.1);\n    return xScale;\n  };\n\n  const createYScale = (f, height) => {\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(fullData, (d) => d[f])])\n      .range([height, 0]);\n    return yScale;\n  };\n\n  const drawBar = (selection, data, className = 'og') => {\n    const addLabel = (d) => `${d.key}: ${d.value}`;\n    const offset = {\n      x: 60,\n      y: 0,\n    };\n    const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n    const updateBars = selection.selectAll(`rect.${className}`).data(data, (d) => d[fields.x]);\n\n    const enterBars = updateBars.enter().append('rect');\n    enterBars\n      .attr('class', `${className}`)\n      .attr('x', (d) => scaleRef.current.x(d[fields.x]))\n      .attr('width', scaleRef.current.x.bandwidth())\n      .attr('y', hightRef.current)\n      .attr('role', 'graphics-symbol');\n    enterBars\n      .on('mousemove', tooltipHandlers.mousemove)\n      .on('mouseleave', tooltipHandlers.mouseleave)\n      .on('click', (currentData) => {\n        const selected = enterBars.filter((d) => d === currentData);\n        const value = selected.data()[0].key;\n        const filter = props?.fields?.isList ? {\n          id: props.id,\n          title: props.title,\n          field: props.fields.x,\n          operation: 'has',\n          values: value,\n        } : {\n          id: props.id,\n          title: props.title,\n          field: props.fields.x,\n          operation: 'eq',\n          values: value,\n        };\n        props.filterAdded([filter]);\n      });\n\n    updateBars\n      .merge(enterBars)\n      .transition()\n      .duration(1000)\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]))\n      .attr('height', (d) => hightRef.current - scaleRef.current.y(d[fields.y]));\n\n    // update_bars\n    updateBars\n      .exit()\n      .transition()\n      .duration(1000)\n      .attr('y', hightRef.current)\n      .attr('height', 0)\n      .remove();\n\n    return updateBars;\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n      hightRef.current = innerHeight;\n\n      // create svg\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .attr('role', 'img');\n      // create viewer\n      viewerRef.current = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      const xScale = createXScale(fields.x, innerWidth);\n      const yScale = createYScale(fields.y, innerHeight);\n      scaleRef.current = { x: xScale, y: yScale };\n\n      const xAxis = d3.axisBottom(xScale);\n      viewerRef.current\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(xAxis)\n        .selectAll('.tick text')\n        .call(wrap, xScale.bandwidth());\n\n      // add the y Axis\n      const yAxis = d3.axisLeft(yScale).tickSize(-innerWidth);\n      viewerRef.current.append('g').call(yAxis);\n\n      drawBar(viewerRef.current, fullData, 'og');\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let data = [];\n      if (props.filters.length > 0) {\n        data = transform(props.filterData, props.fields.x, props.fields.isList);\n      } else {\n        data = fullData;\n      }\n      drawBar(viewerRef.current, data, 'ft');\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default BarChart;\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, isList: PropTypes.bool }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"]}