{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/Heatmap.js","source/components/partials/tooltip.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fd07Q\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $b1282ad851fe5139$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\n\nvar $bN8Lq = parcelRequire(\"bN8Lq\");\nfunction $b1282ad851fe5139$var$Heatmap(props) {\n    const self = (0, $acw62.useRef)();\n    const scales = {\n        x: $9NlP8.scaleBand(),\n        y: $9NlP8.scaleBand(),\n        color: $9NlP8.scaleSequential()\n    };\n    const margin = {\n        top: 10,\n        right: 10,\n        bottom: 30,\n        left: 60\n    };\n    const myGroups = $9NlP8.map(props.data, (d)=>d[props.fields.x]).keys();\n    const myVars = $9NlP8.map(props.data, (d)=>d[props.fields.y]).keys();\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            // Remove old svg if any\n            $9NlP8.select(self.current).select('.tooltip').remove('div');\n            $9NlP8.select(self.current).selectAll('svg').remove('svg');\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            let { data: data } = props;\n            if (props.filters.length !== 0) data = props.filterData;\n            const svg = $9NlP8.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n            // Create and draw x-axis\n            scales.x.range([\n                0,\n                innerWidth\n            ]).domain(myGroups).padding(0.05);\n            svg.append('g').style('font-size', 13).attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(scales.x).tickSize(0)).select('.domain').remove();\n            // Create and draw y-axis\n            scales.y.range([\n                innerHeight,\n                0\n            ]).domain(myVars).padding(0.05);\n            svg.append('g').style('font-size', 13).call($9NlP8.axisLeft(scales.y).tickSize(0)).select('.domain').remove();\n            // Create color scale\n            scales.color.interpolator($9NlP8.interpolateInferno).domain($9NlP8.extent(props.data, (d)=>d[props.fields.z]));\n            // create a tooltip\n            const addLabel = (d)=>`The ${props.fields.z} of this \n      cell is: ${(0, $63tWu.numFixed)(d.z ? d.z : 0)}`;\n            const offset = {\n                x: 80,\n                y: 0\n            };\n            const tooltipHandlers = (0, $bN8Lq.default)(self.current, addLabel, offset);\n            // Group data by the values of x and y\n            // then aggregate to one value using mean\n            // @TODO add option to choose different function such as: count, max, ..\n            const visData = [];\n            myGroups.forEach((g)=>myVars.forEach((v)=>{\n                    const currentData = data.filter((d)=>d[props.fields.x] === g && d[props.fields.y] === v);\n                    visData.push({\n                        g: g,\n                        v: v,\n                        z: $9NlP8.mean(currentData, (d)=>d[props.fields.z])\n                    });\n                }));\n            // Draw each cell\n            svg.selectAll().data(visData, (d)=>`${d.g}:${d.v}`).enter().append('rect').attr('x', (d)=>scales.x(d.g)).attr('y', (d)=>scales.y(d.v)).attr('rx', 4).attr('ry', 4).attr('width', scales.x.bandwidth()).attr('height', scales.y.bandwidth()).style('fill', (d)=>scales.color(d.z)).style('stroke-width', 4).style('stroke', 'none').style('opacity', 0.8).on('mousemove', tooltipHandlers.mousemove).on('mouseleave', tooltipHandlers.mouseleave).on('click', (d)=>{\n                const filters = [\n                    {\n                        id: `${props.id}_x`,\n                        title: props.title,\n                        field: props.fields.x,\n                        operation: 'in',\n                        values: [\n                            d.g\n                        ]\n                    },\n                    {\n                        id: `${props.id}_y`,\n                        title: props.title,\n                        field: props.fields.y,\n                        operation: 'in',\n                        values: [\n                            d.v\n                        ]\n                    }\n                ];\n                props.filterAdded(filters);\n            });\n        }, 100);\n    }, [\n        props.layout,\n        props.filters,\n        props.filterData\n    ]);\n    return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $b1282ad851fe5139$export$2e2bcd8739ae039 = $b1282ad851fe5139$var$Heatmap;\n$b1282ad851fe5139$var$Heatmap.propTypes = {\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        x: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        z: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired\n    }).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    layout: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        width: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired,\n        currentCols: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired\n    }).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired\n};\n\n});\nparcelRegister(\"bN8Lq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $895b11a613892f4e$export$2e2bcd8739ae039);\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */ function $895b11a613892f4e$var$createTooltip(mount, addLabel, offset) {\n    const tooltip = $9NlP8.select(mount).append('div').style('opacity', 1).attr('class', 'tooltip').style('display', 'none').style('background-color', 'white').style('border', 'solid').style('border-width', '2px').style('border-radius', '5px').style('padding', '5px');\n    const mousemove = function move(d) {\n        tooltip.html(addLabel(d)).style('display', '').style('left', `${offset.x + $9NlP8.mouse(this)[0]}px`).style('top', `${offset.y + $9NlP8.mouse(this)[1]}px`);\n    };\n    const mouseleave = function leave() {\n        tooltip.style('display', 'none');\n    };\n    return {\n        mousemove: mousemove,\n        mouseleave: mouseleave\n    };\n}\nvar $895b11a613892f4e$export$2e2bcd8739ae039 = $895b11a613892f4e$var$createTooltip;\n\n});\n\n\n\n//# sourceMappingURL=Heatmap.1d6a2de2.js.map\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\nimport createTooltip from '../../partials/tooltip';\n\nfunction Heatmap(props) {\n  const self = useRef();\n  const scales = {\n    x: d3.scaleBand(),\n    y: d3.scaleBand(),\n    color: d3.scaleSequential(),\n  };\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 30,\n    left: 60,\n  };\n\n  const myGroups = d3.map(props.data, (d) => d[props.fields.x]).keys();\n  const myVars = d3.map(props.data, (d) => d[props.fields.y]).keys();\n\n  useEffect(() => {\n    setTimeout(() => {\n      // Remove old svg if any\n      d3.select(self.current).select('.tooltip').remove('div');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Create and draw x-axis\n      scales.x.range([0, innerWidth]).domain(myGroups).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.x).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create and draw y-axis\n      scales.y.range([innerHeight, 0]).domain(myVars).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .call(d3.axisLeft(scales.y).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create color scale\n      scales.color\n        .interpolator(d3.interpolateInferno)\n        .domain(d3.extent(props.data, (d) => d[props.fields.z]));\n\n      // create a tooltip\n      const addLabel = (d) => `The ${props.fields.z} of this \n      cell is: ${numFixed(d.z ? d.z : 0)}`;\n      const offset = {\n        x: 80,\n        y: 0,\n      };\n      const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n\n      // Group data by the values of x and y\n      // then aggregate to one value using mean\n      // @TODO add option to choose different function such as: count, max, ..\n      const visData = [];\n      myGroups.forEach((g) => myVars.forEach((v) => {\n        const currentData = data.filter(\n          (d) => d[props.fields.x] === g && d[props.fields.y] === v,\n        );\n        visData.push({\n          g,\n          v,\n          z: d3.mean(currentData, (d) => d[props.fields.z]),\n        });\n      }));\n\n      // Draw each cell\n      svg\n        .selectAll()\n        .data(visData, (d) => `${d.g}:${d.v}`)\n        .enter()\n        .append('rect')\n        .attr('x', (d) => scales.x(d.g))\n        .attr('y', (d) => scales.y(d.v))\n        .attr('rx', 4)\n        .attr('ry', 4)\n        .attr('width', scales.x.bandwidth())\n        .attr('height', scales.y.bandwidth())\n        .style('fill', (d) => scales.color(d.z))\n        .style('stroke-width', 4)\n        .style('stroke', 'none')\n        .style('opacity', 0.8)\n        .on('mousemove', tooltipHandlers.mousemove)\n        .on('mouseleave', tooltipHandlers.mouseleave)\n        .on('click', (d) => {\n          const filters = [\n            {\n              id: `${props.id}_x`,\n              title: props.title,\n              field: props.fields.x,\n              operation: 'in',\n              values: [d.g],\n            },\n            {\n              id: `${props.id}_y`,\n              title: props.title,\n              field: props.fields.y,\n              operation: 'in',\n              values: [d.v],\n            },\n          ];\n          props.filterAdded(filters);\n        });\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default Heatmap;\n\nHeatmap.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string.isRequired,\n  }).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n","import * as d3 from 'd3';\n\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */\n\nfunction createTooltip(mount, addLabel, offset) {\n  const tooltip = d3\n    .select(mount)\n    .append('div')\n    .style('opacity', 1)\n    .attr('class', 'tooltip')\n    .style('display', 'none')\n    .style('background-color', 'white')\n    .style('border', 'solid')\n    .style('border-width', '2px')\n    .style('border-radius', '5px')\n    .style('padding', '5px');\n\n  const mousemove = function move(d) {\n    tooltip\n      .html(addLabel(d))\n      .style('display', '')\n      .style('left', `${offset.x + d3.mouse(this)[0]}px`)\n      .style('top', `${offset.y + d3.mouse(this)[1]}px`);\n  };\n\n  const mouseleave = function leave() {\n    tooltip.style('display', 'none');\n  };\n\n  return { mousemove, mouseleave };\n}\n\nexport default createTooltip;\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$b1282ad851fe5139$export$2e2bcd8739ae039","$ayMG0","$acw62","$9NlP8","$c9Z8w","$63tWu","$bN8Lq","$b1282ad851fe5139$var$Heatmap","props","self","useRef","scales","x","scaleBand","y","color","scaleSequential","myGroups","map","data","d","fields","keys","myVars","useEffect","setTimeout","select","current","remove","selectAll","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","filters","length","filterData","svg","append","attr","range","domain","padding","style","call","axisBottom","tickSize","axisLeft","interpolator","interpolateInferno","extent","z","tooltipHandlers","numFixed","visData","forEach","g","currentData","filter","push","mean","enter","bandwidth","on","mousemove","mouseleave","id","title","field","operation","values","filterAdded","layout","jsx","ref","role","propTypes","string","isRequired","arrayOf","shape","number","currentCols","func","$895b11a613892f4e$export$2e2bcd8739ae039","mount","addLabel","offset","tooltip","html","mouse"],"version":3,"file":"Heatmap.1d6a2de2.js.map"}