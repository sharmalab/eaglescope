{"version":3,"sources":["components/VisualTools/Chart/KMCurve.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","toString","slice","name","Array","from","test","iter","isArray","len","length","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","isUndefined","d","toLowerCase","KMCurve","exports","_PureComponent","PureComponent","_super","_this","React","createRef","maxTime","NEGATIVE_INFINITY","state","margin","top","right","bottom","left","filter","data","transform","field","fields","_this2","setTimeout","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","select","append","attr","viewer","concat","xScale","scaleLinear","domain","range","yScale","color","scaleOrdinal","map","quantize","interpolateSpectral","axisBottom","ticks","text","time","unit","axisLeft","forEach","drawKMCurve","lg","selectAll","enter","style","offset","x","getBBox","eventValue","censoredValue","group","event","filteredData","collapsed_stage","Math","max","groups","nest","entries","rs","g","risk","values","sortKeys","b","rollup","v","censor","points","currentTime","c","push","censored","_this3","line","curve","curveStepAfter","y","datum","point","drawLine","createElement","id","ref","propTypes","PropTypes","arrayOf","shape","isRequired","string","defaultProps"],"mappings":"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","file":"KMCurve.528ee624.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nfunction isUndefined(d) {\n  return d === undefined || d == null || (typeof d === 'string' && d.toLowerCase() === 'na');\n}\nexport default class KMCurve extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.maxTime = Number.NEGATIVE_INFINITY;\n    this.state = {\n      margin: {\n        top: 35,\n        right: 20,\n        bottom: 45,\n        left: 45,\n      },\n    };\n    if (this.props.filter) {\n      this.state.data = this.transform(\n        this.props.data.filter((d) => d[this.props.filter.field] === this.props.filter.value),\n        this.props.fields,\n      );\n    } else {\n      this.state.data = this.transform(this.props.data, this.props.fields);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const rect = this.self.current.getBoundingClientRect();\n      const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},${this.state.margin.top})`);\n      //\n      this.xScale = d3.scaleLinear().domain([0, this.maxTime]).range([0, innerWidth]);\n\n      this.yScale = d3.scaleLinear().domain([0, 1]).range([innerHeight, 0]);\n\n      this.color = d3\n        .scaleOrdinal()\n        .domain(this.state.data.map((d) => d.key))\n        .range(d3.quantize((t) => d3.interpolateSpectral(t), this.state.data.length));\n\n      const xaxisGroup = viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).ticks(4)); // .tickSize(-innerWidth));\n      xaxisGroup\n        .append('text')\n        .attr('y', 30)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .text(`Time ${this.props.fields.time.unit ? `(${this.props.fields.time.unit})` : ''}`);\n\n      // add the y Axis\n      const yaxisGroup = viewer.append('g').call(d3.axisLeft(this.yScale).ticks(4)); // .tickSize(-innerWidth)\n      yaxisGroup\n        .append('text')\n        .attr('y', -30)\n        .attr('x', -innerHeight / 3)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .attr('transform', 'rotate(-90)')\n        .text('Survival Probability');\n\n      this.state.data.forEach((d) => this.drawKMCurve(viewer, d));\n\n      const height = 0;\n      const nodeWidth = (d) => d.getBBox().width;\n      const legend = svg\n        .append('g')\n        .attr('class', 'legend')\n        .attr('transform', `translate(${this.state.margin.left + innerWidth / 2},0)`);\n\n      const lg = legend\n        .selectAll('g')\n        .data(this.state.data)\n        .enter()\n        .append('g')\n        .attr('transform', (d, i) => `translate(${i * 100},${height + 15})`);\n\n      lg.append('rect')\n        .style('fill', (d) => this.color(d.key))\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 10)\n        .attr('height', 10);\n\n      lg.append('text')\n        .style('font-family', 'Georgia')\n        .style('font-size', '13px')\n        .attr('x', 17.5)\n        .attr('y', 10)\n        .text((d) => d.key);\n\n      let offset = 0;\n      lg.attr('transform', function transform() {\n        const x = offset;\n        offset += nodeWidth(this) + 10;\n        return `translate(${x},${height + 10})`;\n      });\n    }, 500);\n  }\n\n  transform(data, field) {\n    const { eventValue } = field;\n    const { censoredValue } = field;\n    const group = field.group.field;\n    const time = field.time.field;\n    const event = field.event.field;\n\n    const filteredData = data.filter(\n      (d) => d.collapsed_stage !== 'stage_x/NR'\n        && !isUndefined(d[time])\n        && !isUndefined(d[event])\n        && !isUndefined(d[group]),\n    );\n    this.maxTime = Math.max(...filteredData.map((d) => d[time]));\n    const groups = d3\n      .nest()\n      .key((d) => d[group])\n      .entries(filteredData);\n    const rs = [];\n    groups.forEach((g) => {\n      const { key } = g;\n      let risk = g.values.length;\n      const values = d3\n        .nest()\n        .key((d) => +d[time])\n        .sortKeys((a, b) => +a - +b)\n        .rollup((v) => ({\n          event: v.filter((d) => d[event] === eventValue).length,\n          censor: v.filter((d) => d[event] === censoredValue).length,\n        }))\n        .entries(g.values);\n      let p = 1;\n      const points = [];\n      values.forEach((d) => {\n        const currentTime = +d.key;\n        const e = d.value.event;\n        const c = d.value.censor;\n        if (currentTime < 0) return;\n        if (e > 0) {\n          p *= 1 - e / risk;\n          const censored = false;\n          points.push({ p, currentTime, censored });\n        }\n        if (c > 0) {\n          const censored = true;\n          points.push({ p, currentTime, censored });\n        }\n        risk -= e + c;\n      });\n      rs.push({ key, points });\n    });\n\n    return rs;\n  }\n\n  drawLine(viewer, points, color) {\n    const line = d3\n      .line()\n      .curve(d3.curveStepAfter)\n      .x((d) => this.xScale(d.time))\n      .y((d) => this.yScale(d.p));\n    viewer\n      .append('path')\n      .datum(points)\n      .attr('class', 'line')\n      .style('stroke', color)\n      .attr('d', line);\n\n    points.forEach((point) => {\n      if (point.censored) {\n        const p = [\n          {\n            p: point.p - 0.015,\n            time: point.time,\n          },\n          {\n            p: point.p + 0.015,\n            time: point.time,\n          },\n        ];\n        viewer.append('path').datum(p).attr('class', 'mark').style('stroke', color)\n          .attr('d', line);\n      }\n    });\n  }\n\n  drawKMCurve(viewer, d) {\n    // draw lines\n    this.drawLine(viewer, d.points, this.color(d.key));\n    // draw marks\n  }\n\n  render() {\n    return <div id={this.props.id} ref={this.self} style={{ width: '100%', height: '100%' }} />;\n  }\n}\n\nKMCurve.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, time: PropTypes.shape() }).isRequired,\n  filter: PropTypes.shape({ field: PropTypes.string, value: PropTypes.string }),\n  id: PropTypes.string.isRequired,\n};\n\nKMCurve.defaultProps = {\n  filter: {},\n};\n"]}