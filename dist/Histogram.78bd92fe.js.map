{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/Histogram.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"92AJR\", function(module, exports) {\n\"use strict\";\nfunction $6950cc8086f38765$var$_typeof(o) {\n    \"@babel/helpers - typeof\";\n    return $6950cc8086f38765$var$_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, $6950cc8086f38765$var$_typeof(o);\n}\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports[\"default\"] = void 0;\n\nvar $6950cc8086f38765$var$_react = $6950cc8086f38765$var$_interopRequireWildcard((parcelRequire(\"acw62\")));\n\nvar $6950cc8086f38765$var$d3 = $6950cc8086f38765$var$_interopRequireWildcard((parcelRequire(\"9NlP8\")));\n\nvar $6950cc8086f38765$var$_propTypes = $6950cc8086f38765$var$_interopRequireDefault((parcelRequire(\"c9Z8w\")));\n\nvar $63tWu = parcelRequire(\"63tWu\");\nfunction $6950cc8086f38765$var$_interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n        \"default\": e\n    };\n}\nfunction $6950cc8086f38765$var$_getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(), t = new WeakMap();\n    return ($6950cc8086f38765$var$_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n        return e ? t : r;\n    })(e);\n}\nfunction $6950cc8086f38765$var$_interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != $6950cc8086f38765$var$_typeof(e) && \"function\" != typeof e) return {\n        \"default\": e\n    };\n    var t = $6950cc8086f38765$var$_getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var u in e)if (\"default\" !== u && ({}).hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n[\"default\"] = e, t && t.set(e, n), n;\n}\nfunction $6950cc8086f38765$var$_slicedToArray(r, e) {\n    return $6950cc8086f38765$var$_arrayWithHoles(r) || $6950cc8086f38765$var$_iterableToArrayLimit(r, e) || $6950cc8086f38765$var$_unsupportedIterableToArray(r, e) || $6950cc8086f38765$var$_nonIterableRest();\n}\nfunction $6950cc8086f38765$var$_nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction $6950cc8086f38765$var$_unsupportedIterableToArray(r, a) {\n    if (r) {\n        if (\"string\" == typeof r) return $6950cc8086f38765$var$_arrayLikeToArray(r, a);\n        var t = ({}).toString.call(r).slice(8, -1);\n        return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? $6950cc8086f38765$var$_arrayLikeToArray(r, a) : void 0;\n    }\n}\nfunction $6950cc8086f38765$var$_arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];\n    return n;\n}\nfunction $6950cc8086f38765$var$_iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction $6950cc8086f38765$var$_arrayWithHoles(r) {\n    if (Array.isArray(r)) return r;\n}\n/**\n * @function Histogram\n * @description Creates an interactive histogram chart\n *              User can select specific range of x by brushing\n * @param {Object} data - total data without filtering\n * @param {Array} fields - contains filed to create histogram on\n * @param {String} id - HTML id for the chart\n * @param {Integer} binsCount - number of bins to split data on\n * @param {Object} filterData - data after applying filters\n * @param {Array} filters - current filters\n * @param {Function} filterAdded - handler for adding new filter\n * @returns {Component}\n */ function $6950cc8086f38765$var$Histogram(_ref) {\n    var data = _ref.data, fields = _ref.fields, id = _ref.id, _ref$binsCount = _ref.binsCount, binsCount = _ref$binsCount === void 0 ? 10 : _ref$binsCount, filterData = _ref.filterData, filters = _ref.filters, filterAdded = _ref.filterAdded, layout = _ref.layout;\n    var svgRef = (0, $6950cc8086f38765$var$_react.useRef)();\n    var _useState = (0, $6950cc8086f38765$var$_react.useState)({\n        x: $6950cc8086f38765$var$d3.scaleLinear(),\n        y: $6950cc8086f38765$var$d3.scaleLinear()\n    }), _useState2 = $6950cc8086f38765$var$_slicedToArray(_useState, 1), Scales = _useState2[0];\n    var _useState3 = (0, $6950cc8086f38765$var$_react.useState)({\n        hist: $6950cc8086f38765$var$d3.histogram(),\n        bins: null\n    }), _useState4 = $6950cc8086f38765$var$_slicedToArray(_useState3, 1), histogram = _useState4[0];\n    var margin = {\n        top: 10,\n        right: 10,\n        bottom: 30,\n        left: 40\n    };\n    // initialize svg and draw base histogram\n    (0, $6950cc8086f38765$var$_react.useEffect)(function() {\n        setTimeout(function() {\n            $6950cc8086f38765$var$d3.select(svgRef.current).selectAll('svg').remove('svg');\n            var rect = svgRef.current.getBoundingClientRect();\n            var innerWidth = rect.width - margin.left - margin.right;\n            var innerHeight = rect.height - margin.top - margin.bottom;\n            var svg = $6950cc8086f38765$var$d3.select(svgRef.current).append('svg').attr('width', rect.width).attr('height', rect.height).append('g').attr('transform', \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n            Scales.x.domain([\n                0,\n                $6950cc8086f38765$var$d3.max(data, function(d) {\n                    return d[fields.x];\n                })\n            ]).range([\n                0,\n                innerWidth\n            ]);\n            histogram.hist.value(function(d) {\n                return d[fields.x];\n            }).domain(Scales.x.domain()).thresholds(Scales.x.ticks(binsCount));\n            histogram.bins = histogram.hist(data);\n            Scales.y = $6950cc8086f38765$var$d3.scaleLinear().range([\n                innerHeight,\n                0\n            ]).domain([\n                0,\n                $6950cc8086f38765$var$d3.max(histogram.bins, function(d) {\n                    return d.length;\n                })\n            ]);\n            // brush\n            var brush = $6950cc8086f38765$var$d3.brushX().extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    innerWidth,\n                    innerHeight\n                ]\n            ]).on('end', function() {\n                if ($6950cc8086f38765$var$d3.event.selection) {\n                    var _ref2 = [\n                        $6950cc8086f38765$var$d3.event.selection[0],\n                        $6950cc8086f38765$var$d3.event.selection[1]\n                    ], x0 = _ref2[0], x1 = _ref2[1];\n                    filterAdded([\n                        {\n                            id: id,\n                            field: fields.x,\n                            operation: 'range',\n                            values: [\n                                (0, $63tWu.numFixed)(Scales.x.invert(x0)),\n                                (0, $63tWu.numFixed)(Scales.x.invert(x1))\n                            ]\n                        }\n                    ]);\n                }\n            });\n            svg.append('g').call(brush);\n            // draw x-axis\n            svg.append('g').attr('transform', \"translate(0,\".concat(innerHeight, \")\")).call($6950cc8086f38765$var$d3.axisBottom(Scales.x));\n            // draw y-axis\n            var view = svg.append('g').call($6950cc8086f38765$var$d3.axisLeft(Scales.y)).append('g').attr('class', 'hist-area');\n            // draw histogram rectangles\n            view.selectAll('.bar').data(histogram.bins).join('rect').attr('class', 'bar').attr('x', 1).attr('transform', function(d) {\n                return \"translate(\".concat(Scales.x(d.x0), \",\").concat(Scales.y(d.length), \")\");\n            }).attr('width', function(d) {\n                return Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0);\n            }).attr('height', function(d) {\n                return innerHeight - Scales.y(d.length);\n            }).style('fill', '#87CEFA');\n        }, 100);\n    }, [\n        layout\n    ]);\n    // draw filtered histogram\n    (0, $6950cc8086f38765$var$_react.useEffect)(function() {\n        setTimeout(function() {\n            var rect = svgRef.current.getBoundingClientRect();\n            var innerHeight = rect.height - margin.top - margin.bottom;\n            var bins = histogram.bins;\n            if (filters.length !== 0) bins = histogram.hist(filterData);\n            $6950cc8086f38765$var$d3.select(svgRef.current).selectAll('.hist-area').selectAll('.bar-f').data(bins).join('rect').attr('class', 'bar-f').style('transform', 'scale(1, -1)').attr('x', function(d) {\n                return Scales.x(d.x0);\n            }).attr('y', function() {\n                return -innerHeight;\n            }).transition().duration(1000).attr('width', function(d) {\n                return Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0);\n            }).attr('height', function(d) {\n                return innerHeight - Scales.y(d.length);\n            }).style('fill', '#4682B4');\n        }, 100);\n    }, [\n        filters,\n        filterData,\n        layout\n    ]);\n    return /*#__PURE__*/ $6950cc8086f38765$var$_react[\"default\"].createElement(\"div\", {\n        id: id,\n        ref: svgRef,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $6950cc8086f38765$var$_default = module.exports[\"default\"] = $6950cc8086f38765$var$Histogram;\n$6950cc8086f38765$var$Histogram.propTypes = {\n    data: $6950cc8086f38765$var$_propTypes[\"default\"].arrayOf($6950cc8086f38765$var$_propTypes[\"default\"].shape({})).isRequired,\n    fields: $6950cc8086f38765$var$_propTypes[\"default\"].shape({\n        x: $6950cc8086f38765$var$_propTypes[\"default\"].string.isRequired\n    }).isRequired,\n    id: $6950cc8086f38765$var$_propTypes[\"default\"].string.isRequired,\n    binsCount: $6950cc8086f38765$var$_propTypes[\"default\"].number,\n    filterData: $6950cc8086f38765$var$_propTypes[\"default\"].arrayOf($6950cc8086f38765$var$_propTypes[\"default\"].shape({})).isRequired,\n    filters: $6950cc8086f38765$var$_propTypes[\"default\"].arrayOf($6950cc8086f38765$var$_propTypes[\"default\"].shape({})).isRequired,\n    filterAdded: $6950cc8086f38765$var$_propTypes[\"default\"].func.isRequired,\n    layout: $6950cc8086f38765$var$_propTypes[\"default\"].shape({\n        width: $6950cc8086f38765$var$_propTypes[\"default\"].number.isRequired,\n        currentCols: $6950cc8086f38765$var$_propTypes[\"default\"].number.isRequired\n    }).isRequired\n};\n$6950cc8086f38765$var$Histogram.defaultProps = {\n    binsCount: 10\n};\n\n});\n\n\n//# sourceMappingURL=Histogram.78bd92fe.js.map\n","import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\n/**\n * @function Histogram\n * @description Creates an interactive histogram chart\n *              User can select specific range of x by brushing\n * @param {Object} data - total data without filtering\n * @param {Array} fields - contains filed to create histogram on\n * @param {String} id - HTML id for the chart\n * @param {Integer} binsCount - number of bins to split data on\n * @param {Object} filterData - data after applying filters\n * @param {Array} filters - current filters\n * @param {Function} filterAdded - handler for adding new filter\n * @returns {Component}\n */\n\nfunction Histogram({\n  data, fields, id, binsCount = 10, filterData, filters, filterAdded, layout,\n}) {\n  const svgRef = useRef();\n  const [Scales] = useState({\n    x: d3.scaleLinear(),\n    y: d3.scaleLinear(),\n  });\n  const [histogram] = useState({\n    hist: d3.histogram(),\n    bins: null,\n  });\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 30,\n    left: 40,\n  };\n\n  // initialize svg and draw base histogram\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(svgRef.current).selectAll('svg').remove('svg');\n      const rect = svgRef.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      const svg = d3\n        .select(svgRef.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      Scales.x.domain([0, d3.max(data, (d) => d[fields.x])]).range([0, innerWidth]);\n\n      histogram.hist\n        .value((d) => d[fields.x])\n        .domain(Scales.x.domain())\n        .thresholds(Scales.x.ticks(binsCount));\n\n      histogram.bins = histogram.hist(data);\n\n      Scales.y = d3\n        .scaleLinear()\n        .range([innerHeight, 0])\n        .domain([0, d3.max(histogram.bins, (d) => d.length)]);\n\n      // brush\n      const brush = d3\n        .brushX()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ])\n        .on('end', () => {\n          if (d3.event.selection) {\n            const [x0, x1] = [d3.event.selection[0], d3.event.selection[1]];\n            filterAdded([\n              {\n                id,\n                field: fields.x,\n                operation: 'range',\n                values: [numFixed(Scales.x.invert(x0)), numFixed(Scales.x.invert(x1))],\n              },\n            ]);\n          }\n        });\n      svg.append('g').call(brush);\n\n      // draw x-axis\n      svg\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(Scales.x));\n\n      // draw y-axis\n      const view = svg\n        .append('g')\n        .call(d3.axisLeft(Scales.y))\n        .append('g')\n        .attr('class', 'hist-area');\n\n      // draw histogram rectangles\n      view\n        .selectAll('.bar')\n        .data(histogram.bins)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr('x', 1)\n        .attr('transform', (d) => `translate(${Scales.x(d.x0)},${Scales.y(d.length)})`)\n        .attr('width', (d) => Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0))\n        .attr('height', (d) => innerHeight - Scales.y(d.length))\n        .style('fill', '#87CEFA');\n    }, 100);\n  }, [layout]);\n\n  // draw filtered histogram\n  useEffect(() => {\n    setTimeout(() => {\n      const rect = svgRef.current.getBoundingClientRect();\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { bins } = histogram;\n      if (filters.length !== 0) {\n        bins = histogram.hist(filterData);\n      }\n\n      d3.select(svgRef.current)\n        .selectAll('.hist-area')\n        .selectAll('.bar-f')\n        .data(bins)\n        .join('rect')\n        .attr('class', 'bar-f')\n        .style('transform', 'scale(1, -1)')\n        .attr('x', (d) => Scales.x(d.x0))\n        .attr('y', () => -innerHeight)\n        .transition()\n        .duration(1000)\n        .attr('width', (d) => Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0))\n        .attr('height', (d) => innerHeight - Scales.y(d.length))\n        .style('fill', '#4682B4');\n    }, 100);\n  }, [filters, filterData, layout]);\n  return <div id={id} ref={svgRef} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default Histogram;\n\nHistogram.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired }).isRequired,\n  id: PropTypes.string.isRequired,\n  binsCount: PropTypes.number,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nHistogram.defaultProps = {\n  binsCount: 10,\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$6950cc8086f38765$var$_typeof","o","Symbol","iterator","constructor","prototype","Object","defineProperty","value","e","$6950cc8086f38765$var$_react","$6950cc8086f38765$var$_interopRequireWildcard","$6950cc8086f38765$var$d3","$6950cc8086f38765$var$_propTypes","__esModule","$63tWu","$6950cc8086f38765$var$_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","$6950cc8086f38765$var$_slicedToArray","$6950cc8086f38765$var$_arrayWithHoles","Array","isArray","$6950cc8086f38765$var$_iterableToArrayLimit","l","f","next","done","push","length","$6950cc8086f38765$var$_unsupportedIterableToArray","$6950cc8086f38765$var$_arrayLikeToArray","toString","slice","name","from","test","$6950cc8086f38765$var$_nonIterableRest","TypeError","$6950cc8086f38765$var$Histogram","_ref","data","fields","id","_ref$binsCount","binsCount","filterData","filters","filterAdded","layout","svgRef","useRef","Scales","_useState2","useState","x","scaleLinear","y","histogram","_useState4","hist","bins","useEffect","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","append","attr","concat","domain","max","d","range","thresholds","ticks","brush","brushX","extent","on","event","selection","_ref2","x0","x1","field","operation","values","numFixed","invert","axisBottom","view","axisLeft","join","Math","style","transition","duration","createElement","ref","role","propTypes","arrayOf","shape","isRequired","string","number","func","currentCols","defaultProps","_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","_getRequireWildcardCache","_typeof","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","Histogram","_useState","_useState3","margin","top","right","bottom","left","_default","PropTypes"],"version":3,"file":"Histogram.78bd92fe.js.map"}