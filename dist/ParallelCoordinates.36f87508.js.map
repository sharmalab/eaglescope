{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/ParallelCoordinates.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"d2VX5\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $97f86a5098f2390d$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\nfunction $97f86a5098f2390d$var$ParallelCoordinates(props) {\n    const self = (0, $acw62.useRef)();\n    const foregroundRef = (0, $acw62.useRef)();\n    const backgroundRef = (0, $acw62.useRef)();\n    const dimensions = props.fields.y;\n    const scales = (0, $acw62.useRef)({\n        x: $9NlP8.scalePoint(),\n        y: {}\n    });\n    const margin = {\n        top: 25,\n        right: 40,\n        bottom: 20,\n        left: 40\n    };\n    function path(d, ctx) {\n        ctx.beginPath();\n        dimensions.forEach((p, i)=>{\n            if (i === 0) ctx.moveTo(scales.current.x(p), scales.current.y[p](d[p]));\n            else ctx.lineTo(scales.current.x(p), scales.current.y[p](d[p]));\n        });\n        ctx.stroke();\n    }\n    function brush() {\n        if (!$9NlP8.event.selection) return;\n        const field = dimensions.filter((d)=>scales.current.y[d].brush === $9NlP8.event.target)[0];\n        const [x1, x0] = [\n            $9NlP8.event.selection[0],\n            $9NlP8.event.selection[1]\n        ];\n        props.filterAdded([\n            {\n                id: props.id,\n                title: props.title,\n                field: field,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(scales.current.y[field].invert(x0)),\n                    (0, $63tWu.numFixed)(scales.current.y[field].invert(x1))\n                ]\n            }\n        ]);\n    }\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            $9NlP8.select(self.current).selectAll('canvas').remove('canvas');\n            $9NlP8.select(self.current).selectAll('svg').remove('svg');\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            backgroundRef.current = $9NlP8.select(self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${margin.left}px,${margin.top}px)`);\n            foregroundRef.current = $9NlP8.select(self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${margin.left}px,${margin.top - innerHeight - 5}px)`);\n            backgroundRef.current = backgroundRef.current.node().getContext('2d');\n            foregroundRef.current = foregroundRef.current.node().getContext('2d');\n            foregroundRef.current.strokeStyle = 'rgba(0,100,160,0.24)';\n            backgroundRef.current.strokeStyle = 'rgba(0,0,0,0.1)';\n            const svg = $9NlP8.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height).style('transform', `translate(${0}px,${-2 * innerHeight - margin.top / 2}px)`).append('g').style('transform', `translate(${margin.left}px,${margin.top}px)`);\n            scales.current.x.domain(dimensions);\n            scales.current.x.range([\n                0,\n                innerWidth\n            ], 1);\n            dimensions.forEach((d)=>{\n                scales.current.y[d] = $9NlP8.scaleLinear().domain($9NlP8.extent(props.data, (p)=>+p[d])).range([\n                    innerHeight,\n                    0\n                ]);\n            });\n            const g = svg.selectAll('.dimension').data(dimensions).enter().append('g').attr('class', 'dimension').attr('transform', (d)=>`translate(${scales.current.x(d)})`);\n            // Add an axis and title.\n            g.append('g').attr('class', 'axis').each(function addAxis(d) {\n                $9NlP8.select(this).call($9NlP8.axisLeft(scales.current.y[d]));\n            }).append('text').style('text-anchor', 'middle').attr('y', -9).text((d)=>d);\n            g.append('g').attr('class', 'brush').each(function addBrush(d) {\n                $9NlP8.select(this).call(scales.current.y[d].brush = $9NlP8.brushY().extent([\n                    [\n                        -10,\n                        0\n                    ],\n                    [\n                        10,\n                        innerHeight\n                    ]\n                ]).on('end', brush));\n            }).selectAll('rect').attr('x', -8).attr('width', 16);\n        }, 100);\n    }, [\n        props.layout\n    ]);\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            if (!props.filterData) return;\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            // Render selected lines\n            foregroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n            backgroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n            if (props.filters.length === 0) props.data.forEach((d)=>{\n                path(d, foregroundRef.current);\n            });\n            else props.data.forEach((d)=>{\n                if (props.filterData.includes(d)) path(d, foregroundRef.current);\n                else path(d, backgroundRef.current);\n            });\n        }, 100);\n    }, [\n        props.filters,\n        props.filterData,\n        props.layout\n    ]);\n    return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createElement(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $97f86a5098f2390d$export$2e2bcd8739ae039 = $97f86a5098f2390d$var$ParallelCoordinates;\n$97f86a5098f2390d$var$ParallelCoordinates.propTypes = {\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string).isRequired\n    }).isRequired,\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired,\n    layout: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        width: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired,\n        currentCols: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired\n    }).isRequired\n};\n\n});\n\n\n//# sourceMappingURL=ParallelCoordinates.36f87508.js.map\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nfunction ParallelCoordinates(props) {\n  const self = useRef();\n  const foregroundRef = useRef();\n  const backgroundRef = useRef();\n  const dimensions = props.fields.y;\n  const scales = useRef({\n    x: d3.scalePoint(),\n    y: {},\n  });\n  const margin = {\n    top: 25,\n    right: 40,\n    bottom: 20,\n    left: 40,\n  };\n\n  function path(d, ctx) {\n    ctx.beginPath();\n    dimensions.forEach((p, i) => {\n      if (i === 0) {\n        ctx.moveTo(scales.current.x(p), scales.current.y[p](d[p]));\n      } else {\n        ctx.lineTo(scales.current.x(p), scales.current.y[p](d[p]));\n      }\n    });\n    ctx.stroke();\n  }\n\n  function brush() {\n    if (!d3.event.selection) return;\n    const field = dimensions.filter((d) => scales.current.y[d].brush === d3.event.target)[0];\n    const [x1, x0] = [d3.event.selection[0], d3.event.selection[1]];\n    props.filterAdded([\n      {\n        id: props.id,\n        title: props.title,\n        field,\n        operation: 'range',\n        values: [\n          numFixed(scales.current.y[field].invert(x0)),\n          numFixed(scales.current.y[field].invert(x1)),\n        ],\n      },\n    ]);\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('canvas').remove('canvas');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      backgroundRef.current = d3\n        .select(self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${margin.left}px,${margin.top}px)`);\n\n      foregroundRef.current = d3\n        .select(self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${margin.left}px,${margin.top - innerHeight - 5}px)`);\n\n      backgroundRef.current = backgroundRef.current.node().getContext('2d');\n      foregroundRef.current = foregroundRef.current.node().getContext('2d');\n\n      foregroundRef.current.strokeStyle = 'rgba(0,100,160,0.24)';\n      backgroundRef.current.strokeStyle = 'rgba(0,0,0,0.1)';\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .style('transform', `translate(${0}px,${-2 * innerHeight - margin.top / 2}px)`)\n        .append('g')\n        .style('transform', `translate(${margin.left}px,${margin.top}px)`);\n\n      scales.current.x.domain(dimensions);\n      scales.current.x.range([0, innerWidth], 1);\n\n      dimensions.forEach((d) => {\n        scales.current.y[d] = d3\n          .scaleLinear()\n          .domain(d3.extent(props.data, (p) => +p[d]))\n          .range([innerHeight, 0]);\n      });\n\n      const g = svg\n        .selectAll('.dimension')\n        .data(dimensions)\n        .enter()\n        .append('g')\n        .attr('class', 'dimension')\n        .attr('transform', (d) => `translate(${scales.current.x(d)})`);\n\n      // Add an axis and title.\n      g.append('g')\n        .attr('class', 'axis')\n        .each(function addAxis(d) {\n          d3.select(this).call(d3.axisLeft(scales.current.y[d]));\n        })\n        .append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', -9)\n        .text((d) => d);\n\n      g.append('g')\n        .attr('class', 'brush')\n        .each(function addBrush(d) {\n          d3.select(this).call(\n            (scales.current.y[d].brush = d3\n              .brushY()\n              .extent([\n                [-10, 0],\n                [10, innerHeight],\n              ])\n              .on('end', brush)),\n          );\n        })\n        .selectAll('rect')\n        .attr('x', -8)\n        .attr('width', 16);\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (!props.filterData) return;\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      // Render selected lines\n      foregroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n      backgroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n      if (props.filters.length === 0) {\n        props.data.forEach((d) => {\n          path(d, foregroundRef.current);\n        });\n      } else {\n        props.data.forEach((d) => {\n          if (props.filterData.includes(d)) {\n            path(d, foregroundRef.current);\n          } else {\n            path(d, backgroundRef.current);\n          }\n        });\n      }\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default ParallelCoordinates;\n\nParallelCoordinates.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    y: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$97f86a5098f2390d$export$2e2bcd8739ae039","set","s","enumerable","$acw62","$9NlP8","$c9Z8w","$63tWu","$97f86a5098f2390d$var$ParallelCoordinates","props","self","useRef","foregroundRef","backgroundRef","dimensions","fields","y","scales","x","scalePoint","margin","top","right","bottom","left","path","d","ctx","beginPath","forEach","p","i","moveTo","current","lineTo","stroke","brush","event","selection","field","filter","target","x1","x0","filterAdded","id","title","operation","values","numFixed","invert","useEffect","setTimeout","select","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","append","attr","style","node","getContext","strokeStyle","svg","domain","range","scaleLinear","extent","data","g","enter","each","call","axisLeft","text","brushY","on","layout","filterData","clearRect","filters","length","includes","createElement","ref","role","propTypes","string","isRequired","arrayOf","shape","func","number","currentCols","React","d3","PropTypes","ParallelCoordinates","addAxis","addBrush"],"version":3,"file":"ParallelCoordinates.36f87508.js.map"}