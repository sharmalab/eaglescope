{"version":3,"sources":["components/VisualTools/Chart/HorizontalBarChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_tooltip","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","transform","data","field","nest","key","d","sortKeys","ascending","rollup","v","length","entries","HorizontalBarChart","props","margin","fields","fullData","y","self","useRef","scaleRef","hightRef","viewerRef","createTextLabel","current","selectAll","remove","enter","append","attr","bandwidth","text","on","x","filter","id","title","operation","values","filterAdded","drawBar","selection","className","arguments","undefined","tooltipHandlers","createTooltip","concat","value","updateBars","enterBars","mousemove","mouseleave","enterData","merge","transition","duration","exit","useEffect","setTimeout","select","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","f","xScale","scaleLinear","domain","max","range","yScale","scaleBand","map","padding","createYScale","axisBottom","tickSize","layout","filters","filterData","createElement","ref","style","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","func","number","currentCols"],"mappings":"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","file":"HorizontalBarChart.20ab8822.js","sourceRoot":"../source","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport createTooltip from '../../partials/tooltip';\n\nconst transform = (data, field) => {\n  const newData = d3\n    .nest()\n    .key((d) => d[field])\n    .sortKeys(d3.ascending)\n    .rollup((v) => v.length)\n    .entries(data);\n  return newData;\n};\n\nfunction HorizontalBarChart(props) {\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 35,\n    left: 10,\n  };\n\n  const fields = { y: 'key', x: 'value' };\n  const fullData = transform(props.data, props.fields.y);\n  const self = useRef();\n  const scaleRef = useRef();\n  const hightRef = useRef();\n  const viewerRef = useRef();\n\n  const createXScale = (f, width) => {\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(fullData, (d) => d[f])])\n      .range([0, width]);\n    return xScale;\n  };\n\n  const createYScale = (f, height) => {\n    // set the ranges\n    const yScale = d3\n      .scaleBand()\n      .domain(fullData.map((d) => d[f]))\n      .range([height, 0])\n      .padding(0.1);\n    return yScale;\n  };\n\n  const createTextLabel = () => {\n    viewerRef.current.selectAll('.label').remove();\n    viewerRef.current\n      .selectAll('.label')\n      .data(fullData, (d) => d[fields.y])\n      .enter()\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', 5)\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]) + scaleRef.current.y.bandwidth() / 2 + 4)\n      .text((d) => d.key)\n      .on('click', x=>{\n        const filter = {\n          id: props.id,\n          title: props.title,\n          field: props.fields.y,\n          operation: 'eq',\n          values: x.key,\n        };\n        props.filterAdded([filter])\n      });\n  };\n\n  const drawBar = (selection, data, className = 'og') => {\n    const addLabel = (d) => `${d.key}: ${d.value}`;\n    const offset = {\n      x: 30,\n      y: 10,\n    };\n    const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n    const updateBars = selection.selectAll(`rect.${className}`).data(data, (d) => d[fields.y]);\n\n    const enterBars = updateBars.enter().append('rect');\n    enterBars\n      .attr('class', `${className}`)\n      .attr('x', 0)\n      .attr('height', scaleRef.current.y.bandwidth())\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]));\n    enterBars\n      .on('mousemove', tooltipHandlers.mousemove)\n      .on('mouseleave', tooltipHandlers.mouseleave)\n      .on('click', (enterData) => {\n        const selected = enterBars.filter((d) => d === enterData);\n        const value = selected.data()[0].key;\n        const filter = {\n          id: props.id,\n          title: props.title,\n          field: props.fields.y,\n          operation: 'eq',\n          values: value,\n        };\n        props.filterAdded([filter]);\n      });\n\n    updateBars\n      .merge(enterBars)\n      .transition()\n      .duration(1000)\n      .attr('width', (d) => scaleRef.current.x(d[fields.x]))\n      .selectAll('.label')\n      .text((d) => d.key);\n    // update_bars\n\n    updateBars.exit().transition().duration(1000).attr('width', 0)\n      .remove();\n\n    return updateBars;\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n      hightRef.current = innerHeight;\n\n      // create svg\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      viewerRef.current = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      //\n      const xScale = createXScale(fields.x, innerWidth);\n      const yScale = createYScale(fields.y, innerHeight);\n      scaleRef.current = { x: xScale, y: yScale };\n\n      viewerRef.current\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(xScale).tickSize(-innerHeight));\n\n      drawBar(viewerRef.current, fullData, 'og');\n      createTextLabel();\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let data = [];\n      if (props.filters.length > 0) {\n        data = transform(props.filterData, props.fields.y);\n      } else {\n        data = fullData;\n      }\n      drawBar(viewerRef.current, data, 'ft');\n      createTextLabel();\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default HorizontalBarChart;\n\nHorizontalBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ y: PropTypes.string.isRequired }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"]}