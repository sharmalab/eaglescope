{"version":3,"sources":["components/VisualTools/VisDataTable/SelectDataTable.js"],"names":["_react","_interopRequireWildcard","require","_reactVirtualized","_reactDraggable","_interopRequireDefault","_reactFontawesome","_freeSolidSvgIcons","_arrayMove","_propTypes","_VisDataTableControl","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","allowArrayLike","it","length","F","s","done","value","_e","f","normalCompletion","didErr","err","step","next","_e2","return","minLen","toString","slice","name","test","len","arr2","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","cellRenderer","d","urlElt","link","url","field","urlbase","createElement","href","rowData","cellData","join","Fragment","dataKey","className","title","rowClassName","_ref","index","SelectDataTable","exports","_PureComponent","_super","_this","console","log","fWidth","fields","map","width","isShow","state","sortBy","sortDirection","selected","autoSizer","React","createRef","headerRenderer","resizeRow","onResize","onSortEnd","onCheckChangedHandler","onAllCheckHandler","sortHandler","getSortData","_ref2","setState","_ref3","oldIndex","newIndex","_ref4","arrayMove","checked","_ref5","_ref6","downloadSelected","downloadLimit","configProps","data","alert","_iterator","_step","record","fetch","mode","then","x","json","slide_url","window","location","protocol","replace","problematicExtensions","hasProblematicExtension","some","ext","toLowerCase","endsWith","filename","substring","lastIndexOf","document","download","body","appendChild","click","removeChild","iframe","setAttribute","src","catch","error","collator","Intl","Collator","numeric","sensitivity","_this$props","filterData","filters","_this$state","currentData","sort","b","first","SortDirection","ASC","second","compare","_ref7","deltaX","prevFields","idx","findIndex","percentDelta","_ref8","_this2","label","FontAwesomeIcon","icon","DESC","faSortDown","faSortUp","faSort","axis","defaultClassName","defaultClassNameDragging","onDrag","event","_ref9","onStart","_ref10","onStop","_ref11","setTimeout","position","zIndex","onMouseDown","stopPropagation","selectionHandler","isChecked","item","downloadField","existingIndex","indexOf","prevState","concat","_ref12","isResize","render","_this3","_this$state2","finalData","style","height","list","onCheckChanged","onAllCheck","AutoSizer","ref","_ref13","Table","headerHeight","rowHeight","rowCount","rowGetter","_ref14","Column","onClick","faFileArrowDown","color","_ref15","type","includes","onChange","cellDataGetter","_ref16","PureComponent","propTypes","PropTypes","arrayOf","shape","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AAGA,IAAAE,eAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,iBAAA,GAAAJ,OAAA;AACA,IAAAK,kBAAA,GAAAL,OAAA;AACA,IAAAM,UAAA,GAAAH,sBAAA,CAAAH,OAAA;AACA,IAAAO,UAAA,GAAAJ,sBAAA,CAAAH,OAAA;AACA,IAAAQ,oBAAA,GAAAL,sBAAA,CAAAH,OAAA;AACAA,OAAA;AAA4B,SAAAG,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAd,wBAAAc,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAH,UAAA,SAAAG,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAF,OAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAJ,CAAA,UAAAG,CAAA,CAAAE,GAAA,CAAAL,CAAA,OAAAM,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAZ,CAAA,oBAAAY,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAY,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAX,CAAA,EAAAY,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAZ,CAAA,CAAAY,CAAA,YAAAN,CAAA,CAAAR,OAAA,GAAAE,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAc,GAAA,CAAAjB,CAAA,EAAAM,CAAA,GAAAA,CAAA;AAAA,SAAAY,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAP,SAAA,qBAAAM,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAI,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAG,2BAAA,CAAAH,GAAA,KAAAI,kBAAA;AAAA,SAAAA,mBAAA,cAAAC,SAAA;AAAA,SAAAH,iBAAAI,IAAA,eAAAV,MAAA,oBAAAU,IAAA,CAAAV,MAAA,CAAAC,QAAA,aAAAS,IAAA,+BAAAC,KAAA,CAAAC,IAAA,CAAAF,IAAA;AAAA,SAAAL,mBAAAD,GAAA,QAAAO,KAAA,CAAAE,OAAA,CAAAT,GAAA,UAAAU,iBAAA,CAAAV,GAAA;AAAA,SAAAW,2BAAAhB,CAAA,EAAAiB,cAAA,QAAAC,EAAA,UAAAjB,MAAA,oBAAAD,CAAA,CAAAC,MAAA,CAAAC,QAAA,KAAAF,CAAA,qBAAAkB,EAAA,QAAAN,KAAA,CAAAE,OAAA,CAAAd,CAAA,MAAAkB,EAAA,GAAAV,2BAAA,CAAAR,CAAA,MAAAiB,cAAA,IAAAjB,CAAA,WAAAA,CAAA,CAAAmB,MAAA,qBAAAD,EAAA,EAAAlB,CAAA,GAAAkB,EAAA,MAAArB,CAAA,UAAAuB,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAjC,CAAA,WAAAA,EAAA,QAAAU,CAAA,IAAAG,CAAA,CAAAmB,MAAA,WAAAG,IAAA,mBAAAA,IAAA,SAAAC,KAAA,EAAAvB,CAAA,CAAAH,CAAA,UAAAhB,CAAA,WAAAA,EAAA2C,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAV,SAAA,iJAAAgB,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAP,CAAA,WAAAA,EAAA,IAAAH,EAAA,GAAAA,EAAA,CAAAtB,IAAA,CAAAI,CAAA,MAAAb,CAAA,WAAAA,EAAA,QAAA0C,IAAA,GAAAX,EAAA,CAAAY,IAAA,IAAAJ,gBAAA,GAAAG,IAAA,CAAAP,IAAA,SAAAO,IAAA,KAAAhD,CAAA,WAAAA,EAAAkD,GAAA,IAAAJ,MAAA,SAAAC,GAAA,GAAAG,GAAA,KAAAN,CAAA,WAAAA,EAAA,eAAAC,gBAAA,IAAAR,EAAA,CAAAc,MAAA,UAAAd,EAAA,CAAAc,MAAA,oBAAAL,MAAA,QAAAC,GAAA;AAAA,SAAApB,4BAAAR,CAAA,EAAAiC,MAAA,SAAAjC,CAAA,qBAAAA,CAAA,sBAAAe,iBAAA,CAAAf,CAAA,EAAAiC,MAAA,OAAA9C,CAAA,GAAAG,MAAA,CAAAI,SAAA,CAAAwC,QAAA,CAAAtC,IAAA,CAAAI,CAAA,EAAAmC,KAAA,aAAAhD,CAAA,iBAAAa,CAAA,CAAAG,WAAA,EAAAhB,CAAA,GAAAa,CAAA,CAAAG,WAAA,CAAAiC,IAAA,MAAAjD,CAAA,cAAAA,CAAA,mBAAAyB,KAAA,CAAAC,IAAA,CAAAb,CAAA,OAAAb,CAAA,+DAAAkD,IAAA,CAAAlD,CAAA,UAAA4B,iBAAA,CAAAf,CAAA,EAAAiC,MAAA;AAAA,SAAAlB,kBAAAV,GAAA,EAAAiC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAjC,GAAA,CAAAc,MAAA,EAAAmB,GAAA,GAAAjC,GAAA,CAAAc,MAAA,WAAAtB,CAAA,MAAA0C,IAAA,OAAA3B,KAAA,CAAA0B,GAAA,GAAAzC,CAAA,GAAAyC,GAAA,EAAAzC,CAAA,IAAA0C,IAAA,CAAA1C,CAAA,IAAAQ,GAAA,CAAAR,CAAA,UAAA0C,IAAA;AAAA,SAAAC,QAAA3D,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAM,MAAA,CAAAmD,IAAA,CAAA5D,CAAA,OAAAS,MAAA,CAAAoD,qBAAA,QAAA1C,CAAA,GAAAV,MAAA,CAAAoD,qBAAA,CAAA7D,CAAA,GAAAE,CAAA,KAAAiB,CAAA,GAAAA,CAAA,CAAA2C,MAAA,WAAA5D,CAAA,WAAAO,MAAA,CAAAE,wBAAA,CAAAX,CAAA,EAAAE,CAAA,EAAA6D,UAAA,OAAA5D,CAAA,CAAA6D,IAAA,CAAAC,KAAA,CAAA9D,CAAA,EAAAgB,CAAA,YAAAhB,CAAA;AAAA,SAAA+D,cAAAlE,CAAA,aAAAE,CAAA,MAAAA,CAAA,GAAAiE,SAAA,CAAA7B,MAAA,EAAApC,CAAA,UAAAC,CAAA,WAAAgE,SAAA,CAAAjE,CAAA,IAAAiE,SAAA,CAAAjE,CAAA,QAAAA,CAAA,OAAAyD,OAAA,CAAAlD,MAAA,CAAAN,CAAA,OAAAiE,OAAA,WAAAlE,CAAA,IAAAmE,eAAA,CAAArE,CAAA,EAAAE,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAO,MAAA,CAAA6D,yBAAA,GAAA7D,MAAA,CAAA8D,gBAAA,CAAAvE,CAAA,EAAAS,MAAA,CAAA6D,yBAAA,CAAAnE,CAAA,KAAAwD,OAAA,CAAAlD,MAAA,CAAAN,CAAA,GAAAiE,OAAA,WAAAlE,CAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAV,CAAA,EAAAE,CAAA,EAAAO,MAAA,CAAAE,wBAAA,CAAAR,CAAA,EAAAD,CAAA,iBAAAF,CAAA;AAAA,SAAAqE,gBAAAzE,GAAA,EAAA4E,GAAA,EAAA9B,KAAA,IAAA8B,GAAA,GAAAC,cAAA,CAAAD,GAAA,OAAAA,GAAA,IAAA5E,GAAA,IAAAa,MAAA,CAAAC,cAAA,CAAAd,GAAA,EAAA4E,GAAA,IAAA9B,KAAA,EAAAA,KAAA,EAAAqB,UAAA,QAAAW,YAAA,QAAAC,QAAA,oBAAA/E,GAAA,CAAA4E,GAAA,IAAA9B,KAAA,WAAA9C,GAAA;AAAA,SAAAgF,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAjD,SAAA;AAAA,SAAAkD,kBAAAC,MAAA,EAAAC,KAAA,aAAAjE,CAAA,MAAAA,CAAA,GAAAiE,KAAA,CAAA3C,MAAA,EAAAtB,CAAA,UAAAkE,UAAA,GAAAD,KAAA,CAAAjE,CAAA,GAAAkE,UAAA,CAAAnB,UAAA,GAAAmB,UAAA,CAAAnB,UAAA,WAAAmB,UAAA,CAAAR,YAAA,wBAAAQ,UAAA,EAAAA,UAAA,CAAAP,QAAA,SAAAlE,MAAA,CAAAC,cAAA,CAAAsE,MAAA,EAAAP,cAAA,CAAAS,UAAA,CAAAV,GAAA,GAAAU,UAAA;AAAA,SAAAC,aAAAL,WAAA,EAAAM,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAL,iBAAA,CAAAD,WAAA,CAAAjE,SAAA,EAAAuE,UAAA,OAAAC,WAAA,EAAAN,iBAAA,CAAAD,WAAA,EAAAO,WAAA,GAAA5E,MAAA,CAAAC,cAAA,CAAAoE,WAAA,iBAAAH,QAAA,mBAAAG,WAAA;AAAA,SAAAL,eAAAa,GAAA,QAAAd,GAAA,GAAAe,YAAA,CAAAD,GAAA,oBAAApE,OAAA,CAAAsD,GAAA,iBAAAA,GAAA,GAAAgB,MAAA,CAAAhB,GAAA;AAAA,SAAAe,aAAAE,KAAA,EAAAC,IAAA,QAAAxE,OAAA,CAAAuE,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAArE,MAAA,CAAAwE,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAA5E,IAAA,CAAA0E,KAAA,EAAAC,IAAA,oBAAAxE,OAAA,CAAA4E,GAAA,uBAAAA,GAAA,YAAAjE,SAAA,4DAAA6D,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAAO,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAArE,SAAA,0DAAAoE,QAAA,CAAApF,SAAA,GAAAJ,MAAA,CAAA0F,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAArF,SAAA,IAAAS,WAAA,IAAAoB,KAAA,EAAAuD,QAAA,EAAAtB,QAAA,QAAAD,YAAA,aAAAjE,MAAA,CAAAC,cAAA,CAAAuF,QAAA,iBAAAtB,QAAA,gBAAAuB,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAAjF,CAAA,EAAAkF,CAAA,IAAAD,eAAA,GAAA3F,MAAA,CAAA6F,cAAA,GAAA7F,MAAA,CAAA6F,cAAA,CAAAC,IAAA,cAAAH,gBAAAjF,CAAA,EAAAkF,CAAA,IAAAlF,CAAA,CAAAZ,SAAA,GAAA8F,CAAA,SAAAlF,CAAA,YAAAiF,eAAA,CAAAjF,CAAA,EAAAkF,CAAA;AAAA,SAAAG,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAxF,WAAA,EAAAyF,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAA1C,SAAA,EAAA6C,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAA5C,KAAA,OAAAE,SAAA,YAAAgD,0BAAA,OAAAJ,MAAA;AAAA,SAAAI,2BAAAC,IAAA,EAAArG,IAAA,QAAAA,IAAA,KAAAG,OAAA,CAAAH,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAc,SAAA,uEAAAwF,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAT,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAK,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA5G,SAAA,CAAA6G,OAAA,CAAA3G,IAAA,CAAAkG,OAAA,CAAAC,SAAA,CAAAO,OAAA,8CAAAzH,CAAA;AAAA,SAAA8G,gBAAA3F,CAAA,IAAA2F,eAAA,GAAArG,MAAA,CAAA6F,cAAA,GAAA7F,MAAA,CAAAkH,cAAA,CAAApB,IAAA,cAAAO,gBAAA3F,CAAA,WAAAA,CAAA,CAAAZ,SAAA,IAAAE,MAAA,CAAAkH,cAAA,CAAAxG,CAAA,aAAA2F,eAAA,CAAA3F,CAAA;AAE5B,IAAMyG,aAAY,GAAG,SAAfA,YAAYA,CAAIC,CAAC,EAAEjF,CAAC,EAAK;EAC7B,IAAIkF,MAAM;EACV,IAAIlF,CAAC,CAACmF,IAAI,KAAKnF,CAAC,CAACmF,IAAI,CAACC,GAAG,IAAIpF,CAAC,CAACmF,IAAI,CAACE,KAAK,CAAC,EAAE;IAC1C,IAAMC,OAAO,GAAGtF,CAAC,CAACmF,IAAI,CAACC,GAAG,IAAI,EAAE;IAChCF,MAAM,gBACJ7I,MAAA,CAAAa,OAAA,CAAAqI,aAAA;MAAGnD,MAAM,EAAC,QAAQ;MAACoD,IAAI,EAAEF,OAAO,GAAGL,CAAC,CAACQ,OAAO,CAACzF,CAAC,CAACmF,IAAI,CAACE,KAAK;IAAE,GACxDJ,CAAC,CAACS,QACF,CACJ;EACH,CAAC,MAAM,IAAI1F,CAAC,CAACmF,IAAI,IAAInF,CAAC,CAACmF,IAAI,CAACC,GAAG,EAAE;IAC/BF,MAAM,gBACJ7I,MAAA,CAAAa,OAAA,CAAAqI,aAAA;MAAGnD,MAAM,EAAC,QAAQ;MAACoD,IAAI,EAAExF,CAAC,CAACmF,IAAI,CAACC;IAAI,GACjCH,CAAC,CAACS,QACF,CACJ;EACH,CAAC,MAAM;IACL;IACAR,MAAM,GAAG/F,KAAK,CAACE,OAAO,CAAC4F,CAAC,CAACS,QAAQ,CAAC,GAAGT,CAAC,CAACS,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,GAAGV,CAAC,CAACS,QAAQ;EACzE;EACA,oBACErJ,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAClJ,MAAA,CAAAa,OAAK,CAAC0I,QAAQ;IAAChE,GAAG,EAAE5B,CAAC,CAAC6F;EAAQ,gBAC7BxJ,MAAA,CAAAa,OAAA,CAAAqI,aAAA;IAAKO,SAAS,EAAC,8CAA8C;IAACC,KAAK,EAAEd,CAAC,CAACS;EAAS,GAC7ER,MACE,CACS,CAAC;AAErB,CAAC;AAED,IAAMc,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC3B,IAAIA,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,WAAW;EACpB;EACA,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,QAAQ;AAC/C,CAAC;AAAC,IAEmBC,eAAe,GAAAC,OAAA,CAAAlJ,OAAA,0BAAAmJ,cAAA;EAAAjD,SAAA,CAAA+C,eAAA,EAAAE,cAAA;EAAA,IAAAC,MAAA,GAAA1C,YAAA,CAAAuC,eAAA;EAClC,SAAAA,gBAAY9D,KAAK,EAAE;IAAA,IAAAkE,KAAA;IAAAvE,eAAA,OAAAmE,eAAA;IACjBK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAACpE,KAAK,CAAC;IAClBkE,KAAA,GAAAD,MAAA,CAAAnI,IAAA,OAAMkE,KAAK;IACX,IAAMqE,MAAM,GAAG,CAAC,GAAGH,KAAA,CAAKlE,KAAK,CAACsE,MAAM,CAACjH,MAAM;IAC3C,IAAIiH,MAAM,GAAGJ,KAAA,CAAKlE,KAAK,CAACsE,MAAM,CAACC,GAAG,CAAC,UAAC5G,CAAC;MAAA,OAAAsB,aAAA,CAAAA,aAAA,KAAWtB,CAAC;QAAE6G,KAAK,EAAEH,MAAM;QAAEI,MAAM,EAAE;MAAI;IAAA,CAAG,CAAC;IAClF;IACAP,KAAA,CAAKQ,KAAK,GAAG;MACXJ,MAAM,EAANA,MAAM;MACNE,KAAK,EAAE,IAAI;MACXG,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAE;IACZ,CAAC;IAEDX,KAAA,CAAKY,SAAS,GAAGC,cAAK,CAACC,SAAS,CAAC,CAAC;IAClCd,KAAA,CAAKe,cAAc,GAAGf,KAAA,CAAKe,cAAc,CAAC3D,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IACpDA,KAAA,CAAKgB,SAAS,GAAGhB,KAAA,CAAKgB,SAAS,CAAC5D,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAC1CA,KAAA,CAAKiB,QAAQ,GAAGjB,KAAA,CAAKiB,QAAQ,CAAC7D,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IACxCA,KAAA,CAAKkB,SAAS,GAAGlB,KAAA,CAAKkB,SAAS,CAAC9D,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAC1CA,KAAA,CAAKmB,qBAAqB,GAAGnB,KAAA,CAAKmB,qBAAqB,CAAC/D,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAClEA,KAAA,CAAKoB,iBAAiB,GAAGpB,KAAA,CAAKoB,iBAAiB,CAAChE,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAC1DA,KAAA,CAAKqB,WAAW,GAAGrB,KAAA,CAAKqB,WAAW,CAACjE,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAC9CA,KAAA,CAAKsB,WAAW,GAAGtB,KAAA,CAAKsB,WAAW,CAAClE,IAAI,CAAAc,sBAAA,CAAA8B,KAAA,CAAK,CAAC;IAAC,OAAAA,KAAA;EACjD;EAAChE,YAAA,CAAA4D,eAAA;IAAAvE,GAAA;IAAA9B,KAAA,EAED,SAAA0H,SAAAM,KAAA,EAAoB;MAAA,IAATjB,KAAK,GAAAiB,KAAA,CAALjB,KAAK;MACd,IAAI,CAACkB,QAAQ,CAAC;QAAElB,KAAK,EAALA;MAAM,CAAC,CAAC;IAC1B;EAAC;IAAAjF,GAAA;IAAA9B,KAAA,EAED,SAAA2H,UAAAO,KAAA,EAAkC;MAAA,IAAtBC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;QAAEC,QAAQ,GAAAF,KAAA,CAARE,QAAQ;MAC5B,IAAI,CAACH,QAAQ,CAAC,UAAAI,KAAA;QAAA,IAAGxB,MAAM,GAAAwB,KAAA,CAANxB,MAAM;QAAA,OAAQ;UAC7BA,MAAM,EAAE,IAAAyB,kBAAS,EAACzB,MAAM,EAAEsB,QAAQ,EAAEC,QAAQ;QAC9C,CAAC;MAAA,CAAC,CAAC;IACL;EAAC;IAAAtG,GAAA;IAAA9B,KAAA,EAED,SAAA4H,sBAAsBtK,CAAC,EAAE;MACvB,IAAQ0C,KAAK,GAAK1C,CAAC,CAACgF,MAAM,CAAlBtC,KAAK;MACb,IAAQuI,OAAO,GAAKjL,CAAC,CAACgF,MAAM,CAApBiG,OAAO;MACf,IAAI,CAACN,QAAQ,CAAC,UAAAO,KAAA;QAAA,IAAG3B,MAAM,GAAA2B,KAAA,CAAN3B,MAAM;QAAA,OAAQ;UAC7BA,MAAM,EAAEA,MAAM,CAACC,GAAG,CAAC,UAAC5G,CAAC,EAAK;YACxBA,CAAC,CAAC8G,MAAM,GAAG9G,CAAC,CAAC6F,OAAO,KAAK/F,KAAK,GAAGuI,OAAO,GAAGrI,CAAC,CAAC8G,MAAM;YACnD,OAAAxF,aAAA,KAAYtB,CAAC;UACf,CAAC;QACH,CAAC;MAAA,CAAC,CAAC;IACL;EAAC;IAAA4B,GAAA;IAAA9B,KAAA,EAED,SAAA6H,kBAAA,EAAoB;MAClB,IAAI,CAACI,QAAQ,CAAC,UAAAQ,KAAA;QAAA,IAAG5B,MAAM,GAAA4B,KAAA,CAAN5B,MAAM;QAAA,OAAQ;UAC7BA,MAAM,EAAEA,MAAM,CAACC,GAAG,CAAC,UAAC5G,CAAC,EAAK;YACxBA,CAAC,CAAC8G,MAAM,GAAG,IAAI;YACf,OAAAxF,aAAA,KAAYtB,CAAC;UACf,CAAC;QACH,CAAC;MAAA,CAAC,CAAC;IACL;EAAC;IAAA4B,GAAA;IAAA9B,KAAA,EAED,SAAA0I,iBAAA,EAAmB;MACjB,IAAIC,aAAa,GAAG,IAAI,CAACpG,KAAK,CAACqG,WAAW,CAACD,aAAa,IAAI,EAAE;MAC9D,IAAIE,IAAI,GAAG,IAAI,CAAC5B,KAAK,CAACG,QAAQ;MAC9B,IAAIyB,IAAI,CAACjJ,MAAM,GAAG+I,aAAa,EAAC;QAC9BE,IAAI,GAAGA,IAAI,CAACjI,KAAK,CAAC,CAAC,EAAE+H,aAAa,CAAC;QACnCG,KAAK,CAAC,6BAA6B,GAAGH,aAAa,CAAC;MACtD;MACAjC,OAAO,CAACC,GAAG,CAACkC,IAAI,CAAC;MACjBnC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpE,KAAK,CAACqG,WAAW,CAAC;MACnC;MAAA,IAAAG,SAAA,GAAAtJ,0BAAA,CACmBoJ,IAAI;QAAAG,KAAA;MAAA;QAAvB,KAAAD,SAAA,CAAAjJ,CAAA,MAAAkJ,KAAA,GAAAD,SAAA,CAAAnL,CAAA,IAAAmC,IAAA,GAAwB;UAAA,IAAfkJ,MAAM,GAAAD,KAAA,CAAAhJ,KAAA;UACX0G,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC1BD,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEsC,MAAM,CAAC;UACtEC,KAAK,CAAC,QAAQ,GAAGD,MAAM,GAAG,eAAe,EAAE;YAACE,IAAI,EAAE;UAAM,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAC,CAAC;YAAA,OAAEA,CAAC,CAACC,IAAI,CAAC,CAAC;UAAA,EAAC,CAACF,IAAI,CAAC,UAAAC,CAAC,EAAE;YACnF3C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE0C,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClE,IAAIE,SAAS,GAAGF,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC7C,IAAIG,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAE;cACzCH,SAAS,GAAGA,SAAS,CAACI,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC;YAC1D;YACA,IAAMC,qBAAqB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;YAChG,SAASC,uBAAuBA,CAACvE,GAAG,EAAE;cACpC,OAAOsE,qBAAqB,CAACE,IAAI,CAAC,UAAAC,GAAG;gBAAA,OAAIzE,GAAG,CAAC0E,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,GAAG,CAAC;cAAA,EAAC;YAC3E;YACA,IAAIF,uBAAuB,CAACN,SAAS,CAAC,EAAC;cACrC7C,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;cAClC,IAAMuD,QAAQ,GAAGX,SAAS,CAACY,SAAS,CAACZ,SAAS,CAACa,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cACpE,IAAMtM,CAAC,GAAGuM,QAAQ,CAAC5E,aAAa,CAAC,GAAG,CAAC;cACrC3H,CAAC,CAAC4H,IAAI,GAAG6D,SAAS;cAClBzL,CAAC,CAACwM,QAAQ,GAAGJ,QAAQ;cACrBG,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC1M,CAAC,CAAC;cAC5BA,CAAC,CAAC2M,KAAK,CAAC,CAAC;cACTJ,QAAQ,CAACE,IAAI,CAACG,WAAW,CAAC5M,CAAC,CAAC;YAC9B,CAAC,MAAM;cACL4I,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;cAClC,IAAMgE,MAAM,GAAGN,QAAQ,CAAC5E,aAAa,CAAC,QAAQ,CAAC;cAC/CkF,MAAM,CAACC,YAAY,CAAC,SAAS,EAAE,+BAA+B,CAAC;cAC/DD,MAAM,CAACE,GAAG,GAAGtB,SAAS;cACtBoB,MAAM,CAACC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC;cAC7CP,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACG,MAAM,CAAC;YACnC;UACF,CAAC,CAAC,CAACG,KAAK,CAACpE,OAAO,CAACqE,KAAK,CAAC;QAC3B;MAAC,SAAA1K,GAAA;QAAA0I,SAAA,CAAAzL,CAAA,CAAA+C,GAAA;MAAA;QAAA0I,SAAA,CAAA7I,CAAA;MAAA;IACH;EAAC;IAAA4B,GAAA;IAAA9B,KAAA,EAED,SAAA+H,YAAA,EAAc;MACZ,IAAMiD,QAAQ,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAAC/H,SAAS,EAAE;QAAEgI,OAAO,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAO,CAAC,CAAC;MACrF,IAAAC,WAAA,GAAsC,IAAI,CAAC9I,KAAK;QAAxCsG,IAAI,GAAAwC,WAAA,CAAJxC,IAAI;QAAEyC,UAAU,GAAAD,WAAA,CAAVC,UAAU;QAAEC,OAAO,GAAAF,WAAA,CAAPE,OAAO;MACjC,IAAAC,WAAA,GAAkC,IAAI,CAACvE,KAAK;QAApCC,MAAM,GAAAsE,WAAA,CAANtE,MAAM;QAAEC,aAAa,GAAAqE,WAAA,CAAbrE,aAAa;MAC7B,IAAMsE,WAAW,GAAGF,OAAO,CAAC3L,MAAM,GAAG,CAAC,GAAG0L,UAAU,GAAGzC,IAAI;MAE1D,OAAO3B,MAAM,IAAIC,aAAa,GAC1BsE,WAAW,CAACC,IAAI,CAAC,UAAC5N,CAAC,EAAE6N,CAAC,EAAK;QAC3B,IAAMC,KAAK,GAAGzE,aAAa,KAAK0E,+BAAa,CAACC,GAAG,GAAGhO,CAAC,GAAG6N,CAAC;QACzD,IAAMI,MAAM,GAAG5E,aAAa,KAAK0E,+BAAa,CAACC,GAAG,GAAGH,CAAC,GAAG7N,CAAC;QAC1D,OAAOkN,QAAQ,CAACgB,OAAO,CAACJ,KAAK,CAAC1E,MAAM,CAAC,EAAE6E,MAAM,CAAC7E,MAAM,CAAC,CAAC;MACxD,CAAC,CAAC,GACAuE,WAAW;IACjB;EAAC;IAAA3J,GAAA;IAAA9B,KAAA,EAED,SAAAyH,UAAAwE,KAAA,EAA+B;MAAA,IAAnBlG,OAAO,GAAAkG,KAAA,CAAPlG,OAAO;QAAEmG,MAAM,GAAAD,KAAA,CAANC,MAAM;MACzB,IAAMC,UAAU,GAAG,IAAI,CAAClF,KAAK,CAACJ,MAAM;MACpC,IAAMuF,GAAG,GAAGD,UAAU,CAACE,SAAS,CAAC,UAACnM,CAAC;QAAA,OAAKA,CAAC,CAAC6F,OAAO,KAAKA,OAAO;MAAA,EAAC;MAE9D,IAAMuG,YAAY,GAAGJ,MAAM,GAAG,IAAI,CAACjF,KAAK,CAACF,KAAK;MAC9CoF,UAAU,CAACC,GAAG,CAAC,CAACrF,KAAK,IAAIuF,YAAY;MAErC,IAAIF,GAAG,GAAGD,UAAU,CAACvM,MAAM,GAAG,CAAC,EAAE;QAC/BuM,UAAU,CAACC,GAAG,GAAG,CAAC,CAAC,CAACrF,KAAK,GAAGoF,UAAU,CAACC,GAAG,GAAG,CAAC,CAAC,CAACrF,KAAK,GAAGuF,YAAY;MACtE;MACA,IAAI,CAACrE,QAAQ,CAAC;QAAEpB,MAAM,EAAAhI,kBAAA,CAAMsN,UAAU;MAAE,CAAC,CAAC;IAC5C;EAAC;IAAArK,GAAA;IAAA9B,KAAA,EAED,SAAAwH,eAAA+E,KAAA,EAEG;MAAA,IAAAC,MAAA;MAAA,IADDzG,OAAO,GAAAwG,KAAA,CAAPxG,OAAO;QAAE0G,KAAK,GAAAF,KAAA,CAALE,KAAK;QAAEvF,MAAM,GAAAqF,KAAA,CAANrF,MAAM;QAAEC,aAAa,GAAAoF,KAAA,CAAbpF,aAAa;MAErC,oBACE5K,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAClJ,MAAA,CAAAa,OAAK,CAAC0I,QAAQ;QAAChE,GAAG,EAAEiE;MAAQ,gBAC3BxJ,MAAA,CAAAa,OAAA,CAAAqI,aAAA;QAAKO,SAAS,EAAC,8CAA8C;QAACC,KAAK,EAAEwG;MAAM,GACxEA,KACE,CAAC,eAENlQ,MAAA,CAAAa,OAAA,CAAAqI,aAAA,cACGyB,MAAM,KAAKnB,OAAO,gBACjBxJ,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC5I,iBAAA,CAAA6P,eAAe;QAACC,IAAI,EAAExF,aAAa,KAAK0E,+BAAa,CAACe,IAAI,GAAGC,6BAAU,GAAGC;MAAS,CAAE,CAAC,gBAEvFvQ,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC5I,iBAAA,CAAA6P,eAAe;QAACC,IAAI,EAAEI;MAAO,CAAE,CAE/B,CAAC,eACNxQ,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC9I,eAAA,CAAAS,OAAS;QACR4P,IAAI,EAAC,GAAG;QACRC,gBAAgB,EAAC,YAAY;QAC7BC,wBAAwB,EAAC,kBAAkB;QAC3CC,MAAM,EAAE,SAAAA,OAACC,KAAK,EAAAC,KAAA,EAAiB;UAAA,IAAbnB,MAAM,GAAAmB,KAAA,CAANnB,MAAM;UACtBM,MAAI,CAAC/E,SAAS,CAAC;YAAE1B,OAAO,EAAPA,OAAO;YAAEmG,MAAM,EAANA;UAAO,CAAC,CAAC;QACrC,CAAE;QACFoB,OAAO,EAAE,SAAAA,QAACF,KAAK,EAAAG,MAAA,EAAiB;UAAA,IAAbrB,MAAM,GAAAqB,MAAA,CAANrB,MAAM;UACvBM,MAAI,CAACvE,QAAQ,CAAC;YAAC,UAAU,EAAE;UAAI,CAAC,CAAC;QACnC,CAAE;QACFuF,MAAM,EAAE,SAAAA,OAACJ,KAAK,EAAAK,MAAA,EAAiB;UAAA,IAAbvB,MAAM,GAAAuB,MAAA,CAANvB,MAAM;UACtBwB,UAAU,CAAC,YAAM;YACflB,MAAI,CAACvE,QAAQ,CAAC;cAAC,UAAU,EAAE;YAAK,CAAC,CAAC;UACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE;QACZ,CAAE;;QACF0F,QAAQ,EAAE;UAAEtE,CAAC,EAAE;QAAE,CAAE;QACnBuE,MAAM,EAAE;MAAI,gBAEZrR,MAAA,CAAAa,OAAA,CAAAqI,aAAA;QAAMO,SAAS,EAAC,gBAAgB;QAAC6H,WAAW,EAAE,SAAAA,YAACT,KAAK;UAAA,OAAKA,KAAK,CAACU,eAAe,CAAC,CAAC;QAAA;MAAC,GAAC,QAAO,CAChF,CACG,CAAC;IAErB;EAAC;IAAAhM,GAAA;IAAA9B,KAAA,EAED,SAAA+N,iBAAiBC,SAAS,EAAErI,OAAO,EAAC;MAClC,IAAIgD,aAAa,GAAG,IAAI,CAACpG,KAAK,CAACqG,WAAW,CAACD,aAAa,IAAI,EAAE;MAC9DjC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqH,SAAS,EAAErI,OAAO,CAAC;MAC1C,IAAQyB,QAAQ,GAAK,IAAI,CAACH,KAAK,CAAvBG,QAAQ;MAChBV,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAES,QAAQ,CAAC;MACrD,IAAI6G,IAAI,GAAGtI,OAAO,CAAC,IAAI,CAACpD,KAAK,CAACqG,WAAW,CAACsF,aAAa,CAAC;MACxD,IAAMC,aAAa,GAAG/G,QAAQ,CAACgH,OAAO,CAACH,IAAI,CAAC;MAC5C;MACA,IAAID,SAAS,IAAIG,aAAa,KAAK,CAAC,CAAC,EAAE;QACrC,IAAI,CAAClG,QAAQ,CAAC,UAAAoG,SAAS;UAAA,OAAK;YAC1BjH,QAAQ,KAAAkH,MAAA,CAAAzP,kBAAA,CAAMwP,SAAS,CAACjH,QAAQ,IAAE6G,IAAI;UACxC,CAAC;QAAA,CAAC,CAAC;MACL;MACE;MACF,IAAI,CAACD,SAAS,IAAIG,aAAa,KAAK,CAAC,CAAC,EAAE;QACtC,IAAI,CAAClG,QAAQ,CAAC,UAAAoG,SAAS;UAAA,OAAK;YAC1BjH,QAAQ,EAAEiH,SAAS,CAACjH,QAAQ,CAAChG,MAAM,CAAC,UAAAiI,CAAC;cAAA,OAAIA,CAAC,KAAK4E,IAAI;YAAA;UACrD,CAAC;QAAA,CAAC,CAAC;MACL;MACA,IAAI,IAAI,CAAChH,KAAK,CAACG,QAAQ,CAACxH,MAAM,GAAG+I,aAAa,GAAG,CAAC,EAAE;QAClDG,KAAK,CAAC,+BAA+B,GAAGH,aAAa,GAAG,wBAAwB,CAAC;MACnF;IACF;EAAC;IAAA7G,GAAA;IAAA9B,KAAA,EAED,SAAA8H,YAAAyG,MAAA,EAAuC;MAAA,IAAzBrH,MAAM,GAAAqH,MAAA,CAANrH,MAAM;QAAEC,aAAa,GAAAoH,MAAA,CAAbpH,aAAa;MAEjC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACuH,QAAQ,EAAC;QACvB,IAAI,CAACvG,QAAQ,CAAC;UAAEf,MAAM,EAANA,MAAM;UAAEC,aAAa,EAAbA;QAAc,CAAC,CAAC;MAC1C;IACF;EAAC;IAAArF,GAAA;IAAA9B,KAAA,EAED,SAAAyO,OAAA,EAAS;MAAA,IAAAC,MAAA;MACP,IAAAC,YAAA,GAAoD,IAAI,CAAC1H,KAAK;QAAtDJ,MAAM,GAAA8H,YAAA,CAAN9H,MAAM;QAAEK,MAAM,GAAAyH,YAAA,CAANzH,MAAM;QAAEC,aAAa,GAAAwH,YAAA,CAAbxH,aAAa;QAAEC,QAAQ,GAAAuH,YAAA,CAARvH,QAAQ;MAC/C,IAAMwH,SAAS,GAAG,IAAI,CAAC7G,WAAW,CAAC,CAAC;MAEpC,oBACExL,MAAA,CAAAa,OAAA,CAAAqI,aAAA;QAAKoJ,KAAK,EAAE;UAAE9H,KAAK,EAAE,MAAM;UAAE+H,MAAM,EAAE;QAAO;MAAE,gBAC5CvS,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAACxI,oBAAA,CAAAG,OAAmB;QAClB2R,IAAI,EAAElI,MAAO;QACbc,SAAS,EAAE,IAAI,CAACA,SAAU;QAC1BqH,cAAc,EAAE,IAAI,CAACpH,qBAAsB;QAC3CqH,UAAU,EAAE,IAAI,CAACpH;MAAkB,CACpC,CAAC,eACFtL,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC/I,iBAAA,CAAAwS,SAAS;QAACC,GAAG,EAAE,IAAI,CAAC9H,SAAU;QAACK,QAAQ,EAAE,IAAI,CAACA;MAAS,GACrD,UAAA0H,MAAA;QAAA,IAAGrI,KAAK,GAAAqI,MAAA,CAALrI,KAAK;UAAE+H,MAAM,GAAAM,MAAA,CAANN,MAAM;QAAA,oBACfvS,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC/I,iBAAA,CAAA2S,KAAK;UACJtI,KAAK,EAAEA,KAAM;UACb+H,MAAM,EAAEA,MAAO;UACfQ,YAAY,EAAE,EAAG;UACjBC,SAAS,EAAE,EAAG;UACdrJ,YAAY,EAAEA,YAAa;UAC3BsJ,QAAQ,EAAEZ,SAAS,CAAChP,MAAO;UAC3B6P,SAAS,EAAE,SAAAA,UAAAC,MAAA;YAAA,IAAGtJ,KAAK,GAAAsJ,MAAA,CAALtJ,KAAK;YAAA,OAAOwI,SAAS,CAACxI,KAAK,CAAC;UAAA,CAAC;UAC3CsF,IAAI,EAAEgD,MAAI,CAAC5G,WAAY;UACvBZ,MAAM,EAAEA,MAAO;UACfC,aAAa,EAAEA;QAAc,gBAE7B5K,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC/I,iBAAA,CAAAiT,MAAM;UACL7N,GAAG,EAAC,UAAU;UACdiE,OAAO,EAAC,UAAU;UAClBgB,KAAK,EAAE,EAAG,CAAC;UAAA;UACX0F,KAAK,EAAC,QAAG;UACTjF,cAAc,EAAE,SAAAA,eAAA;YAAA,oBAAMjL,MAAA,CAAAa,OAAA,CAAAqI,aAAA;cAAKQ,KAAK,EAAC,yBAAyB;cAAC2J,OAAO,EAAE,SAAAA,QAACtS,CAAC,EAAK;gBAAEoR,MAAI,CAAChG,gBAAgB,CAAC,CAAC;cAAC;YAAE,GAAC,GAAC,eAAAnM,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC5I,iBAAA,CAAA6P,eAAe;cAACC,IAAI,EAAEkD,kCAAgB;cAAChB,KAAK,EAAE;gBAAEC,MAAM,EAAE,OAAO;gBAAEgB,KAAK,EAAE;cAAU;YAAE,CAAE,CAAM,CAAC;UAAA,CAAC;UACxM5K,YAAY,EAAE,SAAAA,aAAA6K,MAAA;YAAA,IAAGpK,OAAO,GAAAoK,MAAA,CAAPpK,OAAO;YAAA,oBACtBpJ,MAAA,CAAAa,OAAA,CAAAqI,aAAA;cACEuK,IAAI,EAAC,UAAU;cACfzH,OAAO,EAAEnB,QAAQ,CAAC6I,QAAQ,CAACtK,OAAO,CAAC+I,MAAI,CAACnM,KAAK,CAACqG,WAAW,CAACsF,aAAa,CAAC,CAAE;cAC1EgC,QAAQ,EAAE,SAAAA,SAAC5S,CAAC;gBAAA,OAAKoR,MAAI,CAACX,gBAAgB,CAACzQ,CAAC,CAACgF,MAAM,CAACiG,OAAO,EAAE5C,OAAO,CAAC;cAAA;YAAC,CACnE,CAAC;UAAA;QACF,CACH,CAAC,EACDkB,MAAM,CACJC,GAAG,CAAC,UAAC5G,CAAC;UAAA,oBACL3D,MAAA,CAAAa,OAAA,CAAAqI,aAAA,CAAC/I,iBAAA,CAAAiT,MAAM;YACL7N,GAAG,EAAE5B,CAAC,CAAC6F,OAAQ;YACfoK,cAAc,EAAE,SAAAA,eAAAC,MAAA;cAAA,IAAGzK,OAAO,GAAAyK,MAAA,CAAPzK,OAAO;cAAA,OAAOA,OAAO,CAACzF,CAAC,CAAC6F,OAAO,CAAC;YAAA,CAAC;YACpDA,OAAO,EAAE7F,CAAC,CAAC6F,OAAQ;YACnB0G,KAAK,EAAEvM,CAAC,CAACuM,KAAM;YACf1F,KAAK,EAAEA,KAAK,GAAG7G,CAAC,CAAC6G,KAAM;YACvBS,cAAc,EAAEkH,MAAI,CAAClH,cAAe;YACpCtC,YAAY,EAAE,SAAAA,aAACC,CAAC;cAAA,OAAKD,aAAY,CAACC,CAAC,EAAEjF,CAAC,CAAC;YAAA;UAAC,CACzC,CAAC;QAAA,CACH,CACE,CAAC;MAAA,CAED,CACR,CAAC;IAEV;EAAC;EAAA,OAAAmG,eAAA;AAAA,EAlQ0CgK,oBAAa;AAqQ1DhK,eAAe,CAACiK,SAAS,GAAG;EAC1BzH,IAAI,EAAE0H,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;EACvDpF,UAAU,EAAEiF,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;EAC7D7J,MAAM,EAAE0J,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU;EACvDnF,OAAO,EAAEgF,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC;AAClD,CAAC","file":"SelectDataTable.fc908197.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  AutoSizer, Column, Table, SortDirection,\n} from 'react-virtualized';\nimport Draggable from 'react-draggable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faSortUp, faSort, faFileArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport arrayMove from 'array-move';\nimport PropTypes from 'prop-types';\nimport VisDataTableControl from './VisDataTableControl/VisDataTableControl';\nimport './VisDataTable.css';\n\nconst cellRenderer = (d, f) => {\n  let urlElt;\n  if (f.link && (f.link.url || f.link.field)) {\n    const urlbase = f.link.url || '';\n    urlElt = (\n      <a target=\"_blank\" href={urlbase + d.rowData[f.link.field]}>\n        {d.cellData}\n      </a>\n    );\n  } else if (f.link && f.link.url) {\n    urlElt = (\n      <a target=\"_blank\" href={f.link.url}>\n        {d.cellData}\n      </a>\n    );\n  } else {\n    // urlElt = d.cellData;\n    urlElt = Array.isArray(d.cellData) ? d.cellData.join(', ') : d.cellData;\n  }\n  return (\n    <React.Fragment key={f.dataKey}>\n      <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={d.cellData}>\n        {urlElt}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst rowClassName = ({ index }) => {\n  if (index < 0) {\n    return 'headerRow';\n  }\n  return index % 2 === 0 ? 'evenRow' : 'oddRow';\n};\n\nexport default class SelectDataTable extends PureComponent {\n  constructor(props) {\n    console.log(\"constructed, showing props\")\n    console.log(props)\n    super(props);\n    const fWidth = 1 / this.props.fields.length;\n    let fields = this.props.fields.map((f) => ({ ...f, width: fWidth, isShow: true }));\n    //fields = fields.unshift({width: 50, isShow: true})\n    this.state = {\n      fields,\n      width: null,\n      sortBy: null,\n      sortDirection: null,\n      selected: []\n    };\n\n    this.autoSizer = React.createRef();\n    this.headerRenderer = this.headerRenderer.bind(this);\n    this.resizeRow = this.resizeRow.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onSortEnd = this.onSortEnd.bind(this);\n    this.onCheckChangedHandler = this.onCheckChangedHandler.bind(this);\n    this.onAllCheckHandler = this.onAllCheckHandler.bind(this);\n    this.sortHandler = this.sortHandler.bind(this);\n    this.getSortData = this.getSortData.bind(this);\n  }\n\n  onResize({ width }) {\n    this.setState({ width });\n  }\n\n  onSortEnd({ oldIndex, newIndex }) {\n    this.setState(({ fields }) => ({\n      fields: arrayMove(fields, oldIndex, newIndex),\n    }));\n  }\n\n  onCheckChangedHandler(e) {\n    const { value } = e.target;\n    const { checked } = e.target;\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = f.dataKey === value ? checked : f.isShow;\n        return { ...f };\n      }),\n    }));\n  }\n\n  onAllCheckHandler() {\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = true;\n        return { ...f };\n      }),\n    }));\n  }\n\n  downloadSelected() {\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    let data = this.state.selected\n    if (data.length > downloadLimit){\n      data = data.slice(0, downloadLimit);\n      alert(\"Limiting download to first \" + downloadLimit)\n    }\n    console.log(data)\n    console.log(\"about to try?\")\n    console.log(this.props.configProps)\n    // trigger downloads from pathdb\n    for (let record of data){\n        console.log(\"inside loop\")\n        console.log(\"trying to get metadata for slide with pathdb id\", record)\n        fetch(\"/node/\" + record + \"?_format=json\", {mode: \"cors\"}).then(x=>x.json()).then(x=>{ \n          console.log(\"looking at wsi url: \", x['field_wsiimage'][0]['url'])\n          let slide_url = x['field_wsiimage'][0]['url']\n          if (window.location.protocol === \"https:\") {\n            slide_url = slide_url.replace(/^http:\\/\\//i, 'https://');\n          }\n          const problematicExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp', '.svg', '.pdf'];\n          function hasProblematicExtension(url) {\n            return problematicExtensions.some(ext => url.toLowerCase().endsWith(ext));\n          }\n          if (hasProblematicExtension(slide_url)){\n            console.log(\"using anchor method\")\n            const filename = slide_url.substring(slide_url.lastIndexOf('/') + 1);\n            const a = document.createElement('a');\n            a.href = slide_url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n          } else {\n            console.log(\"using iframe method\")\n            const iframe = document.createElement(\"iframe\");\n            iframe.setAttribute(\"sandbox\", \"allow-downloads allow-scripts\");\n            iframe.src = slide_url;\n            iframe.setAttribute(\"style\", \"display: none\");\n            document.body.appendChild(iframe);\n          }\n        }).catch(console.error)\n    }\n  }\n\n  getSortData() {\n    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    const { data, filterData, filters } = this.props;\n    const { sortBy, sortDirection } = this.state;\n    const currentData = filters.length > 0 ? filterData : data;\n\n    return sortBy && sortDirection\n      ? currentData.sort((a, b) => {\n        const first = sortDirection === SortDirection.ASC ? a : b;\n        const second = sortDirection === SortDirection.ASC ? b : a;\n        return collator.compare(first[sortBy], second[sortBy]);\n      })\n      : currentData;\n  }\n\n  resizeRow({ dataKey, deltaX }) {\n    const prevFields = this.state.fields;\n    const idx = prevFields.findIndex((f) => f.dataKey === dataKey);\n\n    const percentDelta = deltaX / this.state.width;\n    prevFields[idx].width += percentDelta;\n\n    if (idx < prevFields.length - 1) {\n      prevFields[idx + 1].width = prevFields[idx + 1].width - percentDelta;\n    }\n    this.setState({ fields: [...prevFields] });\n  }\n\n  headerRenderer({\n    dataKey, label, sortBy, sortDirection,\n  }) {\n    return (\n      <React.Fragment key={dataKey}>\n        <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={label}>\n          {label}\n        </div>\n        {}\n        <div>\n          {sortBy === dataKey ? (\n            <FontAwesomeIcon icon={sortDirection === SortDirection.DESC ? faSortDown : faSortUp} />\n          ) : (\n            <FontAwesomeIcon icon={faSort} />\n          )}\n        </div>\n        <Draggable\n          axis=\"x\"\n          defaultClassName=\"DragHandle\"\n          defaultClassNameDragging=\"DragHandleActive\"\n          onDrag={(event, { deltaX }) => {\n            this.resizeRow({ dataKey, deltaX });\n          }}\n          onStart={(event, { deltaX }) => {\n            this.setState({\"isResize\": true});\n          }}\n          onStop={(event, { deltaX }) => {\n            setTimeout(() => {\n              this.setState({\"isResize\": false})\n            }, 300);  // 300 milliseconds delay\n          }}\n          position={{ x: 0 }}\n          zIndex={999}\n        >\n          <span className=\"DragHandleIcon\" onMouseDown={(event) => event.stopPropagation()}>⋮</span>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n\n  selectionHandler(isChecked, rowData){\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    console.log(\"chexmix\", isChecked, rowData)\n    const { selected } = this.state;\n    console.log(\"state selected before change\", selected)\n    let item = rowData[this.props.configProps.downloadField];\n    const existingIndex = selected.indexOf(item);\n    // if check is true, add to state\n    if (isChecked && existingIndex === -1) {\n      this.setState(prevState => ({\n        selected: [...prevState.selected, item]\n      }));\n    }\n      // if check is false, remove from state\n    if (!isChecked && existingIndex !== -1) {\n      this.setState(prevState => ({\n        selected: prevState.selected.filter(x => x !== item)\n      }));\n    }\n    if (this.state.selected.length > downloadLimit - 2) {\n      alert(\"Warning: We limit to at most \" + downloadLimit + \" concurrent downloads.\")\n    }\n  }\n\n  sortHandler({ sortBy, sortDirection }) {\n\n    if (!this.state.isResize){\n      this.setState({ sortBy, sortDirection });\n    }\n  }\n\n  render() {\n    const { fields, sortBy, sortDirection, selected } = this.state;\n    const finalData = this.getSortData();\n\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <VisDataTableControl\n          list={fields}\n          onSortEnd={this.onSortEnd}\n          onCheckChanged={this.onCheckChangedHandler}\n          onAllCheck={this.onAllCheckHandler}\n        />\n        <AutoSizer ref={this.autoSizer} onResize={this.onResize}>\n          {({ width, height }) => (\n            <Table\n              width={width}\n              height={height}\n              headerHeight={25}\n              rowHeight={20}\n              rowClassName={rowClassName}\n              rowCount={finalData.length}\n              rowGetter={({ index }) => finalData[index]}\n              sort={this.sortHandler}\n              sortBy={sortBy}\n              sortDirection={sortDirection}\n            >\n              <Column\n                key=\"checkbox\"\n                dataKey=\"checkbox\"\n                width={50} // Adjust width as needed\n                label=\"↓\"\n                headerRenderer={() => <div title=\"Download Selected Files\" onClick={(e) => { this.downloadSelected() }}> <FontAwesomeIcon icon={faFileArrowDown} style={{ height: '1.8em', color: '#1b7d00' }} /></div>}\n                cellRenderer={({ rowData }) => (\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(rowData[this.props.configProps.downloadField])}\n                    onChange={(e) => this.selectionHandler(e.target.checked, rowData)}\n                  />\n                )}\n              />\n              {fields\n                .map((f) => (\n                  <Column\n                    key={f.dataKey}\n                    cellDataGetter={({ rowData }) => rowData[f.dataKey]}\n                    dataKey={f.dataKey}\n                    label={f.label}\n                    width={width * f.width}\n                    headerRenderer={this.headerRenderer}\n                    cellRenderer={(d) => cellRenderer(d, f)}\n                  />\n                ))}\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nSelectDataTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n"]}