{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/Heatmap.js","source/components/partials/tooltip.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fd07Q\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $b1282ad851fe5139$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\n\nvar $bN8Lq = parcelRequire(\"bN8Lq\");\nfunction $b1282ad851fe5139$var$Heatmap(props) {\n    const self = (0, $acw62.useRef)();\n    const scales = {\n        x: $9NlP8.scaleBand(),\n        y: $9NlP8.scaleBand(),\n        color: $9NlP8.scaleSequential()\n    };\n    const margin = {\n        top: 10,\n        right: 10,\n        bottom: 30,\n        left: 60\n    };\n    const myGroups = $9NlP8.map(props.data, (d)=>d[props.fields.x]).keys();\n    const myVars = $9NlP8.map(props.data, (d)=>d[props.fields.y]).keys();\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            // Remove old svg if any\n            $9NlP8.select(self.current).select('.tooltip').remove('div');\n            $9NlP8.select(self.current).selectAll('svg').remove('svg');\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            let { data: data } = props;\n            if (props.filters.length !== 0) data = props.filterData;\n            const svg = $9NlP8.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n            // Create and draw x-axis\n            scales.x.range([\n                0,\n                innerWidth\n            ]).domain(myGroups).padding(0.05);\n            svg.append('g').style('font-size', 13).attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(scales.x).tickSize(0)).select('.domain').remove();\n            // Create and draw y-axis\n            scales.y.range([\n                innerHeight,\n                0\n            ]).domain(myVars).padding(0.05);\n            svg.append('g').style('font-size', 13).call($9NlP8.axisLeft(scales.y).tickSize(0)).select('.domain').remove();\n            // Create color scale\n            scales.color.interpolator($9NlP8.interpolateInferno).domain($9NlP8.extent(props.data, (d)=>d[props.fields.z]));\n            // create a tooltip\n            const addLabel = (d)=>`The ${props.fields.z} of this \n      cell is: ${(0, $63tWu.numFixed)(d.z ? d.z : 0)}`;\n            const offset = {\n                x: 80,\n                y: 0\n            };\n            const tooltipHandlers = (0, $bN8Lq.default)(self.current, addLabel, offset);\n            // Group data by the values of x and y\n            // then aggregate to one value using mean\n            // @TODO add option to choose different function such as: count, max, ..\n            const visData = [];\n            myGroups.forEach((g)=>myVars.forEach((v)=>{\n                    const currentData = data.filter((d)=>d[props.fields.x] === g && d[props.fields.y] === v);\n                    visData.push({\n                        g: g,\n                        v: v,\n                        z: $9NlP8.mean(currentData, (d)=>d[props.fields.z])\n                    });\n                }));\n            // Draw each cell\n            svg.selectAll().data(visData, (d)=>`${d.g}:${d.v}`).enter().append('rect').attr('x', (d)=>scales.x(d.g)).attr('y', (d)=>scales.y(d.v)).attr('rx', 4).attr('ry', 4).attr('width', scales.x.bandwidth()).attr('height', scales.y.bandwidth()).style('fill', (d)=>scales.color(d.z)).style('stroke-width', 4).style('stroke', 'none').style('opacity', 0.8).on('mousemove', tooltipHandlers.mousemove).on('mouseleave', tooltipHandlers.mouseleave).on('click', (d)=>{\n                const filters = [\n                    {\n                        id: `${props.id}_x`,\n                        title: props.title,\n                        field: props.fields.x,\n                        operation: 'in',\n                        values: [\n                            d.g\n                        ]\n                    },\n                    {\n                        id: `${props.id}_y`,\n                        title: props.title,\n                        field: props.fields.y,\n                        operation: 'in',\n                        values: [\n                            d.v\n                        ]\n                    }\n                ];\n                props.filterAdded(filters);\n            });\n        }, 100);\n    }, [\n        props.layout,\n        props.filters,\n        props.filterData\n    ]);\n    return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createElement(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $b1282ad851fe5139$export$2e2bcd8739ae039 = $b1282ad851fe5139$var$Heatmap;\n$b1282ad851fe5139$var$Heatmap.propTypes = {\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        x: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        z: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired\n    }).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    layout: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        width: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired,\n        currentCols: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired\n    }).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired\n};\n\n});\nparcelRegister(\"bN8Lq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $895b11a613892f4e$export$2e2bcd8739ae039);\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */ function $895b11a613892f4e$var$createTooltip(mount, addLabel, offset) {\n    const tooltip = $9NlP8.select(mount).append('div').style('opacity', 1).attr('class', 'tooltip').style('display', 'none').style('background-color', 'white').style('border', 'solid').style('border-width', '2px').style('border-radius', '5px').style('padding', '5px');\n    const mousemove = function move(d) {\n        tooltip.html(addLabel(d)).style('display', '').style('left', `${offset.x + $9NlP8.mouse(this)[0]}px`).style('top', `${offset.y + $9NlP8.mouse(this)[1]}px`);\n    };\n    const mouseleave = function leave() {\n        tooltip.style('display', 'none');\n    };\n    return {\n        mousemove: mousemove,\n        mouseleave: mouseleave\n    };\n}\nvar $895b11a613892f4e$export$2e2bcd8739ae039 = $895b11a613892f4e$var$createTooltip;\n\n});\n\n\n\n//# sourceMappingURL=Heatmap.dda48e74.js.map\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\nimport createTooltip from '../../partials/tooltip';\n\nfunction Heatmap(props) {\n  const self = useRef();\n  const scales = {\n    x: d3.scaleBand(),\n    y: d3.scaleBand(),\n    color: d3.scaleSequential(),\n  };\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 30,\n    left: 60,\n  };\n\n  const myGroups = d3.map(props.data, (d) => d[props.fields.x]).keys();\n  const myVars = d3.map(props.data, (d) => d[props.fields.y]).keys();\n\n  useEffect(() => {\n    setTimeout(() => {\n      // Remove old svg if any\n      d3.select(self.current).select('.tooltip').remove('div');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Create and draw x-axis\n      scales.x.range([0, innerWidth]).domain(myGroups).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.x).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create and draw y-axis\n      scales.y.range([innerHeight, 0]).domain(myVars).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .call(d3.axisLeft(scales.y).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create color scale\n      scales.color\n        .interpolator(d3.interpolateInferno)\n        .domain(d3.extent(props.data, (d) => d[props.fields.z]));\n\n      // create a tooltip\n      const addLabel = (d) => `The ${props.fields.z} of this \n      cell is: ${numFixed(d.z ? d.z : 0)}`;\n      const offset = {\n        x: 80,\n        y: 0,\n      };\n      const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n\n      // Group data by the values of x and y\n      // then aggregate to one value using mean\n      // @TODO add option to choose different function such as: count, max, ..\n      const visData = [];\n      myGroups.forEach((g) => myVars.forEach((v) => {\n        const currentData = data.filter(\n          (d) => d[props.fields.x] === g && d[props.fields.y] === v,\n        );\n        visData.push({\n          g,\n          v,\n          z: d3.mean(currentData, (d) => d[props.fields.z]),\n        });\n      }));\n\n      // Draw each cell\n      svg\n        .selectAll()\n        .data(visData, (d) => `${d.g}:${d.v}`)\n        .enter()\n        .append('rect')\n        .attr('x', (d) => scales.x(d.g))\n        .attr('y', (d) => scales.y(d.v))\n        .attr('rx', 4)\n        .attr('ry', 4)\n        .attr('width', scales.x.bandwidth())\n        .attr('height', scales.y.bandwidth())\n        .style('fill', (d) => scales.color(d.z))\n        .style('stroke-width', 4)\n        .style('stroke', 'none')\n        .style('opacity', 0.8)\n        .on('mousemove', tooltipHandlers.mousemove)\n        .on('mouseleave', tooltipHandlers.mouseleave)\n        .on('click', (d) => {\n          const filters = [\n            {\n              id: `${props.id}_x`,\n              title: props.title,\n              field: props.fields.x,\n              operation: 'in',\n              values: [d.g],\n            },\n            {\n              id: `${props.id}_y`,\n              title: props.title,\n              field: props.fields.y,\n              operation: 'in',\n              values: [d.v],\n            },\n          ];\n          props.filterAdded(filters);\n        });\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default Heatmap;\n\nHeatmap.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string.isRequired,\n  }).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n","import * as d3 from 'd3';\n\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */\n\nfunction createTooltip(mount, addLabel, offset) {\n  const tooltip = d3\n    .select(mount)\n    .append('div')\n    .style('opacity', 1)\n    .attr('class', 'tooltip')\n    .style('display', 'none')\n    .style('background-color', 'white')\n    .style('border', 'solid')\n    .style('border-width', '2px')\n    .style('border-radius', '5px')\n    .style('padding', '5px');\n\n  const mousemove = function move(d) {\n    tooltip\n      .html(addLabel(d))\n      .style('display', '')\n      .style('left', `${offset.x + d3.mouse(this)[0]}px`)\n      .style('top', `${offset.y + d3.mouse(this)[1]}px`);\n  };\n\n  const mouseleave = function leave() {\n    tooltip.style('display', 'none');\n  };\n\n  return { mousemove, mouseleave };\n}\n\nexport default createTooltip;\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$b1282ad851fe5139$export$2e2bcd8739ae039","$acw62","$9NlP8","$c9Z8w","$63tWu","$bN8Lq","$b1282ad851fe5139$var$Heatmap","props","self","useRef","scales","x","scaleBand","y","color","scaleSequential","myGroups","map","data","d","fields","keys","myVars","useEffect","setTimeout","select","current","remove","selectAll","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","filters","length","filterData","svg","append","attr","range","domain","padding","style","call","axisBottom","tickSize","axisLeft","interpolator","interpolateInferno","extent","z","tooltipHandlers","numFixed","visData","forEach","g","currentData","filter","push","mean","enter","bandwidth","on","mousemove","mouseleave","id","title","field","operation","values","filterAdded","layout","createElement","ref","role","propTypes","string","isRequired","arrayOf","shape","number","currentCols","func","$895b11a613892f4e$export$2e2bcd8739ae039","mount","addLabel","offset","tooltip","html","mouse","React","d3","PropTypes","createTooltip","Heatmap","margin","top","right","bottom","left","move","leave"],"version":3,"file":"Heatmap.dda48e74.js.map"}