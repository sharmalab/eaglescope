{"version":3,"sources":["components/VisualTools/Chart/BarChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_tooltip","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","transformList","data","f","map","Map","forEach","d","items","Array","isArray","from","key","value","transform","field","isList","arguments","length","undefined","collator","Intl","Collator","numeric","sensitivity","collSort","b","compare","nest","sortKeys","rollup","v","entries","wrap","text","width","each","updateBars","currentText","select","words","split","reverse","word","line","lineNumber","lineHeight","y","attr","dy","parseFloat","tspan","append","concat","pop","push","join","node","getComputedTextLength","BarChart","props","margin","top","right","bottom","left","fields","x","fullData","self","useRef","scaleRef","hightRef","viewerRef","createXScale","xScale","scaleBand","domain","flat","range","padding","createYScale","height","yScale","scaleLinear","max","drawBar","selection","className","addLabel","offset","tooltipHandlers","createTooltip","current","selectAll","enterBars","enter","bandwidth","on","mousemove","mouseleave","currentData","_props$fields","selected","filter","id","title","operation","values","filterAdded","merge","transition","duration","exit","remove","useEffect","setTimeout","rect","getBoundingClientRect","innerWidth","innerHeight","svg","xAxis","axisBottom","yAxis","axisLeft","tickSize","layout","filters","filterData","createElement","ref","style","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","bool","func","number","currentCols"],"mappings":"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","file":"BarChart.740ea7bd.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport createTooltip from '../../partials/tooltip';\n\nconst transformList = (data, f) => {\n  const map = new Map();\n  data.forEach((d) => {\n    const items = d[f];\n    if (Array.isArray(items)) {\n      items.forEach((i) => {\n        if (!map.has(i)) { map.set(i, 0); }\n        map.set(i, map.get(i) + 1);\n      });\n    } else {\n      if (!map.has(items)) { map.set(items, 0); }\n      map.set(items, map.get(items) + 1);\n    }\n  });\n  return Array.from(map).map((d) => ({ key: d[0], value: d[1] }));\n};\n\nconst transform = (data, field, isList = false) => {\n  if (isList) {\n    return transformList(data, field);\n  }\n  const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  function collSort(a,b){\n    return collator.compare(a,b);\n  }\n  return d3.nest().key((d) => d[field])\n    .sortKeys(collSort)\n    .rollup((v) => v.length)\n    .entries(data);\n};\n\nconst wrap = (text, width) => {\n  text.each(function updateBars() {\n    const currentText = d3.select(this);\n    const words = currentText.text().split(/\\s+/).reverse();\n    let word;\n    let line = [];\n    let lineNumber = 0;\n    const lineHeight = 1.1; // ems\n    const y = currentText.attr('y');\n    const dy = parseFloat(currentText.attr('dy'));\n    let tspan = currentText\n      .text(null)\n      .append('tspan')\n      .attr('x', 0)\n      .attr('y', y)\n      .attr('dy', `${dy}em`);\n    word = words.pop();\n    while (word) {\n      line.push(word);\n      tspan.text(line.join(' '));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(' '));\n        line = [word];\n        tspan = currentText\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', `${++lineNumber * lineHeight + dy}em`)\n          .text(word);\n      }\n      word = words.pop();\n    }\n  });\n};\n\nfunction BarChart(props) {\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 35,\n    left: 35,\n  };\n\n  const fields = { x: 'key', y: 'value' };\n  const fullData = transform(props.data, props.fields.x, props.fields.isList);\n  const self = useRef();\n  const scaleRef = useRef();\n  const hightRef = useRef();\n  const viewerRef = useRef();\n\n  const createXScale = (f, width) => {\n    // set the ranges\n    const xScale = d3\n      .scaleBand()\n      .domain(fullData.map((d) => d[f]).flat())\n      .range([0, width])\n      .padding(0.1);\n    return xScale;\n  };\n\n  const createYScale = (f, height) => {\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(fullData, (d) => d[f])])\n      .range([height, 0]);\n    return yScale;\n  };\n\n  const drawBar = (selection, data, className = 'og') => {\n    const addLabel = (d) => `${d.key}: ${d.value}`;\n    const offset = {\n      x: 60,\n      y: 0,\n    };\n    const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n    const updateBars = selection.selectAll(`rect.${className}`).data(data, (d) => d[fields.x]);\n\n    const enterBars = updateBars.enter().append('rect');\n    enterBars\n      .attr('class', `${className}`)\n      .attr('x', (d) => scaleRef.current.x(d[fields.x]))\n      .attr('width', scaleRef.current.x.bandwidth())\n      .attr('y', hightRef.current);\n    enterBars\n      .on('mousemove', tooltipHandlers.mousemove)\n      .on('mouseleave', tooltipHandlers.mouseleave)\n      .on('click', (currentData) => {\n        const selected = enterBars.filter((d) => d === currentData);\n        const value = selected.data()[0].key;\n        const filter = props?.fields?.isList ? {\n          id: props.id,\n          title: props.title,\n          field: props.fields.x,\n          operation: 'has',\n          values: value,\n        } : {\n          id: props.id,\n          title: props.title,\n          field: props.fields.x,\n          operation: 'eq',\n          values: value,\n        };\n        props.filterAdded([filter]);\n      });\n\n    updateBars\n      .merge(enterBars)\n      .transition()\n      .duration(1000)\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]))\n      .attr('height', (d) => hightRef.current - scaleRef.current.y(d[fields.y]));\n\n    // update_bars\n    updateBars\n      .exit()\n      .transition()\n      .duration(1000)\n      .attr('y', hightRef.current)\n      .attr('height', 0)\n      .remove();\n\n    return updateBars;\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n      hightRef.current = innerHeight;\n\n      // create svg\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      viewerRef.current = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      const xScale = createXScale(fields.x, innerWidth);\n      const yScale = createYScale(fields.y, innerHeight);\n      scaleRef.current = { x: xScale, y: yScale };\n\n      const xAxis = d3.axisBottom(xScale);\n      viewerRef.current\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(xAxis)\n        .selectAll('.tick text')\n        .call(wrap, xScale.bandwidth());\n\n      // add the y Axis\n      const yAxis = d3.axisLeft(yScale).tickSize(-innerWidth);\n      viewerRef.current.append('g').call(yAxis);\n\n      drawBar(viewerRef.current, fullData, 'og');\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let data = [];\n      if (props.filters.length > 0) {\n        data = transform(props.filterData, props.fields.x, props.fields.isList);\n      } else {\n        data = fullData;\n      }\n      drawBar(viewerRef.current, data, 'ft');\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default BarChart;\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, isList: PropTypes.bool }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"]}