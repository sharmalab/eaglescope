{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/ParallelCoordinates.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"d2VX5\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $97f86a5098f2390d$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\nfunction $97f86a5098f2390d$var$ParallelCoordinates(props) {\n    const self = (0, $acw62.useRef)();\n    const foregroundRef = (0, $acw62.useRef)();\n    const backgroundRef = (0, $acw62.useRef)();\n    const dimensions = props.fields.y;\n    const scales = (0, $acw62.useRef)({\n        x: $9NlP8.scalePoint(),\n        y: {}\n    });\n    const margin = {\n        top: 25,\n        right: 40,\n        bottom: 20,\n        left: 40\n    };\n    function path(d, ctx) {\n        ctx.beginPath();\n        dimensions.forEach((p, i)=>{\n            if (i === 0) ctx.moveTo(scales.current.x(p), scales.current.y[p](d[p]));\n            else ctx.lineTo(scales.current.x(p), scales.current.y[p](d[p]));\n        });\n        ctx.stroke();\n    }\n    function brush() {\n        if (!$9NlP8.event.selection) return;\n        const field = dimensions.filter((d)=>scales.current.y[d].brush === $9NlP8.event.target)[0];\n        const [x1, x0] = [\n            $9NlP8.event.selection[0],\n            $9NlP8.event.selection[1]\n        ];\n        props.filterAdded([\n            {\n                id: props.id,\n                title: props.title,\n                field: field,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(scales.current.y[field].invert(x0)),\n                    (0, $63tWu.numFixed)(scales.current.y[field].invert(x1))\n                ]\n            }\n        ]);\n    }\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            $9NlP8.select(self.current).selectAll('canvas').remove('canvas');\n            $9NlP8.select(self.current).selectAll('svg').remove('svg');\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            backgroundRef.current = $9NlP8.select(self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${margin.left}px,${margin.top}px)`);\n            foregroundRef.current = $9NlP8.select(self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${margin.left}px,${margin.top - innerHeight - 5}px)`);\n            backgroundRef.current = backgroundRef.current.node().getContext('2d');\n            foregroundRef.current = foregroundRef.current.node().getContext('2d');\n            foregroundRef.current.strokeStyle = 'rgba(0,100,160,0.24)';\n            backgroundRef.current.strokeStyle = 'rgba(0,0,0,0.1)';\n            const svg = $9NlP8.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height).style('transform', `translate(${0}px,${-2 * innerHeight - margin.top / 2}px)`).append('g').style('transform', `translate(${margin.left}px,${margin.top}px)`);\n            scales.current.x.domain(dimensions);\n            scales.current.x.range([\n                0,\n                innerWidth\n            ], 1);\n            dimensions.forEach((d)=>{\n                scales.current.y[d] = $9NlP8.scaleLinear().domain($9NlP8.extent(props.data, (p)=>+p[d])).range([\n                    innerHeight,\n                    0\n                ]);\n            });\n            const g = svg.selectAll('.dimension').data(dimensions).enter().append('g').attr('class', 'dimension').attr('transform', (d)=>`translate(${scales.current.x(d)})`);\n            // Add an axis and title.\n            g.append('g').attr('class', 'axis').each(function addAxis(d) {\n                $9NlP8.select(this).call($9NlP8.axisLeft(scales.current.y[d]));\n            }).append('text').style('text-anchor', 'middle').attr('y', -9).text((d)=>d);\n            g.append('g').attr('class', 'brush').each(function addBrush(d) {\n                $9NlP8.select(this).call(scales.current.y[d].brush = $9NlP8.brushY().extent([\n                    [\n                        -10,\n                        0\n                    ],\n                    [\n                        10,\n                        innerHeight\n                    ]\n                ]).on('end', brush));\n            }).selectAll('rect').attr('x', -8).attr('width', 16);\n        }, 100);\n    }, [\n        props.layout\n    ]);\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            if (!props.filterData) return;\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            // Render selected lines\n            foregroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n            backgroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n            if (props.filters.length === 0) props.data.forEach((d)=>{\n                path(d, foregroundRef.current);\n            });\n            else props.data.forEach((d)=>{\n                if (props.filterData.includes(d)) path(d, foregroundRef.current);\n                else path(d, backgroundRef.current);\n            });\n        }, 100);\n    }, [\n        props.filters,\n        props.filterData,\n        props.layout\n    ]);\n    return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $97f86a5098f2390d$export$2e2bcd8739ae039 = $97f86a5098f2390d$var$ParallelCoordinates;\n$97f86a5098f2390d$var$ParallelCoordinates.propTypes = {\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string).isRequired\n    }).isRequired,\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired,\n    layout: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        width: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired,\n        currentCols: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired\n    }).isRequired\n};\n\n});\n\n\n//# sourceMappingURL=ParallelCoordinates.766cf344.js.map\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nfunction ParallelCoordinates(props) {\n  const self = useRef();\n  const foregroundRef = useRef();\n  const backgroundRef = useRef();\n  const dimensions = props.fields.y;\n  const scales = useRef({\n    x: d3.scalePoint(),\n    y: {},\n  });\n  const margin = {\n    top: 25,\n    right: 40,\n    bottom: 20,\n    left: 40,\n  };\n\n  function path(d, ctx) {\n    ctx.beginPath();\n    dimensions.forEach((p, i) => {\n      if (i === 0) {\n        ctx.moveTo(scales.current.x(p), scales.current.y[p](d[p]));\n      } else {\n        ctx.lineTo(scales.current.x(p), scales.current.y[p](d[p]));\n      }\n    });\n    ctx.stroke();\n  }\n\n  function brush() {\n    if (!d3.event.selection) return;\n    const field = dimensions.filter((d) => scales.current.y[d].brush === d3.event.target)[0];\n    const [x1, x0] = [d3.event.selection[0], d3.event.selection[1]];\n    props.filterAdded([\n      {\n        id: props.id,\n        title: props.title,\n        field,\n        operation: 'range',\n        values: [\n          numFixed(scales.current.y[field].invert(x0)),\n          numFixed(scales.current.y[field].invert(x1)),\n        ],\n      },\n    ]);\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('canvas').remove('canvas');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      backgroundRef.current = d3\n        .select(self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${margin.left}px,${margin.top}px)`);\n\n      foregroundRef.current = d3\n        .select(self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${margin.left}px,${margin.top - innerHeight - 5}px)`);\n\n      backgroundRef.current = backgroundRef.current.node().getContext('2d');\n      foregroundRef.current = foregroundRef.current.node().getContext('2d');\n\n      foregroundRef.current.strokeStyle = 'rgba(0,100,160,0.24)';\n      backgroundRef.current.strokeStyle = 'rgba(0,0,0,0.1)';\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .style('transform', `translate(${0}px,${-2 * innerHeight - margin.top / 2}px)`)\n        .append('g')\n        .style('transform', `translate(${margin.left}px,${margin.top}px)`);\n\n      scales.current.x.domain(dimensions);\n      scales.current.x.range([0, innerWidth], 1);\n\n      dimensions.forEach((d) => {\n        scales.current.y[d] = d3\n          .scaleLinear()\n          .domain(d3.extent(props.data, (p) => +p[d]))\n          .range([innerHeight, 0]);\n      });\n\n      const g = svg\n        .selectAll('.dimension')\n        .data(dimensions)\n        .enter()\n        .append('g')\n        .attr('class', 'dimension')\n        .attr('transform', (d) => `translate(${scales.current.x(d)})`);\n\n      // Add an axis and title.\n      g.append('g')\n        .attr('class', 'axis')\n        .each(function addAxis(d) {\n          d3.select(this).call(d3.axisLeft(scales.current.y[d]));\n        })\n        .append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', -9)\n        .text((d) => d);\n\n      g.append('g')\n        .attr('class', 'brush')\n        .each(function addBrush(d) {\n          d3.select(this).call(\n            (scales.current.y[d].brush = d3\n              .brushY()\n              .extent([\n                [-10, 0],\n                [10, innerHeight],\n              ])\n              .on('end', brush)),\n          );\n        })\n        .selectAll('rect')\n        .attr('x', -8)\n        .attr('width', 16);\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (!props.filterData) return;\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      // Render selected lines\n      foregroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n      backgroundRef.current.clearRect(0, 0, innerWidth + 1, innerHeight + 1);\n      if (props.filters.length === 0) {\n        props.data.forEach((d) => {\n          path(d, foregroundRef.current);\n        });\n      } else {\n        props.data.forEach((d) => {\n          if (props.filterData.includes(d)) {\n            path(d, foregroundRef.current);\n          } else {\n            path(d, backgroundRef.current);\n          }\n        });\n      }\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default ParallelCoordinates;\n\nParallelCoordinates.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    y: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$97f86a5098f2390d$export$2e2bcd8739ae039","set","s","enumerable","$ayMG0","$acw62","$9NlP8","$c9Z8w","$63tWu","$97f86a5098f2390d$var$ParallelCoordinates","props","self","useRef","foregroundRef","backgroundRef","dimensions","fields","y","scales","x","scalePoint","margin","top","right","bottom","left","path","d","ctx","beginPath","forEach","p","i","moveTo","current","lineTo","stroke","brush","event","selection","field","filter","target","x1","x0","filterAdded","id","title","operation","values","numFixed","invert","useEffect","setTimeout","select","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","append","attr","style","node","getContext","strokeStyle","svg","domain","range","scaleLinear","extent","data","g","enter","each","call","axisLeft","text","brushY","on","layout","filterData","clearRect","filters","length","includes","jsx","ref","role","propTypes","string","isRequired","arrayOf","shape","func","number","currentCols"],"version":3,"file":"ParallelCoordinates.766cf344.js.map"}