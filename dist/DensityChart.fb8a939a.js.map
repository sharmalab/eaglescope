{"mappings":"A,I,E,A,W,iB,C,A,C,E,E,Q,A,E,Q,S,C,C,C,E,S,E,C,E,M,C,E,Y,O,Q,U,O,O,Q,C,S,C,E,O,O,C,E,S,C,E,O,G,Y,O,Q,E,W,G,Q,I,O,S,C,S,O,C,C,E,E,C,O,c,C,E,O,C,a,C,M,C,C,G,E,O,C,O,C,K,ECAA,IAGiDgB,EAHjDwH,EAAAC,EAAA,EAAA,UACAE,EAAAF,EAAA,EAAA,UACAG,EACiD5H,CAAAA,EADjD,EAAA,WACiDA,EAAAK,UAAA,CAAAL,EAAA,CAAA,QAAAA,CAAA,E,E,E,SAAA,SAAA+H,EAAA/H,CAAA,EAAA,GAAA,YAAA,OAAAQ,QAAA,OAAA,KAAA,IAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,MAAAuH,AAAAA,CAAAA,EAAA,SAAA/H,CAAA,EAAA,OAAAA,EAAAU,EAAAD,CAAA,CAAA,EAAAT,EAAA,CAAA,SAAAyH,EAAAzH,CAAA,CAAAS,CAAA,EAAA,GAAA,CAAAA,GAAAT,GAAAA,EAAAK,UAAA,CAAA,OAAAL,EAAA,GAAA,OAAAA,GAAA,UAAAgI,EAAAhI,IAAA,YAAA,OAAAA,EAAA,MAAA,CAAA,QAAAA,CAAA,EAAA,IAAAU,EAAAqH,EAAAtH,GAAA,GAAAC,GAAAA,EAAAC,GAAA,CAAAX,GAAA,OAAAU,EAAAE,GAAA,CAAAZ,GAAA,IAAAa,EAAA,CAAAC,UAAA,IAAA,EAAAC,EAAAlB,OAAAC,cAAA,EAAAD,OAAAmB,wBAAA,CAAA,IAAA,IAAAC,KAAAjB,EAAA,GAAA,YAAAiB,GAAA,AAAA,CAAA,CAAA,CAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAnB,EAAAiB,GAAA,CAAA,IAAAG,EAAAL,EAAAlB,OAAAmB,wBAAA,CAAAhB,EAAAiB,GAAA,IAAAG,CAAAA,GAAAA,CAAAA,EAAAR,GAAA,EAAAQ,EAAAC,GAAAA,AAAAA,EAAAxB,OAAAC,cAAA,CAAAe,EAAAI,EAAAG,GAAAP,CAAA,CAAAI,EAAA,CAAAjB,CAAA,CAAAiB,EAAA,AAAA,CAAA,OAAAJ,EAAA,OAAA,CAAAb,EAAAU,GAAAA,EAAAW,GAAA,CAAArB,EAAAa,GAAAA,CAAA,CAEjD,SAASoH,EAAa1G,CAAK,EACzB,IAAIC,EAAgB,CAAC,EAAG,EAAE,CACtBC,EAAc,CAAC,EAAG,EAAE,CAClBC,EAAO,AAAA,CAAA,EAAAC,EAAAA,MAAM,AAANA,IACPC,EAAM,AAAA,CAAA,EAAAD,EAAAA,MAAM,AAANA,IACNE,EAAS,AAAA,CAAA,EAAAF,EAAAA,MAAAA,AAAAA,EAAO,CACpBG,EAAG6F,EAAG5F,WAAW,GACjBC,EAAG2F,EAAG5F,WAAW,EACnB,GAQME,EAAM,WACV,GAAK0F,EAAGzF,KAAK,CAACC,SAAS,EACvB,IAAAC,EAAiB,CAACC,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EACzDY,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EAAE,CADtCc,EAAEH,CAAA,CAAFG,EAAAA,CAAIC,EAAEJ,CAAA,CAAFI,EAAAA,CAEXC,EAAiB,CAACJ,KAAKK,GAAG,CAAClB,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EACzDY,KAAKK,GAAG,CAAClB,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EAAE,CADtCkB,EAAEF,CAAA,CAAFE,EAAAA,CAAIC,EAAEH,CAAA,CAAFG,EAAAA,CAELC,EAAU,CACd,CACEC,GAAE,GAAAC,MAAA,CAAKxB,EAAMuB,EAAE,CAAA,MACfE,MAAOzB,EAAMyB,KAAK,CAClBC,MAAO1B,EAAM2B,MAAM,CAACpB,CAAC,CACrBqB,UAAW,QACXC,OAAQ,CAAC,AAAA,CAAA,EAAAC,EAAAA,QAAAA,AAAAA,EAASxB,EAAOyB,OAAO,CAACxB,CAAC,CAACyB,MAAM,CAAChB,IAAM,AAAA,CAAA,EAAAc,EAAAA,QAAAA,AAAAA,EAASxB,EAAOyB,OAAO,CAACxB,CAAC,CAACyB,MAAM,CAACZ,IAAjFS,AACF,EACA,CACEN,GAAE,GAAAC,MAAA,CAAKxB,EAAMuB,EAAE,CAAA,MACfE,MAAOzB,EAAMyB,KAAK,CAClBC,MAAO1B,EAAM2B,MAAM,CAAClB,CAAC,CACrBmB,UAAW,QACXC,OAAQ,CAAC,AAAA,CAAA,EAAAC,EAAAA,QAAAA,AAAAA,EAASxB,EAAOyB,OAAO,CAACtB,CAAC,CAACuB,MAAM,CAACX,IAAM,AAAA,CAAA,EAAAS,EAAAA,QAAAA,AAAAA,EAASxB,EAAOyB,OAAO,CAACtB,CAAC,CAACuB,MAAM,CAACf,IAAjFY,AACF,EACD,CACD7B,EAAMiC,WAAW,CAACX,GACpB,EA6HA,MA3HA,AAAA,CAAA,EAAAY,EAAAA,SAAAA,AAAAA,EAAU,WACRC,WAAW,WACTiE,EAAGhE,MAAM,CAACjC,EAAK4B,OAAO,EAAEM,SAAS,CAAC,OAAOC,MAAM,CAAC,OAChD,IAAMC,EAAOpC,EAAK4B,OAAO,CAACS,qBAAqB,GACzCC,EAAaF,EAAKG,KAAK,CAhCzB,GAFC,GAmCCC,EAAcJ,EAAKK,MAAM,CApC5B,GAEG,EAoCNvC,CAAAA,EAAI0B,OAAO,CAAGqE,EACXhE,MAAM,CAACjC,EAAK4B,OAAO,EACnBc,MAAM,CAAC,OACPC,IAAI,CAAC,QAASP,EAAKG,KAAK,EACxBI,IAAI,CAAC,SAAUP,EAAKK,MAAM,EAC1BC,MAAM,CAAC,KACPC,IAAI,CAAC,YAAW,aAAAtB,MAAA,CAzCf,GAyCyC,KAAAA,MAAA,CA5C1C,GA4CwD,MAE3D,IAAMuB,EAAgBqD,EAAGpD,MAAM,CAAChD,EAAMiD,IAAI,CAAE,SAACC,CAAC,EAAA,OAAKA,CAAC,CAAClD,EAAM2B,MAAM,CAACpB,CAAC,CAAC,AAAA,GAC9D4C,EAAkBJ,AAAAA,CAAAA,CAAa,CAAC,EAAE,CAAGA,CAAa,CAAC,EAAE,AAAF,EAFlC,GAGjBK,EAAgBgD,EAAGpD,MAAM,CAAChD,EAAMiD,IAAI,CAAE,SAACC,CAAC,EAAA,OAAKA,CAAC,CAAClD,EAAM2B,MAAM,CAAClB,CAAC,CAAC,AAAA,GAC9D4C,EAAkBD,AAAAA,CAAAA,CAAa,CAAC,EAAE,CAAGA,CAAa,CAAC,EAAE,AAAF,EAJlC,GAKvB9C,EAAOyB,OAAO,CAACxB,CAAC,CACb+C,MAAM,CAAC,CAACP,CAAa,CAAC,EAAE,CAAGI,EAC1BJ,CAAa,CAAC,EAAE,CAAGI,EAAe,EACnCI,KAAK,CAAC,CAAC,EAAGd,EAAW,EAExBnC,EAAOyB,OAAO,CAACtB,CAAC,CACb6C,MAAM,CAAC,CAACF,CAAa,CAAC,EAAE,CAAGC,EAC1BD,CAAa,CAAC,EAAE,CAAGC,EAAe,EACnCE,KAAK,CAAC,CAACZ,EAAa,EAAE,EAEzBtC,EAAI0B,OAAO,CACRc,MAAM,CAAC,KACPC,IAAI,CAAC,YAAW,eAAAtB,MAAA,CAAiBmB,EAAW,MAC5C/C,IAAI,CAACwG,EAAG5C,UAAU,CAAClD,EAAOyB,OAAO,CAACxB,CAAC,GACtCF,EAAI0B,OAAO,CAACc,MAAM,CAAC,KAAKjD,IAAI,CAACwG,EAAG3C,QAAQ,CAACnD,EAAOyB,OAAO,CAACtB,CAAC,GAEzD,IAAMiD,EAA+B,WACnC,IAAMC,EAAMtD,EAAI0B,OAAO,CAACK,MAAM,CAAC,YAAYwB,IAAI,GAG/C,MAAO,CAFQwC,EAAGzF,KAAK,CAACkD,WAAW,CAACC,OAAO,CAAGH,EAAInB,qBAAqB,GAAGjC,CAAC,CAC5D6F,EAAGzF,KAAK,CAACkD,WAAW,CAACE,OAAO,CAAGJ,EAAInB,qBAAqB,GAAG/B,CAAC,CACpD,AACzB,EAEMuD,EAAQoC,EACXpC,KAAK,GACLhB,MAAM,CAAC,CACN,CAAC,EAAG,EAAE,CACN,CAACP,EAAYE,EAAY,CAC1B,EAAEsB,EAAE,CAAC,QAAS,WACbhE,EAAgByD,IAChBrD,EAAI0B,OAAO,CAACM,SAAS,CAAC,cAAcC,MAAM,CAAC,OAC7C,GAAG2B,EAAE,CAAC,QAAS,WACb/D,EAAcwD,IACdrD,EAAI0B,OAAO,CAACM,SAAS,CAAC,kBAAkBC,MAAM,CAAC,kBAC/CjC,EAAI0B,OAAO,CAACM,SAAS,CAAC,cAAcC,MAAM,CAAC,QAC3C,IAAM4B,EAASpD,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EAClDiE,EAASrD,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EACrCG,EAAI0B,OAAO,CAACc,MAAM,CAAC,QACnCC,IAAI,CAAC,QAAS,iBACdA,IAAI,CAAC,WAAY,YACjBA,IAAI,CAAC,IAAKoB,GACVpB,IAAI,CAAC,IAAKqB,GACVrB,IAAI,CAAC,QAAShC,KAAKsD,GAAG,CAAClE,CAAW,CAAC,EAAE,CAAGD,CAAa,CAAC,EAAE,GACxD6C,IAAI,CAAC,SAAUhC,KAAKsD,GAAG,CAAClE,CAAW,CAAC,EAAE,CAAGD,CAAa,CAAC,EAAE,GACzD6C,IAAI,CAAC,OAAQ,2BAClB,GACCmB,EAAE,CAAC,MAAO,WACT/D,EAAcwD,IACdrD,EAAI0B,OAAO,CAACM,SAAS,CAAC,kBAAkBC,MAAM,CAAC,kBAC/CjC,EAAI0B,OAAO,CAACM,SAAS,CAAC,cAAcC,MAAM,CAAC,QAC3C,IAAM4B,EAASpD,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EAClDiE,EAASrD,KAAKC,GAAG,CAACd,CAAa,CAAC,EAAE,CAAEC,CAAW,CAAC,EAAE,EAClDmE,EAAehE,EAAI0B,OAAO,CAACc,MAAM,CAAC,QACrCC,IAAI,CAAC,QAAS,iBACdA,IAAI,CAAC,WAAY,YACjBA,IAAI,CAAC,IAAKoB,GACVpB,IAAI,CAAC,IAAKqB,GACVrB,IAAI,CAAC,QAAShC,KAAKsD,GAAG,CAAClE,CAAW,CAAC,EAAE,CAAGD,CAAa,CAAC,EAAE,GACxD6C,IAAI,CAAC,SAAUhC,KAAKsD,GAAG,CAAClE,CAAW,CAAC,EAAE,CAAGD,CAAa,CAAC,EAAE,GACzD6C,IAAI,CAAC,OAAQ,4BAChBpC,IACAyB,WACE,WACEkC,EAAa/B,MAAM,EACrB,EACA,GAEJ,GAEFjC,EAAI0B,OAAO,CAACc,MAAM,CAAC,KAAKjD,IAAI,CAACoE,EAC/B,EAAG,IACL,EAAG,CAAChE,EAAMsE,MAAM,CAAC,EAEjB,AAAA,CAAA,EAAApC,EAAAA,SAAAA,AAAAA,EAAU,WACRC,WAAW,WACT,IAAMI,EAAOpC,EAAK4B,OAAO,CAACS,qBAAqB,GACzCC,EAAaF,EAAKG,KAAK,CA3HzB,GAFC,GA8HCC,EAAcJ,EAAKK,MAAM,CA/H5B,GAEG,GA+HAK,EAASjD,EAATiD,IAAI,AACmB,CAAA,IAAzBjD,EAAMsB,OAAO,CAACiD,MAAM,EAAQtB,CAAAA,EAAOjD,EAAMwE,UAAU,AAAVA,EAE7C,IAAMC,EAAC3D,KAAA4D,GAAA,CAAG,GAAO,GAAK5D,KAAK6D,KAAK,CAAC7D,KAAK8D,KAAK,CAAC3B,EAAKsB,MAAM,IACjDM,EAAQuB,EAAG5F,WAAW,GAAG8C,MAAM,CAAC,CAAC,EAAGmB,EAAE,EAAElB,KAAK,CAAC,CAAC,QAAS,UAAU,EAElEuB,EAAcsB,EACjBrB,cAAc,GACdxE,CAAC,CAAC,SAAC2C,CAAC,EAAA,OAAK5C,EAAOyB,OAAO,CAACxB,CAAC,CAAC2C,CAAC,CAAClD,EAAM2B,MAAM,CAACpB,CAAC,CAAC,CAAC,GAC5CE,CAAC,CAAC,SAACyC,CAAC,EAAA,OAAK5C,EAAOyB,OAAO,CAACtB,CAAC,CAACyC,CAAC,CAAClD,EAAM2B,MAAM,CAAClB,CAAC,CAAC,CAAC,GAC5CuE,IAAI,CAAC,CAACvC,EAAYE,EAAY,EAC9BsC,SAAS,CAAC,IAAIhC,GAEjB5C,EAAI0B,OAAO,CAACK,MAAM,CAAC,cAAcE,MAAM,CAAC,KACxCjC,EAAI0B,OAAO,CACRmD,MAAM,CAAC,IAAK,KACZpC,IAAI,CAAC,KAAM,aACXT,SAAS,CAAC,QACVY,IAAI,CAAC6B,GACLK,KAAK,GACLtC,MAAM,CAAC,QACPC,IAAI,CAAC,IAAKsD,EAAGhB,OAAO,IACpBtC,IAAI,CAAC,OAAQ,SAACI,CAAC,EAAA,OAAK2B,EAAM3B,EAAE1E,KAAK,CAAC,EACvC,EAAG,IACL,EAAG,CAACwB,EAAMsE,MAAM,CAAEtE,EAAMsB,OAAO,CAAEtB,EAAMwE,UAAU,CAAC,EAC3CyB,EAAA,OAAA,CAAAZ,aAAA,CAAP,MAAA,CAAY9D,GAAIvB,EAAMuB,EAAG,CAAC+D,IAAKnF,EAAMoF,KAAK,SAASC,MAAO,CAAE9C,MAAO,OAAQE,OAAQ,MAAO,CAAE,EAC9F,CAAC7E,EAAAA,OAAA,CAAA,OAAA,CAEc2I,EAEfA,EAAajB,SAAS,CAAG,CACvBxC,KAAMoE,EAAAA,OAAS,CAAC3B,OAAO,CAAC2B,EAAAA,OAAS,CAAC1B,KAAK,CAAC,CAAC,IAAIC,UAAU,CACvDjE,OAAQ0F,EAAAA,OAAS,CAAC1B,KAAK,CAAC,CAAEpF,EAAG8G,EAAAA,OAAS,CAACxB,MAAM,CAACD,UAAU,CAAEnF,EAAG4G,EAAAA,OAAS,CAACxB,MAAM,CAACD,UAApBnF,AAA+B,GACtFmF,UAAU,CACbrE,GAAI8F,EAAAA,OAAS,CAACxB,MAAM,CAACD,UAAU,CAC/BpB,WAAY6C,EAAAA,OAAS,CAAC3B,OAAO,CAAC2B,EAAAA,OAAS,CAAC1B,KAAK,CAAC,CAAC,IAAIC,UAAU,CAC7DtE,QAAS+F,EAAAA,OAAS,CAAC3B,OAAO,CAAC2B,EAAAA,OAAS,CAAC1B,KAAK,CAAC,CAAC,IAAIC,UAAU,CAC1DtB,OAAQ+C,EAAAA,OAAS,CAAC1B,KAAK,CAAC,CACtBjD,MAAO2E,EAAAA,OAAS,CAACvB,MAAM,CAACF,UAAU,CAClCG,YAAasB,EAAAA,OAAS,CAACvB,MAAM,CAACF,UAA9BG,AACF,GAAGH,UAAU,CACb3D,YAAaoF,EAAAA,OAAS,CAACrB,IAAI,CAACJ,UAAU,CACtCnE,MAAO4F,EAAAA,OAAS,CAACxB,MAAM,CAACD,UAAxBnE,AACF,C","sources":["<anon>","source/components/VisualTools/Chart/DensityChart.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"lSqO9\", function(module, exports) {\n\"use strict\";\nfunction $fed36f965ea78a82$var$_typeof(o) {\n    \"@babel/helpers - typeof\";\n    return $fed36f965ea78a82$var$_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, $fed36f965ea78a82$var$_typeof(o);\n}\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports[\"default\"] = void 0;\n\nvar $fed36f965ea78a82$var$_react = $fed36f965ea78a82$var$_interopRequireWildcard((parcelRequire(\"acw62\")));\n\nvar $fed36f965ea78a82$var$d3 = $fed36f965ea78a82$var$_interopRequireWildcard((parcelRequire(\"9NlP8\")));\n\nvar $fed36f965ea78a82$var$_propTypes = $fed36f965ea78a82$var$_interopRequireDefault((parcelRequire(\"c9Z8w\")));\n\nvar $63tWu = parcelRequire(\"63tWu\");\nfunction $fed36f965ea78a82$var$_interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n        \"default\": e\n    };\n}\nfunction $fed36f965ea78a82$var$_getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(), t = new WeakMap();\n    return ($fed36f965ea78a82$var$_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n        return e ? t : r;\n    })(e);\n}\nfunction $fed36f965ea78a82$var$_interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != $fed36f965ea78a82$var$_typeof(e) && \"function\" != typeof e) return {\n        \"default\": e\n    };\n    var t = $fed36f965ea78a82$var$_getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var u in e)if (\"default\" !== u && ({}).hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n[\"default\"] = e, t && t.set(e, n), n;\n}\nfunction $fed36f965ea78a82$var$DensityChart(props) {\n    var startPosition = [\n        0,\n        0\n    ];\n    var endPosition = [\n        0,\n        0\n    ];\n    var self = (0, $fed36f965ea78a82$var$_react.useRef)();\n    var svg = (0, $fed36f965ea78a82$var$_react.useRef)();\n    var scales = (0, $fed36f965ea78a82$var$_react.useRef)({\n        x: $fed36f965ea78a82$var$d3.scaleLinear(),\n        y: $fed36f965ea78a82$var$d3.scaleLinear()\n    });\n    var margin = {\n        top: 10,\n        right: 30,\n        bottom: 20,\n        left: 40\n    };\n    var end = function end() {\n        if (!$fed36f965ea78a82$var$d3.event.selection) return;\n        var _ref = [\n            Math.min(startPosition[0], endPosition[0]),\n            Math.min(startPosition[1], endPosition[1])\n        ], x0 = _ref[0], y0 = _ref[1];\n        var _ref2 = [\n            Math.max(startPosition[0], endPosition[0]),\n            Math.max(startPosition[1], endPosition[1])\n        ], x1 = _ref2[0], y1 = _ref2[1];\n        var filters = [\n            {\n                id: \"\".concat(props.id, \"_x\"),\n                title: props.title,\n                field: props.fields.x,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(scales.current.x.invert(x0)),\n                    (0, $63tWu.numFixed)(scales.current.x.invert(x1))\n                ]\n            },\n            {\n                id: \"\".concat(props.id, \"_y\"),\n                title: props.title,\n                field: props.fields.y,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(scales.current.y.invert(y1)),\n                    (0, $63tWu.numFixed)(scales.current.y.invert(y0))\n                ]\n            }\n        ];\n        props.filterAdded(filters);\n    };\n    (0, $fed36f965ea78a82$var$_react.useEffect)(function() {\n        setTimeout(function() {\n            $fed36f965ea78a82$var$d3.select(self.current).selectAll('svg').remove('svg');\n            var rect = self.current.getBoundingClientRect();\n            var innerWidth = rect.width - margin.left - margin.right;\n            var innerHeight = rect.height - margin.top - margin.bottom;\n            svg.current = $fed36f965ea78a82$var$d3.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height).append('g').attr('transform', \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n            var paddingPercent = 0.1; // Adjust the percentage of padding as needed\n            var domainExtentX = $fed36f965ea78a82$var$d3.extent(props.data, function(d) {\n                return d[props.fields.x];\n            });\n            var domainPaddingX = (domainExtentX[1] - domainExtentX[0]) * paddingPercent;\n            var domainExtentY = $fed36f965ea78a82$var$d3.extent(props.data, function(d) {\n                return d[props.fields.y];\n            });\n            var domainPaddingY = (domainExtentY[1] - domainExtentY[0]) * paddingPercent;\n            scales.current.x.domain([\n                domainExtentX[0] - domainPaddingX,\n                domainExtentX[1] + domainPaddingX\n            ]).range([\n                0,\n                innerWidth\n            ]);\n            scales.current.y.domain([\n                domainExtentY[0] - domainPaddingY,\n                domainExtentY[1] + domainPaddingY\n            ]).range([\n                innerHeight,\n                0\n            ]);\n            svg.current.append('g').attr('transform', \"translate(0,\".concat(innerHeight, \")\")).call($fed36f965ea78a82$var$d3.axisBottom(scales.current.x));\n            svg.current.append('g').call($fed36f965ea78a82$var$d3.axisLeft(scales.current.y));\n            var getCurrentMouseClickPosition = function getCurrentMouseClickPosition() {\n                var rec = svg.current.select('.overlay').node();\n                var mouseX = $fed36f965ea78a82$var$d3.event.sourceEvent.clientX - rec.getBoundingClientRect().x;\n                var mouseY = $fed36f965ea78a82$var$d3.event.sourceEvent.clientY - rec.getBoundingClientRect().y;\n                return [\n                    mouseX,\n                    mouseY\n                ];\n            };\n            var brush = $fed36f965ea78a82$var$d3.brush().extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    innerWidth,\n                    innerHeight\n                ]\n            ]).on('start', function() {\n                startPosition = getCurrentMouseClickPosition();\n                svg.current.selectAll('.selection').remove('rect');\n            }).on('brush', function() {\n                endPosition = getCurrentMouseClickPosition();\n                svg.current.selectAll('.selected-area').remove('.selected-area');\n                svg.current.selectAll('.selection').remove('rect');\n                var startX = Math.min(startPosition[0], endPosition[0]);\n                var startY = Math.min(startPosition[1], endPosition[1]);\n                var selectArea = svg.current.append('rect').attr('class', 'selected-area').attr('position', 'absolute').attr('x', startX).attr('y', startY).attr('width', Math.abs(endPosition[0] - startPosition[0])).attr('height', Math.abs(endPosition[1] - startPosition[1])).attr('fill', 'rgba(130, 130, 130, 0.5)');\n            }).on('end', function() {\n                endPosition = getCurrentMouseClickPosition();\n                svg.current.selectAll('.selected-area').remove('.selected-area');\n                svg.current.selectAll('.selection').remove('rect');\n                var startX = Math.min(startPosition[0], endPosition[0]);\n                var startY = Math.min(startPosition[1], endPosition[1]);\n                var selectedArea = svg.current.append('rect').attr('class', 'selected-area').attr('position', 'absolute').attr('x', startX).attr('y', startY).attr('width', Math.abs(endPosition[0] - startPosition[0])).attr('height', Math.abs(endPosition[1] - startPosition[1])).attr('fill', 'rgba(140, 140, 140, 0.5)');\n                end();\n                setTimeout(function() {\n                    selectedArea.remove();\n                }, 20);\n            });\n            svg.current.append('g').call(brush);\n        }, 100);\n    }, [\n        props.layout\n    ]);\n    (0, $fed36f965ea78a82$var$_react.useEffect)(function() {\n        setTimeout(function() {\n            var rect = self.current.getBoundingClientRect();\n            var innerWidth = rect.width - margin.left - margin.right;\n            var innerHeight = rect.height - margin.top - margin.bottom;\n            var data = props.data;\n            if (props.filters.length !== 0) data = props.filterData;\n            var k = Math.pow(10, -4 + Math.round(Math.log10(data.length)));\n            var color = $fed36f965ea78a82$var$d3.scaleLinear().domain([\n                0,\n                k\n            ]).range([\n                'white',\n                '#4682b4'\n            ]);\n            var densityData = $fed36f965ea78a82$var$d3.contourDensity().x(function(d) {\n                return scales.current.x(d[props.fields.x]);\n            }).y(function(d) {\n                return scales.current.y(d[props.fields.y]);\n            }).size([\n                innerWidth,\n                innerHeight\n            ]).bandwidth(20)(data);\n            svg.current.select('#draw_area').remove('g');\n            svg.current.insert('g', 'g').attr('id', 'draw_area').selectAll('path').data(densityData).enter().append('path').attr('d', $fed36f965ea78a82$var$d3.geoPath()).attr('fill', function(d) {\n                return color(d.value);\n            });\n        }, 100);\n    }, [\n        props.layout,\n        props.filters,\n        props.filterData\n    ]);\n    return /*#__PURE__*/ $fed36f965ea78a82$var$_react[\"default\"].createElement(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $fed36f965ea78a82$var$_default = module.exports[\"default\"] = $fed36f965ea78a82$var$DensityChart;\n$fed36f965ea78a82$var$DensityChart.propTypes = {\n    data: $fed36f965ea78a82$var$_propTypes[\"default\"].arrayOf($fed36f965ea78a82$var$_propTypes[\"default\"].shape({})).isRequired,\n    fields: $fed36f965ea78a82$var$_propTypes[\"default\"].shape({\n        x: $fed36f965ea78a82$var$_propTypes[\"default\"].string.isRequired,\n        y: $fed36f965ea78a82$var$_propTypes[\"default\"].string.isRequired\n    }).isRequired,\n    id: $fed36f965ea78a82$var$_propTypes[\"default\"].string.isRequired,\n    filterData: $fed36f965ea78a82$var$_propTypes[\"default\"].arrayOf($fed36f965ea78a82$var$_propTypes[\"default\"].shape({})).isRequired,\n    filters: $fed36f965ea78a82$var$_propTypes[\"default\"].arrayOf($fed36f965ea78a82$var$_propTypes[\"default\"].shape({})).isRequired,\n    layout: $fed36f965ea78a82$var$_propTypes[\"default\"].shape({\n        width: $fed36f965ea78a82$var$_propTypes[\"default\"].number.isRequired,\n        currentCols: $fed36f965ea78a82$var$_propTypes[\"default\"].number.isRequired\n    }).isRequired,\n    filterAdded: $fed36f965ea78a82$var$_propTypes[\"default\"].func.isRequired,\n    title: $fed36f965ea78a82$var$_propTypes[\"default\"].string.isRequired\n};\n\n});\n\n\n//# sourceMappingURL=DensityChart.fb8a939a.js.map\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nfunction DensityChart(props) {\n  let startPosition = [0, 0];\n  let endPosition = [0, 0];\n  const self = useRef();\n  const svg = useRef();\n  const scales = useRef({\n    x: d3.scaleLinear(),\n    y: d3.scaleLinear(),\n  });\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 20,\n    left: 40,\n  };\n\n  const end = () => {\n    if (!d3.event.selection) return;\n    const [x0, y0] = [Math.min(startPosition[0], endPosition[0]),\n      Math.min(startPosition[1], endPosition[1])];\n    const [x1, y1] = [Math.max(startPosition[0], endPosition[0]),\n      Math.max(startPosition[1], endPosition[1])];\n    const filters = [\n      {\n        id: `${props.id}_x`,\n        title: props.title,\n        field: props.fields.x,\n        operation: 'range',\n        values: [numFixed(scales.current.x.invert(x0)), numFixed(scales.current.x.invert(x1))],\n      },\n      {\n        id: `${props.id}_y`,\n        title: props.title,\n        field: props.fields.y,\n        operation: 'range',\n        values: [numFixed(scales.current.y.invert(y1)), numFixed(scales.current.y.invert(y0))],\n      },\n    ];\n    props.filterAdded(filters);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      svg.current = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n      const domainExtentX = d3.extent(props.data, (d) => d[props.fields.x]);\n      const domainPaddingX = (domainExtentX[1] - domainExtentX[0]) * paddingPercent;\n      const domainExtentY = d3.extent(props.data, (d) => d[props.fields.y]);\n      const domainPaddingY = (domainExtentY[1] - domainExtentY[0]) * paddingPercent;\n      scales.current.x\n        .domain([domainExtentX[0] - domainPaddingX,\n          domainExtentX[1] + domainPaddingX])\n        .range([0, innerWidth]);\n\n      scales.current.y\n        .domain([domainExtentY[0] - domainPaddingY,\n          domainExtentY[1] + domainPaddingY])\n        .range([innerHeight, 0]);\n\n      svg.current\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.current.x));\n      svg.current.append('g').call(d3.axisLeft(scales.current.y));\n\n      const getCurrentMouseClickPosition = () => {\n        const rec = svg.current.select('.overlay').node();\n        const mouseX = d3.event.sourceEvent.clientX - rec.getBoundingClientRect().x;\n        const mouseY = d3.event.sourceEvent.clientY - rec.getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n\n      const brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          startPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selection').remove('rect');\n        }).on('brush', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(130, 130, 130, 0.5)');\n        })\n        .on('end', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectedArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(140, 140, 140, 0.5)');\n          end();\n          setTimeout(\n            () => {\n              selectedArea.remove();\n            },\n            20,\n          );\n        });\n\n      svg.current.append('g').call(brush);\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const k = 10 ** (-4 + Math.round(Math.log10(data.length)));\n      const color = d3.scaleLinear().domain([0, k]).range(['white', '#4682b4']);\n\n      const densityData = d3\n        .contourDensity()\n        .x((d) => scales.current.x(d[props.fields.x]))\n        .y((d) => scales.current.y(d[props.fields.y]))\n        .size([innerWidth, innerHeight])\n        .bandwidth(20)(data);\n\n      svg.current.select('#draw_area').remove('g');\n      svg.current\n        .insert('g', 'g')\n        .attr('id', 'draw_area')\n        .selectAll('path')\n        .data(densityData)\n        .enter()\n        .append('path')\n        .attr('d', d3.geoPath())\n        .attr('fill', (d) => color(d.value));\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default DensityChart;\n\nDensityChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, y: PropTypes.string.isRequired })\n    .isRequired,\n  id: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$fed36f965ea78a82$var$_typeof","o","Symbol","iterator","constructor","prototype","Object","defineProperty","value","e","$fed36f965ea78a82$var$_react","$fed36f965ea78a82$var$_interopRequireWildcard","$fed36f965ea78a82$var$d3","$fed36f965ea78a82$var$_propTypes","__esModule","$63tWu","$fed36f965ea78a82$var$_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","$fed36f965ea78a82$var$DensityChart","props","startPosition","endPosition","self","useRef","svg","scales","x","scaleLinear","y","end","event","selection","_ref","Math","min","x0","y0","_ref2","max","x1","y1","filters","id","concat","title","field","fields","operation","values","numFixed","current","invert","filterAdded","useEffect","setTimeout","select","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","append","attr","domainExtentX","extent","data","d","domainPaddingX","domainExtentY","domainPaddingY","domain","range","axisBottom","axisLeft","getCurrentMouseClickPosition","rec","node","sourceEvent","clientX","clientY","brush","on","startX","startY","abs","selectedArea","layout","length","filterData","k","pow","round","log10","color","densityData","contourDensity","size","bandwidth","insert","enter","geoPath","createElement","ref","role","style","propTypes","arrayOf","shape","isRequired","string","number","currentCols","func","_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","_getRequireWildcardCache","_typeof","DensityChart","margin","top","right","bottom","left","paddingPercent","mouseX","mouseY","selectArea","_default","PropTypes"],"version":3,"file":"DensityChart.fb8a939a.js.map"}