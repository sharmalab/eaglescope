{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/ScatterChart.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eoPnA\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $a7bb2973674b6268$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $63tWu = parcelRequire(\"63tWu\");\nclass $a7bb2973674b6268$export$2e2bcd8739ae039 extends (0, $acw62.PureComponent) {\n    constructor(props){\n        super(props);\n        this.self = /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createRef();\n        this.state = {\n            margin: {\n                top: 5,\n                right: 10,\n                bottom: 25,\n                left: 25\n            }\n        };\n        this.state.data = this.props.data.filter((d)=>d[this.props.fields.x] !== 'N/A' && d[this.props.fields.y] !== 'N/A' && d[this.props.fields.z] !== 'N/A');\n    }\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n    componentDidUpdate() {\n        setTimeout(()=>{\n            $9NlP8.select(this.self.current).selectAll('canvas').remove('canvas');\n            $9NlP8.select(this.self.current).selectAll('svg').remove('svg');\n            this.rect = this.self.current.getBoundingClientRect();\n            const innerWidth = this.rect.width - this.state.margin.left - this.state.margin.right;\n            const innerHeight = this.rect.height - this.state.margin.top - this.state.margin.bottom;\n            this.canvas = $9NlP8.select(this.self.current).append('canvas').attr('width', innerWidth).attr('height', innerHeight).style('transform', `translate(${this.state.margin.left}px,${this.state.margin.top}px)`);\n            // create svg\n            const svg = $9NlP8.select(this.self.current).append('svg').attr('width', this.rect.width).attr('height', this.rect.height).attr('transform', `translate(${0},${-innerHeight})`);\n            // create viewer\n            const viewer = svg.append('g').attr('transform', `translate(${this.state.margin.left},0)`);\n            //\n            this.xScale = this.createScaleLiner(this.props.fields.x, [\n                0,\n                innerWidth\n            ]);\n            this.yScale = this.createScaleLiner(this.props.fields.y, [\n                innerHeight,\n                0\n            ]);\n            this.radiusScale = this.createScaleLiner(this.props.fields.z, [\n                3,\n                10\n            ]);\n            const getCurrentMouseClickPosition = ()=>{\n                console.log(svg);\n                const mouseX = $9NlP8.event.sourceEvent.clientX - svg.node().getBoundingClientRect().x - this.state.margin.left;\n                const mouseY = $9NlP8.event.sourceEvent.clientY - svg.node().getBoundingClientRect().y;\n                return [\n                    mouseX,\n                    mouseY\n                ];\n            };\n            viewer.append('g').attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(this.xScale).tickSize(-innerHeight));\n            // add the y Axis\n            viewer.append('g').call($9NlP8.axisLeft(this.yScale).tickSize(-innerWidth));\n            this.brush = $9NlP8.brush().extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    innerWidth,\n                    innerHeight\n                ]\n            ]).on('start', ()=>{\n                this.startPosition = getCurrentMouseClickPosition();\n            }).on('brush', ()=>{\n                this.endPosition = getCurrentMouseClickPosition();\n                svg.selectAll('rect').remove('rect');\n                const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n                const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n                const selectedArea = svg.append('rect').attr('position', 'absolute').attr('x', startX + this.state.margin.left).attr('y', startY).attr('width', Math.abs(this.endPosition[0] - this.startPosition[0])).attr('height', Math.abs(this.endPosition[1] - this.startPosition[1])).attr('fill', 'rgba(211, 211, 211, 0.5)');\n            }).on('end', ()=>{\n                this.endPosition = getCurrentMouseClickPosition();\n                svg.selectAll('rect').remove('rect');\n                const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n                const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n                const selectedArea = svg.append('rect').attr('position', 'absolute').attr('x', startX + this.state.margin.left).attr('y', startY).attr('width', Math.abs(this.endPosition[0] - this.startPosition[0])).attr('height', Math.abs(this.endPosition[1] - this.startPosition[1])).attr('fill', 'rgba(211, 211, 211, 0.5)');\n                this.end();\n            });\n            viewer.append('g').call(this.brush);\n            this.draw();\n        }, 100);\n    }\n    drawPoint(point) {\n        const cx = this.xScale(point[this.props.fields.x]);\n        const cy = this.yScale(point[this.props.fields.y]);\n        const r = this.props.fields.z ? this.radiusScale(point[this.props.fields.z]) : 3;\n        this.context.beginPath();\n        this.context.arc(cx, cy, r, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.fill();\n        this.context.stroke();\n    }\n    draw() {\n        this.context = this.canvas.node().getContext('2d');\n        this.context.clearRect(0, 0, this.rect.width, this.rect.height);\n        this.context.fillStyle = '#87CEEB';\n        this.context.strokeWidth = 1;\n        this.context.strokeStyle = '#4682B4';\n        this.context.globalAlpha = 1;\n        if (this.props.filters.length === 0) this.state.data.forEach((point)=>{\n            this.drawPoint(point);\n        });\n        else this.state.data.forEach((point)=>{\n            if (this.props.filterData.includes(point)) {\n                this.context.fillStyle = '#87CEEB';\n                this.context.strokeWidth = 1;\n                this.context.strokeStyle = '#4682B4';\n                this.context.globalAlpha = 1;\n            } else {\n                this.context.fillStyle = '#c0c0c0c0';\n                this.context.strokeWidth = 1;\n                this.context.strokeStyle = '#000000';\n                this.context.globalAlpha = 0.2;\n            }\n            this.drawPoint(point);\n        });\n    }\n    createScaleLiner(f, range) {\n        const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n        const domainExtent = $9NlP8.extent(this.state.data, (d)=>d[f]);\n        const domainPadding = (domainExtent[1] - domainExtent[0]) * paddingPercent;\n        const scaleLiner = $9NlP8.scaleLinear().domain([\n            domainExtent[0] - domainPadding,\n            domainExtent[1] + domainPadding\n        ]).range(range).nice();\n        return scaleLiner;\n    }\n    end() {\n        if (!$9NlP8.event.selection) return;\n        const [x0, y0] = [\n            Math.min(this.startPosition[0], this.endPosition[0]),\n            Math.min(this.startPosition[1], this.endPosition[1])\n        ];\n        const [x1, y1] = [\n            Math.max(this.startPosition[0], this.endPosition[0]),\n            Math.max(this.startPosition[1], this.endPosition[1])\n        ];\n        const filters = [\n            {\n                id: `${this.props.id}_x`,\n                title: this.props.title,\n                field: this.props.fields.x,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(this.xScale.invert(x0)),\n                    (0, $63tWu.numFixed)(this.xScale.invert(x1))\n                ]\n            },\n            {\n                id: `${this.props.id}_y`,\n                title: this.props.title,\n                field: this.props.fields.y,\n                operation: 'range',\n                values: [\n                    (0, $63tWu.numFixed)(this.yScale.invert(y1)),\n                    (0, $63tWu.numFixed)(this.yScale.invert(y0))\n                ]\n            }\n        ];\n        this.props.filterAdded(filters);\n    }\n    render() {\n        return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createElement(\"div\", {\n            id: this.props.id,\n            ref: this.self,\n            role: \"figure\",\n            style: {\n                width: '100%',\n                height: '100%'\n            }\n        });\n    }\n}\n$a7bb2973674b6268$export$2e2bcd8739ae039.propTypes = {\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        x: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        z: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string\n    }).isRequired,\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired\n};\n\n});\n\n\n//# sourceMappingURL=ScatterChart.98cc4962.js.map\n","import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nexport default class ScatterChart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.self = React.createRef();\n    this.state = {\n      margin: {\n        top: 5,\n        right: 10,\n        bottom: 25,\n        left: 25,\n      },\n    };\n    this.state.data = this.props.data.filter(\n      (d) => d[this.props.fields.x] !== 'N/A'\n        && d[this.props.fields.y] !== 'N/A'\n        && d[this.props.fields.z] !== 'N/A',\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      d3.select(this.self.current).selectAll('canvas').remove('canvas');\n      d3.select(this.self.current).selectAll('svg').remove('svg');\n      this.rect = this.self.current.getBoundingClientRect();\n      const innerWidth = this.rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = this.rect.height - this.state.margin.top - this.state.margin.bottom;\n\n      this.canvas = d3\n        .select(this.self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${this.state.margin.left}px,${this.state.margin.top}px)`);\n\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', this.rect.width)\n        .attr('height', this.rect.height)\n        .attr('transform', `translate(${0},${-innerHeight})`);\n\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},0)`);\n\n      //\n      this.xScale = this.createScaleLiner(this.props.fields.x, [0, innerWidth]);\n      this.yScale = this.createScaleLiner(this.props.fields.y, [innerHeight, 0]);\n      this.radiusScale = this.createScaleLiner(this.props.fields.z, [3, 10]);\n      const getCurrentMouseClickPosition = () => {\n        console.log(svg);\n        const mouseX = d3.event.sourceEvent.clientX - svg.node().getBoundingClientRect().x\n        - this.state.margin.left;\n        const mouseY = d3.event.sourceEvent.clientY - svg.node().getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n      viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).tickSize(-innerHeight));\n\n      // add the y Axis\n      viewer.append('g').call(d3.axisLeft(this.yScale).tickSize(-innerWidth));\n\n      this.brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          this.startPosition = getCurrentMouseClickPosition();\n        }).on('brush', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n        })\n        .on('end', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n          this.end();\n        });\n\n      viewer.append('g').call(this.brush);\n\n      this.draw();\n    }, 100);\n  }\n\n  drawPoint(point) {\n    const cx = this.xScale(point[this.props.fields.x]);\n    const cy = this.yScale(point[this.props.fields.y]);\n    const r = this.props.fields.z ? this.radiusScale(point[this.props.fields.z]) : 3;\n\n    this.context.beginPath();\n    this.context.arc(cx, cy, r, 0, 2 * Math.PI);\n    this.context.closePath();\n    this.context.fill();\n    this.context.stroke();\n  }\n\n  draw() {\n    this.context = this.canvas.node().getContext('2d');\n    this.context.clearRect(0, 0, this.rect.width, this.rect.height);\n    this.context.fillStyle = '#87CEEB';\n    this.context.strokeWidth = 1;\n    this.context.strokeStyle = '#4682B4';\n    this.context.globalAlpha = 1;\n\n    if (this.props.filters.length === 0) {\n      this.state.data.forEach((point) => {\n        this.drawPoint(point);\n      });\n    } else {\n      this.state.data.forEach((point) => {\n        if (this.props.filterData.includes(point)) {\n          this.context.fillStyle = '#87CEEB';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#4682B4';\n          this.context.globalAlpha = 1;\n        } else {\n          this.context.fillStyle = '#c0c0c0c0';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#000000';\n          this.context.globalAlpha = 0.2;\n        }\n        this.drawPoint(point);\n      });\n    }\n  }\n\n  createScaleLiner(f, range) {\n    const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n    const domainExtent = d3.extent(this.state.data, (d) => d[f]);\n    const domainPadding = (domainExtent[1] - domainExtent[0]) * paddingPercent;\n    const scaleLiner = d3\n      .scaleLinear()\n      .domain([domainExtent[0] - domainPadding,\n        domainExtent[1] + domainPadding])\n      .range(range)\n      .nice();\n    return scaleLiner;\n  }\n\n  end() {\n    if (!d3.event.selection) return;\n\n    const [x0, y0] = [Math.min(this.startPosition[0], this.endPosition[0]),\n      Math.min(this.startPosition[1], this.endPosition[1])];\n    const [x1, y1] = [Math.max(this.startPosition[0], this.endPosition[0]),\n      Math.max(this.startPosition[1], this.endPosition[1])];\n\n    const filters = [\n      {\n        id: `${this.props.id}_x`,\n        title: this.props.title,\n        field: this.props.fields.x,\n        operation: 'range',\n        values: [numFixed(this.xScale.invert(x0)), numFixed(this.xScale.invert(x1))],\n      },\n      {\n        id: `${this.props.id}_y`,\n        title: this.props.title,\n        field: this.props.fields.y,\n        operation: 'range',\n        values: [numFixed(this.yScale.invert(y1)), numFixed(this.yScale.invert(y0))],\n      },\n    ];\n    this.props.filterAdded(filters);\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} ref={this.self} role=\"figure\" style={{ width: '100%', height: '100%' }} />\n    );\n  }\n}\n\nScatterChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$a7bb2973674b6268$export$2e2bcd8739ae039","set","s","enumerable","$acw62","$9NlP8","$c9Z8w","$63tWu","PureComponent","constructor","props","self","createRef","state","margin","top","right","bottom","left","data","filter","d","fields","x","y","z","componentDidMount","componentDidUpdate","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","canvas","append","attr","style","svg","viewer","xScale","createScaleLiner","yScale","radiusScale","getCurrentMouseClickPosition","console","log","event","sourceEvent","clientX","node","clientY","call","axisBottom","tickSize","axisLeft","brush","extent","on","startPosition","endPosition","startX","Math","min","startY","abs","end","draw","drawPoint","point","cx","cy","r","context","beginPath","arc","PI","closePath","fill","stroke","getContext","clearRect","fillStyle","strokeWidth","strokeStyle","globalAlpha","filters","length","forEach","filterData","includes","f","range","domainExtent","domainPadding","scaleLinear","domain","nice","selection","x0","y0","x1","y1","max","id","title","field","operation","values","numFixed","invert","filterAdded","render","createElement","ref","role","propTypes","arrayOf","shape","isRequired","string","func","React","d3","PropTypes","ScatterChart","mouseX","mouseY","selectedArea","paddingPercent","scaleLiner"],"version":3,"file":"ScatterChart.98cc4962.js.map"}