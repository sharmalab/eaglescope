{"version":3,"sources":["components/VisualTools/Chart/Heatmap.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","_tooltip","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Heatmap","props","self","useRef","scales","x","scaleBand","y","color","scaleSequential","margin","myGroups","map","data","d","fields","keys","myVars","useEffect","setTimeout","select","current","remove","selectAll","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","filters","length","filterData","svg","append","attr","concat","range","domain","padding","style","axisBottom","tickSize","axisLeft","interpolator","interpolateInferno","extent","z","tooltipHandlers","createTooltip","numFixed","visData","forEach","g","v","currentData","filter","push","mean","enter","bandwidth","on","mousemove","mouseleave","id","title","field","operation","values","filterAdded","layout","createElement","ref","_default","exports","propTypes","PropTypes","string","isRequired","arrayOf","shape","number","currentCols","func"],"mappings":"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","file":"Heatmap.0b8ee35d.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\nimport createTooltip from '../../partials/tooltip';\n\nfunction Heatmap(props) {\n  const self = useRef();\n  const scales = {\n    x: d3.scaleBand(),\n    y: d3.scaleBand(),\n    color: d3.scaleSequential(),\n  };\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 30,\n    left: 60,\n  };\n\n  const myGroups = d3.map(props.data, (d) => d[props.fields.x]).keys();\n  const myVars = d3.map(props.data, (d) => d[props.fields.y]).keys();\n\n  useEffect(() => {\n    setTimeout(() => {\n      // Remove old svg if any\n      d3.select(self.current).select('.tooltip').remove('div');\n      d3.select(self.current).selectAll('svg').remove('svg');\n\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Create and draw x-axis\n      scales.x.range([0, innerWidth]).domain(myGroups).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.x).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create and draw y-axis\n      scales.y.range([innerHeight, 0]).domain(myVars).padding(0.05);\n      svg\n        .append('g')\n        .style('font-size', 13)\n        .call(d3.axisLeft(scales.y).tickSize(0))\n        .select('.domain')\n        .remove();\n\n      // Create color scale\n      scales.color\n        .interpolator(d3.interpolateInferno)\n        .domain(d3.extent(props.data, (d) => d[props.fields.z]));\n\n      // create a tooltip\n      const addLabel = (d) => `The ${props.fields.z} of this \n      cell is: ${numFixed(d.z ? d.z : 0)}`;\n      const offset = {\n        x: 80,\n        y: 0,\n      };\n      const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n\n      // Group data by the values of x and y\n      // then aggregate to one value using mean\n      // @TODO add option to choose different function such as: count, max, ..\n      const visData = [];\n      myGroups.forEach((g) => myVars.forEach((v) => {\n        const currentData = data.filter(\n          (d) => d[props.fields.x] === g && d[props.fields.y] === v,\n        );\n        visData.push({\n          g,\n          v,\n          z: d3.mean(currentData, (d) => d[props.fields.z]),\n        });\n      }));\n\n      // Draw each cell\n      svg\n        .selectAll()\n        .data(visData, (d) => `${d.g}:${d.v}`)\n        .enter()\n        .append('rect')\n        .attr('x', (d) => scales.x(d.g))\n        .attr('y', (d) => scales.y(d.v))\n        .attr('rx', 4)\n        .attr('ry', 4)\n        .attr('width', scales.x.bandwidth())\n        .attr('height', scales.y.bandwidth())\n        .style('fill', (d) => scales.color(d.z))\n        .style('stroke-width', 4)\n        .style('stroke', 'none')\n        .style('opacity', 0.8)\n        .on('mousemove', tooltipHandlers.mousemove)\n        .on('mouseleave', tooltipHandlers.mouseleave)\n        .on('click', (d) => {\n          const filters = [\n            {\n              id: `${props.id}_x`,\n              title: props.title,\n              field: props.fields.x,\n              operation: 'in',\n              values: [d.g],\n            },\n            {\n              id: `${props.id}_y`,\n              title: props.title,\n              field: props.fields.y,\n              operation: 'in',\n              values: [d.v],\n            },\n          ];\n          props.filterAdded(filters);\n        });\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n\n  return <div id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default Heatmap;\n\nHeatmap.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string.isRequired,\n  }).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n"]}