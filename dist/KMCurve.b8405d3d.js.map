{"version":3,"sources":["components/VisualTools/Chart/KMCurve.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","_arrayLikeToArray","toString","slice","name","Array","from","test","isArray","length","_classCallCheck","_defineProperties","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","_inherits","create","value","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","isUndefined","d","undefined","toLowerCase","KMCurve","exports","_PureComponent","_super","props","_this","self","React","createRef","maxTime","NEGATIVE_INFINITY","state","margin","top","right","bottom","left","filter","data","transform","field","fields","componentDidMount","_this2","setTimeout","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","select","append","attr","viewer","concat","xScale","scaleLinear","domain","range","yScale","color","scaleOrdinal","map","quantize","interpolateSpectral","xaxisGroup","axisBottom","ticks","text","time","unit","yaxisGroup","axisLeft","forEach","drawKMCurve","nodeWidth","getBBox","legend","lg","selectAll","enter","style","offset","x","eventValue","censoredValue","group","event","filteredData","collapsed_stage","Math","max","groups","nest","entries","rs","g","risk","values","sortKeys","b","rollup","v","censor","p","points","currentTime","c","censored","push","drawLine","_this3","line","curve","curveStepAfter","y","datum","point","render","createElement","id","ref","PureComponent","propTypes","PropTypes","arrayOf","shape","isRequired","string","defaultProps"],"mappings":"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","file":"KMCurve.b8405d3d.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nfunction isUndefined(d) {\n  return d === undefined || d == null || (typeof d === 'string' && d.toLowerCase() === 'na');\n}\nexport default class KMCurve extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.maxTime = Number.NEGATIVE_INFINITY;\n    this.state = {\n      margin: {\n        top: 35,\n        right: 20,\n        bottom: 45,\n        left: 45,\n      },\n    };\n    if (this.props.filter) {\n      this.state.data = this.transform(\n        this.props.data.filter((d) => d[this.props.filter.field] === this.props.filter.value),\n        this.props.fields,\n      );\n    } else {\n      this.state.data = this.transform(this.props.data, this.props.fields);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const rect = this.self.current.getBoundingClientRect();\n      const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},${this.state.margin.top})`);\n      //\n      this.xScale = d3.scaleLinear().domain([0, this.maxTime]).range([0, innerWidth]);\n\n      this.yScale = d3.scaleLinear().domain([0, 1]).range([innerHeight, 0]);\n\n      this.color = d3\n        .scaleOrdinal()\n        .domain(this.state.data.map((d) => d.key))\n        .range(d3.quantize((t) => d3.interpolateSpectral(t), this.state.data.length));\n\n      const xaxisGroup = viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).ticks(4)); // .tickSize(-innerWidth));\n      xaxisGroup\n        .append('text')\n        .attr('y', 30)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .text(`Time ${this.props.fields.time.unit ? `(${this.props.fields.time.unit})` : ''}`);\n\n      // add the y Axis\n      const yaxisGroup = viewer.append('g').call(d3.axisLeft(this.yScale).ticks(4)); // .tickSize(-innerWidth)\n      yaxisGroup\n        .append('text')\n        .attr('y', -30)\n        .attr('x', -innerHeight / 3)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .attr('transform', 'rotate(-90)')\n        .text('Survival Probability');\n\n      this.state.data.forEach((d) => this.drawKMCurve(viewer, d));\n\n      const height = 0;\n      const nodeWidth = (d) => d.getBBox().width;\n      const legend = svg\n        .append('g')\n        .attr('class', 'legend')\n        .attr('transform', `translate(${this.state.margin.left + innerWidth / 2},0)`);\n\n      const lg = legend\n        .selectAll('g')\n        .data(this.state.data)\n        .enter()\n        .append('g')\n        .attr('transform', (d, i) => `translate(${i * 100},${height + 15})`);\n\n      lg.append('rect')\n        .style('fill', (d) => this.color(d.key))\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 10)\n        .attr('height', 10);\n\n      lg.append('text')\n        .style('font-family', 'Georgia')\n        .style('font-size', '13px')\n        .attr('x', 17.5)\n        .attr('y', 10)\n        .text((d) => d.key);\n\n      let offset = 0;\n      lg.attr('transform', function transform() {\n        const x = offset;\n        offset += nodeWidth(this) + 10;\n        return `translate(${x},${height + 10})`;\n      });\n    }, 500);\n  }\n\n  transform(data, field) {\n    const { eventValue } = field;\n    const { censoredValue } = field;\n    const group = field.group.field;\n    const time = field.time.field;\n    const event = field.event.field;\n\n    const filteredData = data.filter(\n      (d) => d.collapsed_stage !== 'stage_x/NR'\n        && !isUndefined(d[time])\n        && !isUndefined(d[event])\n        && !isUndefined(d[group]),\n    );\n    this.maxTime = Math.max(...filteredData.map((d) => d[time]));\n    const groups = d3\n      .nest()\n      .key((d) => d[group])\n      .entries(filteredData);\n    const rs = [];\n    groups.forEach((g) => {\n      const { key } = g;\n      let risk = g.values.length;\n      const values = d3\n        .nest()\n        .key((d) => +d[time])\n        .sortKeys((a, b) => +a - +b)\n        .rollup((v) => ({\n          event: v.filter((d) => d[event] === eventValue).length,\n          censor: v.filter((d) => d[event] === censoredValue).length,\n        }))\n        .entries(g.values);\n      let p = 1;\n      const points = [];\n      values.forEach((d) => {\n        const currentTime = +d.key;\n        const e = d.value.event;\n        const c = d.value.censor;\n        if (currentTime < 0) return;\n        if (e > 0) {\n          p *= 1 - e / risk;\n          const censored = false;\n          points.push({ p, currentTime, censored });\n        }\n        if (c > 0) {\n          const censored = true;\n          points.push({ p, currentTime, censored });\n        }\n        risk -= e + c;\n      });\n      rs.push({ key, points });\n    });\n\n    return rs;\n  }\n\n  drawLine(viewer, points, color) {\n    const line = d3\n      .line()\n      .curve(d3.curveStepAfter)\n      .x((d) => this.xScale(d.time))\n      .y((d) => this.yScale(d.p));\n    viewer\n      .append('path')\n      .datum(points)\n      .attr('class', 'line')\n      .style('stroke', color)\n      .attr('d', line);\n\n    points.forEach((point) => {\n      if (point.censored) {\n        const p = [\n          {\n            p: point.p - 0.015,\n            time: point.time,\n          },\n          {\n            p: point.p + 0.015,\n            time: point.time,\n          },\n        ];\n        viewer.append('path').datum(p).attr('class', 'mark').style('stroke', color)\n          .attr('d', line);\n      }\n    });\n  }\n\n  drawKMCurve(viewer, d) {\n    // draw lines\n    this.drawLine(viewer, d.points, this.color(d.key));\n    // draw marks\n  }\n\n  render() {\n    return <div id={this.props.id} ref={this.self} style={{ width: '100%', height: '100%' }} />;\n  }\n}\n\nKMCurve.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, time: PropTypes.shape() }).isRequired,\n  filter: PropTypes.shape({ field: PropTypes.string, value: PropTypes.string }),\n  id: PropTypes.string.isRequired,\n};\n\nKMCurve.defaultProps = {\n  filter: {},\n};\n"]}