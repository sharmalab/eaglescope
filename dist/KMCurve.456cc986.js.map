{"mappings":"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","sources":["<anon>","source/components/VisualTools/Chart/KMCurve.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"3qdiD\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $27de1dd5e4f9ba3a$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\nfunction $27de1dd5e4f9ba3a$var$isUndefined(d) {\n    return d === undefined || d == null || typeof d === 'string' && d.toLowerCase() === 'na';\n}\nclass $27de1dd5e4f9ba3a$export$2e2bcd8739ae039 extends (0, $acw62.PureComponent) {\n    constructor(props){\n        super(props);\n        this.self = /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createRef();\n        this.maxTime = Number.NEGATIVE_INFINITY;\n        this.state = {\n            margin: {\n                top: 35,\n                right: 20,\n                bottom: 45,\n                left: 45\n            }\n        };\n        if (this.props.filter) this.state.data = this.transform(this.props.data.filter((d)=>d[this.props.filter.field] === this.props.filter.value), this.props.fields);\n        else this.state.data = this.transform(this.props.data, this.props.fields);\n    }\n    componentDidMount() {\n        setTimeout(()=>{\n            const rect = this.self.current.getBoundingClientRect();\n            const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n            const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n            // create svg\n            const svg = $9NlP8.select(this.self.current).append('svg').attr('width', rect.width).attr('height', rect.height);\n            // create viewer\n            const viewer = svg.append('g').attr('transform', `translate(${this.state.margin.left},${this.state.margin.top})`);\n            //\n            this.xScale = $9NlP8.scaleLinear().domain([\n                0,\n                this.maxTime\n            ]).range([\n                0,\n                innerWidth\n            ]);\n            this.yScale = $9NlP8.scaleLinear().domain([\n                0,\n                1\n            ]).range([\n                innerHeight,\n                0\n            ]);\n            this.color = $9NlP8.scaleOrdinal().domain(this.state.data.map((d)=>d.key)).range($9NlP8.quantize((t)=>$9NlP8.interpolateSpectral(t), this.state.data.length));\n            const xaxisGroup = viewer.append('g').attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(this.xScale).ticks(4)); // .tickSize(-innerWidth));\n            xaxisGroup.append('text').attr('y', 30).attr('x', innerWidth / 2).attr('fill', 'black').attr('font-size', 13).text(`Time ${this.props.fields.time.unit ? `(${this.props.fields.time.unit})` : ''}`);\n            // add the y Axis\n            const yaxisGroup = viewer.append('g').call($9NlP8.axisLeft(this.yScale).ticks(4)); // .tickSize(-innerWidth)\n            yaxisGroup.append('text').attr('y', -30).attr('x', -innerHeight / 3).attr('fill', 'black').attr('font-size', 13).attr('transform', 'rotate(-90)').text('Survival Probability');\n            this.state.data.forEach((d)=>this.drawKMCurve(viewer, d));\n            const height = 0;\n            const nodeWidth = (d)=>d.getBBox().width;\n            const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${this.state.margin.left + innerWidth / 2},0)`);\n            const lg = legend.selectAll('g').data(this.state.data).enter().append('g').attr('transform', (d, i)=>`translate(${i * 100},${height + 15})`);\n            lg.append('rect').style('fill', (d)=>this.color(d.key)).attr('x', 0).attr('y', 0).attr('width', 10).attr('height', 10);\n            lg.append('text').style('font-family', 'Georgia').style('font-size', '13px').attr('x', 17.5).attr('y', 10).text((d)=>d.key);\n            let offset = 0;\n            lg.attr('transform', function transform() {\n                const x = offset;\n                offset += nodeWidth(this) + 10;\n                return `translate(${x},${height + 10})`;\n            });\n        }, 500);\n    }\n    transform(data, field) {\n        const { eventValue: eventValue } = field;\n        const { censoredValue: censoredValue } = field;\n        const group = field.group.field;\n        const time = field.time.field;\n        const event = field.event.field;\n        const filteredData = data.filter((d)=>d.collapsed_stage !== 'stage_x/NR' && !$27de1dd5e4f9ba3a$var$isUndefined(d[time]) && !$27de1dd5e4f9ba3a$var$isUndefined(d[event]) && !$27de1dd5e4f9ba3a$var$isUndefined(d[group]));\n        this.maxTime = Math.max(...filteredData.map((d)=>d[time]));\n        const groups = $9NlP8.nest().key((d)=>d[group]).entries(filteredData);\n        const rs = [];\n        groups.forEach((g)=>{\n            const { key: key } = g;\n            let risk = g.values.length;\n            const values = $9NlP8.nest().key((d)=>+d[time]).sortKeys((a, b)=>+a - +b).rollup((v)=>({\n                    event: v.filter((d)=>d[event] === eventValue).length,\n                    censor: v.filter((d)=>d[event] === censoredValue).length\n                })).entries(g.values);\n            let p = 1;\n            const points = [];\n            values.forEach((d)=>{\n                const currentTime = +d.key;\n                const e = d.value.event;\n                const c = d.value.censor;\n                if (currentTime < 0) return;\n                if (e > 0) {\n                    p *= 1 - e / risk;\n                    const censored = false;\n                    points.push({\n                        p: p,\n                        currentTime: currentTime,\n                        censored: censored\n                    });\n                }\n                if (c > 0) {\n                    const censored = true;\n                    points.push({\n                        p: p,\n                        currentTime: currentTime,\n                        censored: censored\n                    });\n                }\n                risk -= e + c;\n            });\n            rs.push({\n                key: key,\n                points: points\n            });\n        });\n        return rs;\n    }\n    drawLine(viewer, points, color) {\n        const line = $9NlP8.line().curve($9NlP8.curveStepAfter).x((d)=>this.xScale(d.time)).y((d)=>this.yScale(d.p));\n        viewer.append('path').datum(points).attr('class', 'line').style('stroke', color).attr('d', line);\n        points.forEach((point)=>{\n            if (point.censored) {\n                const p = [\n                    {\n                        p: point.p - 0.015,\n                        time: point.time\n                    },\n                    {\n                        p: point.p + 0.015,\n                        time: point.time\n                    }\n                ];\n                viewer.append('path').datum(p).attr('class', 'mark').style('stroke', color).attr('d', line);\n            }\n        });\n    }\n    drawKMCurve(viewer, d) {\n        // draw lines\n        this.drawLine(viewer, d.points, this.color(d.key));\n    // draw marks\n    }\n    render() {\n        return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createElement(\"div\", {\n            id: this.props.id,\n            ref: this.self,\n            role: \"figure\",\n            style: {\n                width: '100%',\n                height: '100%'\n            }\n        });\n    }\n}\n$27de1dd5e4f9ba3a$export$2e2bcd8739ae039.propTypes = {\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        x: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        time: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape()\n    }).isRequired,\n    filter: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        field: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string,\n        value: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string\n    }),\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired\n};\n$27de1dd5e4f9ba3a$export$2e2bcd8739ae039.defaultProps = {\n    filter: {}\n};\n\n});\n\n\n//# sourceMappingURL=KMCurve.456cc986.js.map\n","import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nfunction isUndefined(d) {\n  return d === undefined || d == null || (typeof d === 'string' && d.toLowerCase() === 'na');\n}\nexport default class KMCurve extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.maxTime = Number.NEGATIVE_INFINITY;\n    this.state = {\n      margin: {\n        top: 35,\n        right: 20,\n        bottom: 45,\n        left: 45,\n      },\n    };\n    if (this.props.filter) {\n      this.state.data = this.transform(\n        this.props.data.filter((d) => d[this.props.filter.field] === this.props.filter.value),\n        this.props.fields,\n      );\n    } else {\n      this.state.data = this.transform(this.props.data, this.props.fields);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const rect = this.self.current.getBoundingClientRect();\n      const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},${this.state.margin.top})`);\n      //\n      this.xScale = d3.scaleLinear().domain([0, this.maxTime]).range([0, innerWidth]);\n\n      this.yScale = d3.scaleLinear().domain([0, 1]).range([innerHeight, 0]);\n\n      this.color = d3\n        .scaleOrdinal()\n        .domain(this.state.data.map((d) => d.key))\n        .range(d3.quantize((t) => d3.interpolateSpectral(t), this.state.data.length));\n\n      const xaxisGroup = viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).ticks(4)); // .tickSize(-innerWidth));\n      xaxisGroup\n        .append('text')\n        .attr('y', 30)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .text(`Time ${this.props.fields.time.unit ? `(${this.props.fields.time.unit})` : ''}`);\n\n      // add the y Axis\n      const yaxisGroup = viewer.append('g').call(d3.axisLeft(this.yScale).ticks(4)); // .tickSize(-innerWidth)\n      yaxisGroup\n        .append('text')\n        .attr('y', -30)\n        .attr('x', -innerHeight / 3)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .attr('transform', 'rotate(-90)')\n        .text('Survival Probability');\n\n      this.state.data.forEach((d) => this.drawKMCurve(viewer, d));\n\n      const height = 0;\n      const nodeWidth = (d) => d.getBBox().width;\n      const legend = svg\n        .append('g')\n        .attr('class', 'legend')\n        .attr('transform', `translate(${this.state.margin.left + innerWidth / 2},0)`);\n\n      const lg = legend\n        .selectAll('g')\n        .data(this.state.data)\n        .enter()\n        .append('g')\n        .attr('transform', (d, i) => `translate(${i * 100},${height + 15})`);\n\n      lg.append('rect')\n        .style('fill', (d) => this.color(d.key))\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 10)\n        .attr('height', 10);\n\n      lg.append('text')\n        .style('font-family', 'Georgia')\n        .style('font-size', '13px')\n        .attr('x', 17.5)\n        .attr('y', 10)\n        .text((d) => d.key);\n\n      let offset = 0;\n      lg.attr('transform', function transform() {\n        const x = offset;\n        offset += nodeWidth(this) + 10;\n        return `translate(${x},${height + 10})`;\n      });\n    }, 500);\n  }\n\n  transform(data, field) {\n    const { eventValue } = field;\n    const { censoredValue } = field;\n    const group = field.group.field;\n    const time = field.time.field;\n    const event = field.event.field;\n\n    const filteredData = data.filter(\n      (d) => d.collapsed_stage !== 'stage_x/NR'\n        && !isUndefined(d[time])\n        && !isUndefined(d[event])\n        && !isUndefined(d[group]),\n    );\n    this.maxTime = Math.max(...filteredData.map((d) => d[time]));\n    const groups = d3\n      .nest()\n      .key((d) => d[group])\n      .entries(filteredData);\n    const rs = [];\n    groups.forEach((g) => {\n      const { key } = g;\n      let risk = g.values.length;\n      const values = d3\n        .nest()\n        .key((d) => +d[time])\n        .sortKeys((a, b) => +a - +b)\n        .rollup((v) => ({\n          event: v.filter((d) => d[event] === eventValue).length,\n          censor: v.filter((d) => d[event] === censoredValue).length,\n        }))\n        .entries(g.values);\n      let p = 1;\n      const points = [];\n      values.forEach((d) => {\n        const currentTime = +d.key;\n        const e = d.value.event;\n        const c = d.value.censor;\n        if (currentTime < 0) return;\n        if (e > 0) {\n          p *= 1 - e / risk;\n          const censored = false;\n          points.push({ p, currentTime, censored });\n        }\n        if (c > 0) {\n          const censored = true;\n          points.push({ p, currentTime, censored });\n        }\n        risk -= e + c;\n      });\n      rs.push({ key, points });\n    });\n\n    return rs;\n  }\n\n  drawLine(viewer, points, color) {\n    const line = d3\n      .line()\n      .curve(d3.curveStepAfter)\n      .x((d) => this.xScale(d.time))\n      .y((d) => this.yScale(d.p));\n    viewer\n      .append('path')\n      .datum(points)\n      .attr('class', 'line')\n      .style('stroke', color)\n      .attr('d', line);\n\n    points.forEach((point) => {\n      if (point.censored) {\n        const p = [\n          {\n            p: point.p - 0.015,\n            time: point.time,\n          },\n          {\n            p: point.p + 0.015,\n            time: point.time,\n          },\n        ];\n        viewer.append('path').datum(p).attr('class', 'mark').style('stroke', color)\n          .attr('d', line);\n      }\n    });\n  }\n\n  drawKMCurve(viewer, d) {\n    // draw lines\n    this.drawLine(viewer, d.points, this.color(d.key));\n    // draw marks\n  }\n\n  render() {\n    return <div id={this.props.id} ref={this.self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n  }\n}\n\nKMCurve.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, time: PropTypes.shape() }).isRequired,\n  filter: PropTypes.shape({ field: PropTypes.string, value: PropTypes.string }),\n  id: PropTypes.string.isRequired,\n};\n\nKMCurve.defaultProps = {\n  filter: {},\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$27de1dd5e4f9ba3a$export$2e2bcd8739ae039","set","s","enumerable","$acw62","$9NlP8","$c9Z8w","$27de1dd5e4f9ba3a$var$isUndefined","d","undefined","toLowerCase","PureComponent","constructor","props","self","createRef","maxTime","Number","NEGATIVE_INFINITY","state","margin","top","right","bottom","left","filter","data","transform","field","fields","componentDidMount","setTimeout","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","select","append","attr","viewer","xScale","scaleLinear","domain","range","yScale","color","scaleOrdinal","map","key","quantize","t","interpolateSpectral","length","xaxisGroup","call","axisBottom","ticks","text","time","unit","yaxisGroup","axisLeft","forEach","drawKMCurve","nodeWidth","getBBox","lg","legend","selectAll","enter","i","style","offset","x","eventValue","censoredValue","group","event","filteredData","collapsed_stage","Math","max","groups","nest","entries","rs","g","risk","values","sortKeys","b","rollup","v","censor","p","points","currentTime","e","c","push","censored","drawLine","line","curve","curveStepAfter","y","datum","point","render","createElement","id","ref","role","propTypes","arrayOf","shape","isRequired","string","defaultProps","React","d3","PropTypes","isUndefined","KMCurve"],"version":3,"file":"KMCurve.456cc986.js.map"}