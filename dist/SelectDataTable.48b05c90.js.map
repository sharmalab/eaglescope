{"version":3,"sources":["components/VisualTools/VisDataTable/SelectDataTable.js"],"names":["_react","_interopRequireWildcard","require","_reactVirtualized","_reactDraggable","_interopRequireDefault","_reactFontawesome","_freeSolidSvgIcons","_arrayMove","_propTypes","_VisDataTableControl","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","length","_n","F","s","done","value","f","next","return","toString","slice","name","test","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","cellRenderer","d","urlElt","link","url","field","urlbase","createElement","target","href","rowData","cellData","join","Fragment","dataKey","className","title","rowClassName","_ref","index","SelectDataTable","exports","_PureComponent","_super","props","_this","console","log","fWidth","fields","map","width","isShow","state","sortBy","sortDirection","selected","autoSizer","React","createRef","headerRenderer","resizeRow","onResize","onSortEnd","onCheckChangedHandler","onAllCheckHandler","sortHandler","getSortData","_ref2","setState","_ref3","oldIndex","newIndex","_ref4","arrayMove","checked","_ref5","_ref6","downloadSelected","downloadLimit","configProps","data","alert","_iterator","_step","record","fetch","mode","then","x","json","slide_url","window","location","protocol","replace","problematicExtensions","hasProblematicExtension","some","ext","toLowerCase","endsWith","filename","substring","lastIndexOf","document","download","body","appendChild","click","removeChild","iframe","setAttribute","src","catch","error","err","_this$props","filterData","filters","_this$state","currentData","sort","b","first","SortDirection","ASC","second","_ref7","deltaX","prevFields","idx","findIndex","percentDelta","_ref8","_this2","label","FontAwesomeIcon","icon","DESC","faSortDown","faSortUp","faSort","axis","defaultClassName","defaultClassNameDragging","onDrag","event","_ref9","onStart","_ref10","onStop","_ref11","setTimeout","position","zIndex","onMouseDown","stopPropagation","selectionHandler","isChecked","item","downloadField","existingIndex","indexOf","prevState","concat","_ref12","isResize","render","_this3","_this$state2","finalData","style","height","list","onCheckChanged","onAllCheck","AutoSizer","ref","_ref13","Table","headerHeight","rowHeight","rowCount","rowGetter","_ref14","Column","onClick","faFileArrowDown","color","_ref15","type","includes","onChange","cellDataGetter","_ref16","PureComponent","propTypes","PropTypes","arrayOf","shape","isRequired"],"mappings":"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","file":"SelectDataTable.48b05c90.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  AutoSizer, Column, Table, SortDirection,\n} from 'react-virtualized';\nimport Draggable from 'react-draggable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faSortUp, faSort, faFileArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport arrayMove from 'array-move';\nimport PropTypes from 'prop-types';\nimport VisDataTableControl from './VisDataTableControl/VisDataTableControl';\nimport './VisDataTable.css';\n\nconst cellRenderer = (d, f) => {\n  let urlElt;\n  if (f.link && (f.link.url || f.link.field)) {\n    const urlbase = f.link.url || '';\n    urlElt = (\n      <a target=\"_blank\" href={urlbase + d.rowData[f.link.field]}>\n        {d.cellData}\n      </a>\n    );\n  } else if (f.link && f.link.url) {\n    urlElt = (\n      <a target=\"_blank\" href={f.link.url}>\n        {d.cellData}\n      </a>\n    );\n  } else {\n    // urlElt = d.cellData;\n    urlElt = Array.isArray(d.cellData) ? d.cellData.join(', ') : d.cellData;\n  }\n  return (\n    <React.Fragment key={f.dataKey}>\n      <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={d.cellData}>\n        {urlElt}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst rowClassName = ({ index }) => {\n  if (index < 0) {\n    return 'headerRow';\n  }\n  return index % 2 === 0 ? 'evenRow' : 'oddRow';\n};\n\nexport default class SelectDataTable extends PureComponent {\n  constructor(props) {\n    console.log(\"constructed, showing props\")\n    console.log(props)\n    super(props);\n    const fWidth = 1 / this.props.fields.length;\n    let fields = this.props.fields.map((f) => ({ ...f, width: fWidth, isShow: true }));\n    //fields = fields.unshift({width: 50, isShow: true})\n    this.state = {\n      fields,\n      width: null,\n      sortBy: null,\n      sortDirection: null,\n      selected: []\n    };\n\n    this.autoSizer = React.createRef();\n    this.headerRenderer = this.headerRenderer.bind(this);\n    this.resizeRow = this.resizeRow.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onSortEnd = this.onSortEnd.bind(this);\n    this.onCheckChangedHandler = this.onCheckChangedHandler.bind(this);\n    this.onAllCheckHandler = this.onAllCheckHandler.bind(this);\n    this.sortHandler = this.sortHandler.bind(this);\n    this.getSortData = this.getSortData.bind(this);\n  }\n\n  onResize({ width }) {\n    this.setState({ width });\n  }\n\n  onSortEnd({ oldIndex, newIndex }) {\n    this.setState(({ fields }) => ({\n      fields: arrayMove(fields, oldIndex, newIndex),\n    }));\n  }\n\n  onCheckChangedHandler(e) {\n    const { value } = e.target;\n    const { checked } = e.target;\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = f.dataKey === value ? checked : f.isShow;\n        return { ...f };\n      }),\n    }));\n  }\n\n  onAllCheckHandler() {\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = true;\n        return { ...f };\n      }),\n    }));\n  }\n\n  downloadSelected() {\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    let data = this.state.selected\n    if (data.length > downloadLimit){\n      data = data.slice(0, downloadLimit);\n      alert(\"Limiting download to first \" + downloadLimit)\n    }\n    console.log(data)\n    console.log(\"about to try?\")\n    console.log(this.props.configProps)\n    // trigger downloads from pathdb\n    for (let record of data){\n        console.log(\"inside loop\")\n        console.log(\"trying to get metadata for slide with pathdb id\", record)\n        fetch(\"/node/\" + record + \"?_format=json\", {mode: \"cors\"}).then(x=>x.json()).then(x=>{ \n          console.log(\"looking at wsi url: \", x['field_wsiimage'][0]['url'])\n          let slide_url = x['field_wsiimage'][0]['url']\n          if (window.location.protocol === \"https:\") {\n            slide_url = slide_url.replace(/^http:\\/\\//i, 'https://');\n          }\n          const problematicExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp', '.svg', '.pdf'];\n          function hasProblematicExtension(url) {\n            return problematicExtensions.some(ext => url.toLowerCase().endsWith(ext));\n          }\n          if (hasProblematicExtension(slide_url)){\n            console.log(\"using anchor method\")\n            const filename = slide_url.substring(slide_url.lastIndexOf('/') + 1);\n            const a = document.createElement('a');\n            a.href = slide_url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n          } else {\n            console.log(\"using iframe method\")\n            const iframe = document.createElement(\"iframe\");\n            iframe.setAttribute(\"sandbox\", \"allow-downloads allow-scripts\");\n            iframe.src = slide_url;\n            iframe.setAttribute(\"style\", \"display: none\");\n            document.body.appendChild(iframe);\n          }\n        }).catch(console.error)\n    }\n  }\n\n  getSortData() {\n    const { data, filterData, filters } = this.props;\n    const { sortBy, sortDirection } = this.state;\n    const currentData = filters.length > 0 ? filterData : data;\n    // filter TODO\n    return sortBy && sortDirection\n      ? currentData.sort((a, b) => {\n        const first = sortDirection === SortDirection.ASC ? a : b;\n        const second = sortDirection === SortDirection.ASC ? b : a;\n        return first[sortBy] > second[sortBy] ? 1 : -1;\n      })\n      : currentData;\n  }\n\n  resizeRow({ dataKey, deltaX }) {\n    const prevFields = this.state.fields;\n    const idx = prevFields.findIndex((f) => f.dataKey === dataKey);\n\n    const percentDelta = deltaX / this.state.width;\n    prevFields[idx].width += percentDelta;\n\n    if (idx < prevFields.length - 1) {\n      prevFields[idx + 1].width = prevFields[idx + 1].width - percentDelta;\n    }\n    this.setState({ fields: [...prevFields] });\n  }\n\n  headerRenderer({\n    dataKey, label, sortBy, sortDirection,\n  }) {\n    return (\n      <React.Fragment key={dataKey}>\n        <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={label}>\n          {label}\n        </div>\n        {}\n        <div>\n          {sortBy === dataKey ? (\n            <FontAwesomeIcon icon={sortDirection === SortDirection.DESC ? faSortDown : faSortUp} />\n          ) : (\n            <FontAwesomeIcon icon={faSort} />\n          )}\n        </div>\n        <Draggable\n          axis=\"x\"\n          defaultClassName=\"DragHandle\"\n          defaultClassNameDragging=\"DragHandleActive\"\n          onDrag={(event, { deltaX }) => {\n            this.resizeRow({ dataKey, deltaX });\n          }}\n          onStart={(event, { deltaX }) => {\n            this.setState({\"isResize\": true});\n          }}\n          onStop={(event, { deltaX }) => {\n            setTimeout(() => {\n              this.setState({\"isResize\": false})\n            }, 300);  // 300 milliseconds delay\n          }}\n          position={{ x: 0 }}\n          zIndex={999}\n        >\n          <span className=\"DragHandleIcon\" onMouseDown={(event) => event.stopPropagation()}>⋮</span>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n\n  selectionHandler(isChecked, rowData){\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    console.log(\"chexmix\", isChecked, rowData)\n    const { selected } = this.state;\n    console.log(\"state selected before change\", selected)\n    let item = rowData[this.props.configProps.downloadField];\n    const existingIndex = selected.indexOf(item);\n    // if check is true, add to state\n    if (isChecked && existingIndex === -1) {\n      this.setState(prevState => ({\n        selected: [...prevState.selected, item]\n      }));\n    }\n      // if check is false, remove from state\n    if (!isChecked && existingIndex !== -1) {\n      this.setState(prevState => ({\n        selected: prevState.selected.filter(x => x !== item)\n      }));\n    }\n    if (this.state.selected.length > downloadLimit - 2) {\n      alert(\"Warning: We limit to at most \" + downloadLimit + \" concurrent downloads.\")\n    }\n  }\n\n  sortHandler({ sortBy, sortDirection }) {\n\n    if (!this.state.isResize){\n      this.setState({ sortBy, sortDirection });\n    }\n  }\n\n  render() {\n    const { fields, sortBy, sortDirection, selected } = this.state;\n    const finalData = this.getSortData();\n\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <VisDataTableControl\n          list={fields}\n          onSortEnd={this.onSortEnd}\n          onCheckChanged={this.onCheckChangedHandler}\n          onAllCheck={this.onAllCheckHandler}\n        />\n        <AutoSizer ref={this.autoSizer} onResize={this.onResize}>\n          {({ width, height }) => (\n            <Table\n              width={width}\n              height={height}\n              headerHeight={25}\n              rowHeight={20}\n              rowClassName={rowClassName}\n              rowCount={finalData.length}\n              rowGetter={({ index }) => finalData[index]}\n              sort={this.sortHandler}\n              sortBy={sortBy}\n              sortDirection={sortDirection}\n            >\n              <Column\n                key=\"checkbox\"\n                dataKey=\"checkbox\"\n                width={50} // Adjust width as needed\n                label=\"↓\"\n                headerRenderer={() => <div title=\"Download Selected Files\" onClick={(e) => { this.downloadSelected() }}> <FontAwesomeIcon icon={faFileArrowDown} style={{ height: '1.8em', color: '#1b7d00' }} /></div>}\n                cellRenderer={({ rowData }) => (\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(rowData[this.props.configProps.downloadField])}\n                    onChange={(e) => this.selectionHandler(e.target.checked, rowData)}\n                  />\n                )}\n              />\n              {fields\n                .map((f) => (\n                  <Column\n                    key={f.dataKey}\n                    cellDataGetter={({ rowData }) => rowData[f.dataKey]}\n                    dataKey={f.dataKey}\n                    label={f.label}\n                    width={width * f.width}\n                    headerRenderer={this.headerRenderer}\n                    cellRenderer={(d) => cellRenderer(d, f)}\n                  />\n                ))}\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nSelectDataTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n"]}