{"version":3,"sources":["components/VisualTools/VisDataTable/SelectDataTable.js"],"names":["_react","_interopRequireWildcard","require","_reactVirtualized","_reactDraggable","_interopRequireDefault","_reactFontawesome","_freeSolidSvgIcons","_arrayMove","_propTypes","_VisDataTableControl","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","allowArrayLike","it","length","F","s","done","value","_e","f","normalCompletion","didErr","err","step","next","_e2","return","minLen","toString","slice","name","test","len","arr2","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","cellRenderer","d","bg","urlElt","link","url","field","urlbase","createElement","href","rowData","cellData","join","Fragment","dataKey","className","title","style","backgroundColor","rowClassName","_ref","index","SelectDataTable","exports","_PureComponent","_super","_this","console","log","fWidth","fields","map","width","isShow","state","sortBy","sortDirection","selected","marked","containerRef","React","createRef","autoSizer","headerRenderer","resizeRow","onResize","onSortEnd","onCheckChangedHandler","onAllCheckHandler","sortHandler","getSortData","_ref2","setState","_ref3","oldIndex","newIndex","_ref4","arrayMove","checked","_ref5","_ref6","getFileExt","slide_url","lastPart","substring","lastIndexOf","lastDotIndex","downloadSelected","_this2","downloadLimit","configProps","data","alert","_iterator","_step","_loop","x","prevState","indexOf","concat","_iterator2","_step2","_loop2","record","fetch","mode","then","json","collectionId","y","collectionDoc","collectionName","window","location","protocol","replace","subId","error","imageId","filename","document","download","body","appendChild","click","removeChild","catch","collator","Intl","Collator","numeric","sensitivity","_this$props","filterData","filters","_this$state","currentData","sort","b","first","SortDirection","ASC","second","compare","_ref7","deltaX","prevFields","idx","findIndex","percentDelta","_ref8","_this3","label","FontAwesomeIcon","icon","DESC","faSortDown","faSortUp","faSort","axis","defaultClassName","defaultClassNameDragging","onDrag","event","_ref9","onStart","_ref10","onStop","_ref11","setTimeout","position","zIndex","onMouseDown","stopPropagation","selectionHandler","isChecked","item","downloadField","existingIndex","_ref12","isResize","render","_this4","_this$state2","finalData","ref","height","list","onCheckChanged","onAllCheck","AutoSizer","_ref13","Table","headerHeight","rowHeight","rowCount","rowGetter","_ref14","Column","onClick","faFileArrowDown","color","_ref15","type","includes","onChange","cellDataGetter","_ref16","PureComponent","propTypes","PropTypes","arrayOf","shape","isRequired"],"mappings":"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","file":"SelectDataTable.48b05c90.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  AutoSizer, Column, Table, SortDirection,\n} from 'react-virtualized';\nimport Draggable from 'react-draggable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faSortUp, faSort, faFileArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport arrayMove from 'array-move';\nimport PropTypes from 'prop-types';\nimport VisDataTableControl from './VisDataTableControl/VisDataTableControl';\nimport './VisDataTable.css';\n\nconst cellRenderer = (d, f, bg) => {\n  let urlElt;\n  bg = bg || '';\n  if (f.link && (f.link.url || f.link.field)) {\n    const urlbase = f.link.url || '';\n    urlElt = (\n      <a target=\"_blank\" href={urlbase + d.rowData[f.link.field]}>\n        {d.cellData}\n      </a>\n    );\n  } else if (f.link && f.link.url) {\n    urlElt = (\n      <a target=\"_blank\" href={f.link.url}>\n        {d.cellData}\n      </a>\n    );\n  } else {\n    // urlElt = d.cellData;\n    urlElt = Array.isArray(d.cellData) ? d.cellData.join(', ') : d.cellData;\n  }\n  return (\n    <React.Fragment key={f.dataKey}>\n      <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={d.cellData} style={{ backgroundColor: bg }}>\n        {urlElt}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst rowClassName = ({ index }) => {\n  if (index < 0) {\n    return 'headerRow';\n  }\n  return index % 2 === 0 ? 'evenRow' : 'oddRow';\n};\n\nexport default class SelectDataTable extends PureComponent {\n  constructor(props) {\n    console.log(\"constructed, showing props\")\n    console.log(props)\n    super(props);\n    const fWidth = 1 / this.props.fields.length;\n    let fields = this.props.fields.map((f) => ({ ...f, width: fWidth, isShow: true }));\n    //fields = fields.unshift({width: 50, isShow: true})\n    this.state = {\n      fields,\n      width: null,\n      sortBy: null,\n      sortDirection: null,\n      selected: [],\n      marked: []\n    };\n    this.containerRef = React.createRef();\n    this.autoSizer = React.createRef();\n    this.headerRenderer = this.headerRenderer.bind(this);\n    this.resizeRow = this.resizeRow.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onSortEnd = this.onSortEnd.bind(this);\n    this.onCheckChangedHandler = this.onCheckChangedHandler.bind(this);\n    this.onAllCheckHandler = this.onAllCheckHandler.bind(this);\n    this.sortHandler = this.sortHandler.bind(this);\n    this.getSortData = this.getSortData.bind(this);\n  }\n\n  onResize({ width }) {\n    this.setState({ width });\n  }\n\n  onSortEnd({ oldIndex, newIndex }) {\n    this.setState(({ fields }) => ({\n      fields: arrayMove(fields, oldIndex, newIndex),\n    }));\n  }\n\n  onCheckChangedHandler(e) {\n    const { value } = e.target;\n    const { checked } = e.target;\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = f.dataKey === value ? checked : f.isShow;\n        return { ...f };\n      }),\n    }));\n  }\n\n  onAllCheckHandler() {\n    this.setState(({ fields }) => ({\n      fields: fields.map((f) => {\n        f.isShow = true;\n        return { ...f };\n      }),\n    }));\n  }\n\n  getFileExt(slide_url) {\n    // gets the extension. if no extension, then entire last path elem\n    // functionally should get the last thing separated by either / or .\n    let lastPart = slide_url.substring(slide_url.lastIndexOf('/') + 1);\n    let lastDotIndex = lastPart.lastIndexOf('.');\n    if (lastDotIndex !== -1) {\n        return lastPart.substring(lastDotIndex + 1);\n    }\n    return lastPart;\n}\n\n  downloadSelected() {\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    let data = this.state.selected\n    if (data.length > downloadLimit){\n      data = data.slice(0, downloadLimit);\n      alert(\"Limiting download to first \" + downloadLimit)\n    }\n    for (let x of data) {\n      this.setState(prevState => {\n        if (prevState.marked.indexOf(x) === -1) {\n          return {\n            marked: [...prevState.marked, x]\n          };\n        }\n        return null;\n      });\n    }\n    this.setState({\"selected\":[]});\n\n    console.log(data)\n    console.log(\"about to try?\")\n    console.log(this.props.configProps)\n    // trigger downloads from pathdb\n    for (let record of data){\n        console.log(\"inside loop\")\n        console.log(\"trying to get metadata for slide with pathdb id\", record)\n        fetch(\"/node/\" + record + \"?_format=json\", {mode: \"cors\"}).then(x=>x.json()).then(x=>{ \n          let collectionId = x['field_collection'][0]['target_id'];\n          // look for collection in pathdb\n          fetch(\"/taxonomy/term/\" + collectionId + \"?_format=json\", {mode: \"cors\"}).then(y=>y.json()).then(collectionDoc=>{\n            let collectionName = collectionDoc['name']['0']['value'];\n            console.log(\"looking at wsi url: \", x['field_wsiimage'][0]['url'])\n            let slide_url = x['field_wsiimage'][0]['url']\n            if (window.location.protocol === \"https:\") {\n              slide_url = slide_url.replace(/^http:\\/\\//i, 'https://');\n            }\n            console.log(\"using anchor method\")\n            //let filename = slide_url.substring(slide_url.lastIndexOf('/') + 1);\n            let subId = \"subject\";\n            try {\n              subId = x['clinicaltrialsubjectid'][0]['value'];\n            } catch (error) {\n              console.log(\"subject id missing for download, just using 'image'\");\n              console.error(error);\n            }\n            let imageId = record;\n            try {\n              imageId = x['imageid'][0]['value'];\n            } catch (error) {\n              console.log(\"image id missing for download, just using pathdb id\");\n              console.error(error);\n            }\n            let filename = collectionName + \"_\" + subId + \"_\" + imageId + \".\" + this.getFileExt(slide_url);\n            const a = document.createElement('a');\n            a.href = slide_url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n          })\n\n        }).catch(console.error)\n    }\n  }\n\n  getSortData() {\n    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    const { data, filterData, filters } = this.props;\n    const { sortBy, sortDirection } = this.state;\n    const currentData = filters.length > 0 ? filterData : data;\n\n    return sortBy && sortDirection\n      ? currentData.sort((a, b) => {\n        const first = sortDirection === SortDirection.ASC ? a : b;\n        const second = sortDirection === SortDirection.ASC ? b : a;\n        return collator.compare(first[sortBy], second[sortBy]);\n      })\n      : currentData;\n  }\n\n  resizeRow({ dataKey, deltaX }) {\n    const prevFields = this.state.fields;\n    const idx = prevFields.findIndex((f) => f.dataKey === dataKey);\n\n    const percentDelta = deltaX / this.state.width;\n    prevFields[idx].width += percentDelta;\n\n    if (idx < prevFields.length - 1) {\n      prevFields[idx + 1].width = prevFields[idx + 1].width - percentDelta;\n    }\n    this.setState({ fields: [...prevFields] });\n  }\n\n  headerRenderer({\n    dataKey, label, sortBy, sortDirection,\n  }) {\n    return (\n      <React.Fragment key={dataKey}>\n        <div className=\"ReactVirtualized__Table__headerTruncatedText\" title={label}>\n          {label}\n        </div>\n        {}\n        <div>\n          {sortBy === dataKey ? (\n            <FontAwesomeIcon icon={sortDirection === SortDirection.DESC ? faSortDown : faSortUp} />\n          ) : (\n            <FontAwesomeIcon icon={faSort} />\n          )}\n        </div>\n        <Draggable\n          axis=\"x\"\n          defaultClassName=\"DragHandle\"\n          defaultClassNameDragging=\"DragHandleActive\"\n          onDrag={(event, { deltaX }) => {\n            this.resizeRow({ dataKey, deltaX });\n          }}\n          onStart={(event, { deltaX }) => {\n            this.setState({\"isResize\": true});\n          }}\n          onStop={(event, { deltaX }) => {\n            setTimeout(() => {\n              this.setState({\"isResize\": false})\n            }, 300);  // 300 milliseconds delay\n          }}\n          position={{ x: 0 }}\n          zIndex={999}\n        >\n          <span className=\"DragHandleIcon\" onMouseDown={(event) => event.stopPropagation()}>⋮</span>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n\n  selectionHandler(isChecked, rowData){\n    let downloadLimit = this.props.configProps.downloadLimit || 15;\n    console.log(\"chexmix\", isChecked, rowData)\n    const { selected } = this.state;\n    console.log(\"state selected before change\", selected)\n    let item = rowData[this.props.configProps.downloadField];\n    const existingIndex = selected.indexOf(item);\n    // if check is true, add to state\n    if (isChecked && existingIndex === -1) {\n      this.setState(prevState => ({\n        selected: [...prevState.selected, item]\n      }));\n    }\n      // if check is false, remove from state\n    if (!isChecked && existingIndex !== -1) {\n      this.setState(prevState => ({\n        selected: prevState.selected.filter(x => x !== item)\n      }));\n    }\n    if (this.state.selected.length > downloadLimit - 2) {\n      alert(\"Warning: We limit to at most \" + downloadLimit + \" concurrent downloads.\")\n    }\n  }\n\n  sortHandler({ sortBy, sortDirection }) {\n\n    if (!this.state.isResize){\n      this.setState({ sortBy, sortDirection });\n    }\n  }\n\n  render() {\n    const { fields, sortBy, sortDirection, selected, marked } = this.state;\n    const finalData = this.getSortData();\n    return (\n      <div ref={this.containerRef} style={{ width: '100%', height: '100%' }}>\n        <VisDataTableControl\n          list={fields}\n          onSortEnd={this.onSortEnd}\n          onCheckChanged={this.onCheckChangedHandler}\n          onAllCheck={this.onAllCheckHandler}\n        />\n        <AutoSizer ref={this.autoSizer} onResize={this.onResize}>\n          {({ width, height }) => (\n            <Table\n              width={width}\n              height={height}\n              headerHeight={25}\n              rowHeight={20}\n              rowClassName={rowClassName}\n              rowCount={finalData.length}\n              rowGetter={({ index }) => finalData[index]}\n              sort={this.sortHandler}\n              sortBy={sortBy}\n              sortDirection={sortDirection}\n            >\n              <Column\n                key=\"checkbox\"\n                dataKey=\"checkbox\"\n                width={50} // Adjust width as needed\n                label=\"↓\"\n                headerRenderer={() => <div title=\"Download Selected Files\" onClick={(e) => { this.downloadSelected() }}> <FontAwesomeIcon icon={faFileArrowDown} style={{ height: '1.8em', color: '#1b7d00' }} /></div>}\n                cellRenderer={({ rowData }) => (\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(rowData[this.props.configProps.downloadField])}\n                    onChange={(e) => this.selectionHandler(e.target.checked, rowData)}\n                  />\n                )}\n              />\n              {fields\n                .map((f) => (\n                  <Column\n                    key={f.dataKey}\n                    cellDataGetter={({ rowData }) => rowData[f.dataKey]}\n                    dataKey={f.dataKey}\n                    label={f.label}\n                    width={width * f.width}\n                    headerRenderer={this.headerRenderer}\n                    cellRenderer={(d) => {\n                      let color = marked.includes(d.rowData[this.props.configProps.downloadField])? 'lightGray': '';\n                      return cellRenderer(d, f, color)\n                    }}\n                  />\n                ))}\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nSelectDataTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n"]}