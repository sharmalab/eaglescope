{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,W,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,E,E,O,C,U,I,G,I,E,E,S,E,E,S,E,E,S,E,E,SCKA,IAAMqJ,EAAgBA,CAACxH,EAAMC,KAC3B,IAAMC,EAAM,IAAIC,IAahB,OAZAH,EAAKI,OAAO,CAAEC,AAAAA,IACZ,IAAMC,EAAQD,CAAC,CAACJ,EAAE,CACdM,MAAMC,OAAO,CAACF,GAChBA,EAAMF,OAAO,CAAEK,AAAAA,IACRP,EAAIQ,GAAG,CAACD,IAAMP,EAAInB,GAAG,CAAC0B,EAAG,GAC9BP,EAAInB,GAAG,CAAC0B,EAAGP,EAAIpB,GAAG,CAAC2B,GAAK,EAC1B,IAEKP,EAAIQ,GAAG,CAACJ,IAAUJ,EAAInB,GAAG,CAACuB,EAAO,GACtCJ,EAAInB,GAAG,CAACuB,EAAOJ,EAAIpB,GAAG,CAACwB,GAAS,GAEpC,GACOC,MAAMI,IAAI,CAACT,GAAKA,GAAG,CAAEG,AAAAA,GAAO,CAAA,CAAEO,IAAKP,CAAC,CAAC,EAAE,CAAEZ,MAAOY,CAAC,CAAC,EAATZ,AAAY,CAAA,EAC9D,EAEMgI,EAAYA,CAACzH,EAAMc,EAAOC,EAAS,CAAA,CAAK,IAC5C,GAAIA,EACF,OAAOyG,EAAcxH,EAAMc,GAE7B,IAAME,EAAW,IAAIC,KAAKC,QAAQ,CAACC,KAAAA,EAAW,CAAEC,QAAS,CAAA,EAAMC,YAAa,MAAO,GAInF,OAAOgG,EAAAA,IAAAA,GAEJzG,GAAG,CAAEP,AAAAA,GAAMA,CAAC,CAACS,EAAM,EACnBS,QAAQ,CANX,SAAkBnD,CAAC,CAAEoD,CAAC,EACpB,OAAOR,EAASS,OAAO,CAACrD,EAAGoD,EAC7B,GAKGE,MAAM,CAAEhD,AAAAA,GAAMA,EAAEiD,MAAM,EACtBC,OAAO,CAAC5B,EACb,EAEA,SAAS2H,EAAmB7F,CAAK,EAC/B,MAO8B,QACxBC,EAAW0F,EAAU3F,EAAM9B,IAAI,CAAE8B,EAAME,MAAM,CAACC,CAAC,CAAEH,EAAME,MAAM,CAACjB,MAAM,EACpEmB,EAAOC,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,IACPC,EAAWD,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,IACXE,EAAWF,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,IACXG,EAAYH,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,IAEZI,EAAeA,CAACtC,EAAGuC,IACR6E,EAAAA,WAAAA,GAEZ3E,MAAM,CAAC,CAAC,EAAG2E,EAAAA,GAAAA,CAAOtF,EAAW1B,AAAAA,GAAMA,CAAC,CAACJ,EAAE,EAAE,EACzC2C,KAAK,CAAC,CAAC,EAAGJ,EAAM,EAIfK,EAAeA,CAAC5C,EAAG6C,IAERuE,EAAAA,SAAAA,GAEZ3E,MAAM,CAACX,EAAS7B,GAAG,CAAEG,AAAAA,GAAMA,CAAC,CAACJ,EAAE,GAC/B2C,KAAK,CAAC,CAACE,EAAQ,EAAE,EACjBE,OAAO,CAAC,IAIPC,EAAkBA,KACtBX,EAAUY,OAAO,CAACC,SAAS,CAAC,UAAUC,MAAM,GAC5Cd,EAAUY,OAAO,CACdC,SAAS,CAAC,UACVnD,IAAI,CAAC+B,EAAW1B,AAAAA,GAAMA,EA7BP,GA6BkB,EACjCgD,KAAK,GACLC,MAAM,CAAC,QACPC,IAAI,CAAC,QAAS,SACdA,IAAI,CAAC,IAAK,GACVA,IAAI,CAAC,IAAMlD,AAAAA,GAAM+B,EAASc,OAAO,CAACjB,CAAC,CAAC5B,EAlCrB,GAkCgC,EAAI+B,EAASc,OAAO,CAACjB,CAAC,CAACuB,SAAS,GAAK,EAAI,GACxFC,IAAI,CAAEpD,AAAAA,GAAMA,EAAEO,GAAG,EACjB8C,EAAE,CAAC,QAAUC,AAAAA,IACZ,IAAMC,EAAS,CACbC,GAAI/B,EAAM+B,EAAE,CACZC,MAAOhC,EAAMgC,KAAK,CAClBhD,MAAOgB,EAAME,MAAM,CAACC,CAAC,CACrB8B,UAAW,KACXC,OAAQL,EAAE/C,GAAVoD,AACF,EACAlC,EAAMmC,WAAW,CAAC,CAACL,EAAO,CAC5B,EACJ,EAEMM,EAAUA,CAACC,EAAWnE,EAAMoE,EAAY,IAAI,IAMhD,IAAMC,EAAkBkD,AAAAA,CAAAA,EAAAA,EAAAA,OAAAA,AAAAA,EAAcrF,EAAKgB,OAAO,CALhC7C,AAAAA,GAAM,CAAA,EAAGA,EAAEO,GAAG,CAAA,EAAA,EAAKP,EAAEZ,KAAK,CAAA,CAAE,CAC/B,CACbkE,EAAG,GACH1B,EAAG,EACL,GAEMqC,EAAaH,EAAUhB,SAAS,CAAC,CAAA,KAAA,EAAQiB,EAAAA,CAAW,EAAEpE,IAAI,CAACA,EAAOK,AAAAA,GAAMA,EAvD5D,GAuDuE,EAEnFkE,EAAYD,EAAWjB,KAAK,GAAGC,MAAM,CAAC,QAwC5C,OAvCAiB,EACGhB,IAAI,CAAC,QAAS,CAAA,EAAGa,EAAAA,CAAW,EAC5Bb,IAAI,CAAC,IAAK,GACVA,IAAI,CAAC,SAAUnB,EAASc,OAAO,CAACjB,CAAC,CAACuB,SAAS,IAC3CD,IAAI,CAAC,IAAMlD,AAAAA,GAAM+B,EAASc,OAAO,CAACjB,CAAC,CAAC5B,EA9DrB,GA8DgC,GAClDkE,EACGb,EAAE,CAAC,YAAaW,EAAgBG,SAAS,EACzCd,EAAE,CAAC,aAAcW,EAAgBI,UAAU,EAC3Cf,EAAE,CAAC,QAAUgB,AAAAA,IAEZ,IAAMjF,EAAQkF,AADGJ,EAAUX,MAAM,CAAEvD,AAAAA,GAAMA,IAAMqE,GACxB1E,IAAI,EAAE,CAAC,EAAE,CAACY,GAAG,CAC9BgD,EAAS9B,GAAOE,QAAQjB,OAAS,CACrC8C,GAAI/B,EAAM+B,EAAE,CACZC,MAAOhC,EAAMgC,KAAK,CAClBhD,MAAOgB,EAAME,MAAM,CAACC,CAAC,CACrB8B,UAAW,MACXC,OAAQvE,CACV,EAAI,CACFoE,GAAI/B,EAAM+B,EAAE,CACZC,MAAOhC,EAAMgC,KAAK,CAClBhD,MAAOgB,EAAME,MAAM,CAACC,CAAC,CACrB8B,UAAW,KACXC,OAAQvE,CACV,EACAqC,EAAMmC,WAAW,CAAC,CAACL,EAAO,CAC5B,GAEFU,EACGM,KAAK,CAACL,GACNM,UAAU,GACVC,QAAQ,CAAC,KACTvB,IAAI,CAAC,QAAUlD,AAAAA,GAAM+B,EAASc,OAAO,CAACS,CAAC,CAACtD,CAAC,GAAU,GACnD8C,SAAS,CAAC,UACVM,IAAI,CAAEpD,AAAAA,GAAMA,EAAEO,GAAG,EAGpB0D,EAAWS,IAAI,GAAGF,UAAU,GAAGC,QAAQ,CAAC,KAAMvB,IAAI,CAAC,QAAS,GACzDH,MAAM,GAEFkB,CACT,EAgDA,MA9CAU,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACRC,WAAW,KACToC,EAAAA,MAAAA,CAAUnF,EAAKgB,OAAO,EAAEC,SAAS,CAAC,OAAOC,MAAM,CAAC,OAChD,IAAM+B,EAAOjD,EAAKgB,OAAO,CAACkC,qBAAqB,GACzCC,EAAaF,EAAK3C,KAAK,CA3GzB,GAFC,GA8GC8C,EAAcH,EAAKrC,MAAM,CA/G5B,GAEG,EA8GNT,CAAAA,EAASa,OAAO,CAAGoC,EAGnB,IAAMC,EAAM8B,EAAAA,MAAAA,CACFnF,EAAKgB,OAAO,EACnBI,MAAM,CAAC,OACPC,IAAI,CAAC,QAAS4B,EAAK3C,KAAK,EACxBe,IAAI,CAAC,SAAU4B,EAAKrC,MAAM,CAE7BR,CAAAA,EAAUY,OAAO,CAAGqC,EACjBjC,MAAM,CAAC,KACPC,IAAI,CAAC,YAAa,oBAErB,IAAMiC,EAASjD,IAAuB8C,GAChCI,EAAS5C,EAxHC,MAwHsByC,EACtClD,CAAAA,EAASc,OAAO,CAAG,CAAES,EAAG6B,EAAQvD,EAAGwD,CAAO,EAE1CnD,EAAUY,OAAO,CACdI,MAAM,CAAC,KACPC,IAAI,CAAC,YAAa,CAAA,YAAA,EAAe+B,EAAW,CAAA,CAAG,EAC/CI,IAAI,CAAC2B,EAAAA,UAAAA,CAAc7B,GAAQI,QAAQ,CAAC,CAACN,IAExCpB,EAAQ5B,EAAUY,OAAO,CAAEnB,EAAU,MACrCkB,GACF,EAAG,IACL,EAAG,CAACnB,EAAM+D,MAAM,CAAC,EAEjBb,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACRC,WAAW,KACT,IAAIjF,EAAO,EAAE,CAEXA,EADE8B,EAAMgE,OAAO,CAACnE,MAAM,CAAG,EAClB8F,EAAU3F,EAAMiE,UAAU,CAAEjE,EAAME,MAAM,CAACC,CAAC,CAAEH,EAAME,MAAM,CAACjB,MAAM,EAE/DgB,EAETmC,EAAQ5B,EAAUY,OAAO,CAAElD,EAAM,MACjCiD,GACF,EAAG,IACL,EAAG,CAACnB,EAAMgE,OAAO,CAAEhE,EAAMiE,UAAU,CAAEjE,EAAM+D,MAAM,CAAC,EAE3CuB,AAAAA,AAAAA,EAAAA,GAAApB,aAAA,CAAP,MAAA,CAAYnC,GAAI/B,EAAM+B,EAAG,CAACoC,IAAK/D,EAAMgE,KAAK,SAASC,MAAO,CAAE3D,MAAO,OAAQM,OAAQ,MAAO,CAAE,EAC9F,CAEA,IAAA,EAAe6E,CAEfA,CAAAA,EAAmBvB,SAAS,CAAG,CAC7BpG,KAAMsH,AAAAA,AAAAA,EAAAA,GAAUjB,OAAO,CAACiB,AAAAA,AAAAA,EAAAA,GAAUhB,KAAK,CAAC,CAAC,IAAIC,UAAU,CACvDvE,OAAQsF,AAAAA,AAAAA,EAAAA,GAAUhB,KAAK,CAAC,CAAErE,EAAGqF,AAAAA,EAAAA,GAAUd,MAAM,CAACD,UAAU,CAAExF,OAAQuG,AAAAA,EAAAA,GAAUb,IAAlB1F,AAAuB,GAAGwF,UAAU,CAC9F1C,GAAIyD,AAAAA,EAAAA,GAAUd,MAAM,CAACD,UAAU,CAC/BzC,MAAOwD,AAAAA,EAAAA,GAAUd,MAAM,CAACD,UAAU,CAClCR,WAAYuB,AAAAA,AAAAA,EAAAA,GAAUjB,OAAO,CAACiB,AAAAA,AAAAA,EAAAA,GAAUhB,KAAK,CAAC,CAAC,IAAIC,UAAU,CAC7DT,QAASwB,AAAAA,AAAAA,EAAAA,GAAUjB,OAAO,CAACiB,AAAAA,AAAAA,EAAAA,GAAUhB,KAAK,CAAC,CAAC,IAAIC,UAAU,CAC1DtC,YAAaqD,AAAAA,EAAAA,GAAUZ,IAAI,CAACH,UAAU,CACtCV,OAAQyB,AAAAA,AAAAA,EAAAA,GAAUhB,KAAK,CAAC,CACtB9D,MAAO8E,AAAAA,EAAAA,GAAUX,MAAM,CAACJ,UAAU,CAClCK,YAAaU,AAAAA,EAAAA,GAAUX,MAAM,CAACJ,UAA9BK,AACF,GAAGL,UAAH,AACF,C,G,E,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,SCzKA,EA5BA,SAAuBO,CAAK,CAAEC,CAAQ,CAAEC,CAAM,EAC5C,IAAMC,EAAUI,EAAAA,MAAAA,CACNP,GACPxD,MAAM,CAAC,OACP6C,KAAK,CAAC,UAAW,GACjB5C,IAAI,CAAC,QAAS,WACd4C,KAAK,CAAC,UAAW,QACjBA,KAAK,CAAC,mBAAoB,SAC1BA,KAAK,CAAC,SAAU,SAChBA,KAAK,CAAC,eAAgB,OACtBA,KAAK,CAAC,gBAAiB,OACvBA,KAAK,CAAC,UAAW,OAcpB,MAAO,CAAE3B,UAZS,SAAcnE,CAAC,EAC/B4G,EACGC,IAAI,CAACH,EAAS1G,IACd8F,KAAK,CAAC,UAAW,IACjBA,KAAK,CAAC,OAAQ,CAAA,EAAGa,EAAOrD,CAAC,CAAG0D,EAAAA,KAAAA,CAAS,IAAI,CAAC,CAAC,EAAE,CAAA,EAAA,CAAI,EACjDlB,KAAK,CAAC,MAAO,CAAA,EAAGa,EAAO/E,CAAC,CAAGoF,EAAAA,KAAAA,CAAS,IAAI,CAAC,CAAC,EAAE,CAAA,EAAA,CAAI,CACrD,EAMoB5C,WAJD,WACjBwC,EAAQd,KAAK,CAAC,UAAW,OAC3B,CAE+B,CACjC,C","sources":["<anon>","source/components/VisualTools/Chart/HorizontalBarChart.js","source/components/partials/tooltip.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2iOPo\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $1ad4b0941f833fd6$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n\nvar $c9Z8w = parcelRequire(\"c9Z8w\");\n\nvar $bN8Lq = parcelRequire(\"bN8Lq\");\nconst $1ad4b0941f833fd6$var$transformList = (data, f)=>{\n    const map = new Map();\n    data.forEach((d)=>{\n        const items = d[f];\n        if (Array.isArray(items)) items.forEach((i)=>{\n            if (!map.has(i)) map.set(i, 0);\n            map.set(i, map.get(i) + 1);\n        });\n        else {\n            if (!map.has(items)) map.set(items, 0);\n            map.set(items, map.get(items) + 1);\n        }\n    });\n    return Array.from(map).map((d)=>({\n            key: d[0],\n            value: d[1]\n        }));\n};\nconst $1ad4b0941f833fd6$var$transform = (data, field, isList = false)=>{\n    if (isList) return $1ad4b0941f833fd6$var$transformList(data, field);\n    const collator = new Intl.Collator(undefined, {\n        numeric: true,\n        sensitivity: 'base'\n    });\n    function collSort(a, b) {\n        return collator.compare(a, b);\n    }\n    return $9NlP8.nest().key((d)=>d[field]).sortKeys(collSort).rollup((v)=>v.length).entries(data);\n};\nfunction $1ad4b0941f833fd6$var$HorizontalBarChart(props) {\n    const margin = {\n        top: 10,\n        right: 10,\n        bottom: 35,\n        left: 10\n    };\n    const fields = {\n        y: 'key',\n        x: 'value'\n    };\n    const fullData = $1ad4b0941f833fd6$var$transform(props.data, props.fields.y, props.fields.isList);\n    const self = (0, $acw62.useRef)();\n    const scaleRef = (0, $acw62.useRef)();\n    const hightRef = (0, $acw62.useRef)();\n    const viewerRef = (0, $acw62.useRef)();\n    const createXScale = (f, width)=>{\n        const xScale = $9NlP8.scaleLinear().domain([\n            0,\n            $9NlP8.max(fullData, (d)=>d[f])\n        ]).range([\n            0,\n            width\n        ]);\n        return xScale;\n    };\n    const createYScale = (f, height)=>{\n        // set the ranges\n        const yScale = $9NlP8.scaleBand().domain(fullData.map((d)=>d[f])).range([\n            height,\n            0\n        ]).padding(0.1);\n        return yScale;\n    };\n    const createTextLabel = ()=>{\n        viewerRef.current.selectAll('.label').remove();\n        viewerRef.current.selectAll('.label').data(fullData, (d)=>d[fields.y]).enter().append('text').attr('class', 'label').attr('x', 5).attr('y', (d)=>scaleRef.current.y(d[fields.y]) + scaleRef.current.y.bandwidth() / 2 + 4).text((d)=>d.key).on('click', (x)=>{\n            const filter = {\n                id: props.id,\n                title: props.title,\n                field: props.fields.y,\n                operation: 'eq',\n                values: x.key\n            };\n            props.filterAdded([\n                filter\n            ]);\n        });\n    };\n    const drawBar = (selection, data, className = 'og')=>{\n        const addLabel = (d)=>`${d.key}: ${d.value}`;\n        const offset = {\n            x: 30,\n            y: 10\n        };\n        const tooltipHandlers = (0, $bN8Lq.default)(self.current, addLabel, offset);\n        const updateBars = selection.selectAll(`rect.${className}`).data(data, (d)=>d[fields.y]);\n        const enterBars = updateBars.enter().append('rect');\n        enterBars.attr('class', `${className}`).attr('x', 0).attr('height', scaleRef.current.y.bandwidth()).attr('y', (d)=>scaleRef.current.y(d[fields.y]));\n        enterBars.on('mousemove', tooltipHandlers.mousemove).on('mouseleave', tooltipHandlers.mouseleave).on('click', (enterData)=>{\n            const selected = enterBars.filter((d)=>d === enterData);\n            const value = selected.data()[0].key;\n            const filter = props?.fields?.isList ? {\n                id: props.id,\n                title: props.title,\n                field: props.fields.y,\n                operation: 'has',\n                values: value\n            } : {\n                id: props.id,\n                title: props.title,\n                field: props.fields.y,\n                operation: 'eq',\n                values: value\n            };\n            props.filterAdded([\n                filter\n            ]);\n        });\n        updateBars.merge(enterBars).transition().duration(1000).attr('width', (d)=>scaleRef.current.x(d[fields.x])).selectAll('.label').text((d)=>d.key);\n        // update_bars\n        updateBars.exit().transition().duration(1000).attr('width', 0).remove();\n        return updateBars;\n    };\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            $9NlP8.select(self.current).selectAll('svg').remove('svg');\n            const rect = self.current.getBoundingClientRect();\n            const innerWidth = rect.width - margin.left - margin.right;\n            const innerHeight = rect.height - margin.top - margin.bottom;\n            hightRef.current = innerHeight;\n            // create svg\n            const svg = $9NlP8.select(self.current).append('svg').attr('width', rect.width).attr('height', rect.height);\n            // create viewer\n            viewerRef.current = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n            //\n            const xScale = createXScale(fields.x, innerWidth);\n            const yScale = createYScale(fields.y, innerHeight);\n            scaleRef.current = {\n                x: xScale,\n                y: yScale\n            };\n            viewerRef.current.append('g').attr('transform', `translate(0,${innerHeight})`).call($9NlP8.axisBottom(xScale).tickSize(-innerHeight));\n            drawBar(viewerRef.current, fullData, 'og');\n            createTextLabel();\n        }, 100);\n    }, [\n        props.layout\n    ]);\n    (0, $acw62.useEffect)(()=>{\n        setTimeout(()=>{\n            let data = [];\n            if (props.filters.length > 0) data = $1ad4b0941f833fd6$var$transform(props.filterData, props.fields.y, props.fields.isList);\n            else data = fullData;\n            drawBar(viewerRef.current, data, 'ft');\n            createTextLabel();\n        }, 100);\n    }, [\n        props.filters,\n        props.filterData,\n        props.layout\n    ]);\n    return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($acw62))).createElement(\"div\", {\n        id: props.id,\n        ref: self,\n        role: \"figure\",\n        style: {\n            width: '100%',\n            height: '100%'\n        }\n    });\n}\nvar $1ad4b0941f833fd6$export$2e2bcd8739ae039 = $1ad4b0941f833fd6$var$HorizontalBarChart;\n$1ad4b0941f833fd6$var$HorizontalBarChart.propTypes = {\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    fields: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        y: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n        isList: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).bool\n    }).isRequired,\n    id: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    title: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).string.isRequired,\n    filterData: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filters: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({})).isRequired,\n    filterAdded: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).func.isRequired,\n    layout: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).shape({\n        width: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired,\n        currentCols: (0, (/*@__PURE__*/$parcel$interopDefault($c9Z8w))).number.isRequired\n    }).isRequired\n};\n\n});\nparcelRegister(\"bN8Lq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $895b11a613892f4e$export$2e2bcd8739ae039);\n\nvar $9NlP8 = parcelRequire(\"9NlP8\");\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */ function $895b11a613892f4e$var$createTooltip(mount, addLabel, offset) {\n    const tooltip = $9NlP8.select(mount).append('div').style('opacity', 1).attr('class', 'tooltip').style('display', 'none').style('background-color', 'white').style('border', 'solid').style('border-width', '2px').style('border-radius', '5px').style('padding', '5px');\n    const mousemove = function move(d) {\n        tooltip.html(addLabel(d)).style('display', '').style('left', `${offset.x + $9NlP8.mouse(this)[0]}px`).style('top', `${offset.y + $9NlP8.mouse(this)[1]}px`);\n    };\n    const mouseleave = function leave() {\n        tooltip.style('display', 'none');\n    };\n    return {\n        mousemove: mousemove,\n        mouseleave: mouseleave\n    };\n}\nvar $895b11a613892f4e$export$2e2bcd8739ae039 = $895b11a613892f4e$var$createTooltip;\n\n});\n\n\n\n//# sourceMappingURL=HorizontalBarChart.40244db2.js.map\n","import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport createTooltip from '../../partials/tooltip';\n\nconst transformList = (data, f) => {\n  const map = new Map();\n  data.forEach((d) => {\n    const items = d[f];\n    if (Array.isArray(items)) {\n      items.forEach((i) => {\n        if (!map.has(i)) { map.set(i, 0); }\n        map.set(i, map.get(i) + 1);\n      });\n    } else {\n      if (!map.has(items)) { map.set(items, 0); }\n      map.set(items, map.get(items) + 1);\n    }\n  });\n  return Array.from(map).map((d) => ({ key: d[0], value: d[1] }));\n};\n\nconst transform = (data, field, isList = false) => {\n  if (isList) {\n    return transformList(data, field);\n  }\n  const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  function collSort(a, b) {\n    return collator.compare(a, b);\n  }\n  return d3\n    .nest()\n    .key((d) => d[field])\n    .sortKeys(collSort)\n    .rollup((v) => v.length)\n    .entries(data);\n};\n\nfunction HorizontalBarChart(props) {\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 35,\n    left: 10,\n  };\n\n  const fields = { y: 'key', x: 'value' };\n  const fullData = transform(props.data, props.fields.y, props.fields.isList);\n  const self = useRef();\n  const scaleRef = useRef();\n  const hightRef = useRef();\n  const viewerRef = useRef();\n\n  const createXScale = (f, width) => {\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(fullData, (d) => d[f])])\n      .range([0, width]);\n    return xScale;\n  };\n\n  const createYScale = (f, height) => {\n    // set the ranges\n    const yScale = d3\n      .scaleBand()\n      .domain(fullData.map((d) => d[f]))\n      .range([height, 0])\n      .padding(0.1);\n    return yScale;\n  };\n\n  const createTextLabel = () => {\n    viewerRef.current.selectAll('.label').remove();\n    viewerRef.current\n      .selectAll('.label')\n      .data(fullData, (d) => d[fields.y])\n      .enter()\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', 5)\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]) + scaleRef.current.y.bandwidth() / 2 + 4)\n      .text((d) => d.key)\n      .on('click', (x) => {\n        const filter = {\n          id: props.id,\n          title: props.title,\n          field: props.fields.y,\n          operation: 'eq',\n          values: x.key,\n        };\n        props.filterAdded([filter]);\n      });\n  };\n\n  const drawBar = (selection, data, className = 'og') => {\n    const addLabel = (d) => `${d.key}: ${d.value}`;\n    const offset = {\n      x: 30,\n      y: 10,\n    };\n    const tooltipHandlers = createTooltip(self.current, addLabel, offset);\n    const updateBars = selection.selectAll(`rect.${className}`).data(data, (d) => d[fields.y]);\n\n    const enterBars = updateBars.enter().append('rect');\n    enterBars\n      .attr('class', `${className}`)\n      .attr('x', 0)\n      .attr('height', scaleRef.current.y.bandwidth())\n      .attr('y', (d) => scaleRef.current.y(d[fields.y]));\n    enterBars\n      .on('mousemove', tooltipHandlers.mousemove)\n      .on('mouseleave', tooltipHandlers.mouseleave)\n      .on('click', (enterData) => {\n        const selected = enterBars.filter((d) => d === enterData);\n        const value = selected.data()[0].key;\n        const filter = props?.fields?.isList ? {\n          id: props.id,\n          title: props.title,\n          field: props.fields.y,\n          operation: 'has',\n          values: value,\n        } : {\n          id: props.id,\n          title: props.title,\n          field: props.fields.y,\n          operation: 'eq',\n          values: value,\n        };\n        props.filterAdded([filter]);\n      });\n\n    updateBars\n      .merge(enterBars)\n      .transition()\n      .duration(1000)\n      .attr('width', (d) => scaleRef.current.x(d[fields.x]))\n      .selectAll('.label')\n      .text((d) => d.key);\n    // update_bars\n\n    updateBars.exit().transition().duration(1000).attr('width', 0)\n      .remove();\n\n    return updateBars;\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n      hightRef.current = innerHeight;\n\n      // create svg\n      const svg = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      viewerRef.current = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      //\n      const xScale = createXScale(fields.x, innerWidth);\n      const yScale = createYScale(fields.y, innerHeight);\n      scaleRef.current = { x: xScale, y: yScale };\n\n      viewerRef.current\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(xScale).tickSize(-innerHeight));\n\n      drawBar(viewerRef.current, fullData, 'og');\n      createTextLabel();\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let data = [];\n      if (props.filters.length > 0) {\n        data = transform(props.filterData, props.fields.y, props.fields.isList);\n      } else {\n        data = fullData;\n      }\n      drawBar(viewerRef.current, data, 'ft');\n      createTextLabel();\n    }, 100);\n  }, [props.filters, props.filterData, props.layout]);\n\n  return <div id={props.id} ref={self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default HorizontalBarChart;\n\nHorizontalBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ y: PropTypes.string.isRequired, isList: PropTypes.bool }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import * as d3 from 'd3';\n\n/**\n * @function createTooltip\n * @description creates a tooltip dev and mount it to\n * the chart\n * @param {*} mount reference to the chart to mount tooltip on\n * @param {Function} addLabel function to generate text inside tooltip\n * @param {Object} offset the x and y offset from mouse position to position tooltip\n * @returns {Object} contains to function mousemove and mouseleave handlers\n */\n\nfunction createTooltip(mount, addLabel, offset) {\n  const tooltip = d3\n    .select(mount)\n    .append('div')\n    .style('opacity', 1)\n    .attr('class', 'tooltip')\n    .style('display', 'none')\n    .style('background-color', 'white')\n    .style('border', 'solid')\n    .style('border-width', '2px')\n    .style('border-radius', '5px')\n    .style('padding', '5px');\n\n  const mousemove = function move(d) {\n    tooltip\n      .html(addLabel(d))\n      .style('display', '')\n      .style('left', `${offset.x + d3.mouse(this)[0]}px`)\n      .style('top', `${offset.y + d3.mouse(this)[1]}px`);\n  };\n\n  const mouseleave = function leave() {\n    tooltip.style('display', 'none');\n  };\n\n  return { mousemove, mouseleave };\n}\n\nexport default createTooltip;\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$1ad4b0941f833fd6$export$2e2bcd8739ae039","$acw62","$9NlP8","$c9Z8w","$bN8Lq","$1ad4b0941f833fd6$var$transformList","data","f","map","Map","forEach","d","items","Array","isArray","i","has","from","key","$1ad4b0941f833fd6$var$transform","field","isList","collator","Intl","Collator","undefined","numeric","sensitivity","nest","sortKeys","b","compare","rollup","length","entries","$1ad4b0941f833fd6$var$HorizontalBarChart","props","fullData","fields","y","self","useRef","scaleRef","hightRef","viewerRef","createXScale","width","scaleLinear","domain","max","range","createYScale","height","scaleBand","padding","createTextLabel","current","selectAll","remove","enter","append","attr","bandwidth","text","on","x","filter","id","title","operation","values","filterAdded","drawBar","selection","className","tooltipHandlers","updateBars","enterBars","mousemove","mouseleave","enterData","selected","merge","transition","duration","exit","useEffect","setTimeout","select","rect","getBoundingClientRect","innerWidth","innerHeight","svg","xScale","yScale","call","axisBottom","tickSize","layout","filters","filterData","createElement","ref","role","style","propTypes","arrayOf","shape","isRequired","string","bool","func","number","currentCols","$895b11a613892f4e$export$2e2bcd8739ae039","mount","addLabel","offset","tooltip","html","mouse","React","d3","PropTypes","createTooltip","transformList","transform","collSort","HorizontalBarChart","margin","top","right","bottom","left","move","leave"],"version":3,"file":"HorizontalBarChart.40244db2.js.map"}