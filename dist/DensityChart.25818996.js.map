{"version":3,"sources":["components/VisualTools/Chart/DensityChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","DensityChart","props","startPosition","endPosition","self","useRef","svg","scales","x","scaleLinear","y","margin","top","right","bottom","left","end","event","selection","_ref","Math","min","x0","y0","_ref2","max","x1","y1","filters","id","concat","title","field","fields","operation","values","numFixed","current","invert","filterAdded","useEffect","setTimeout","select","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","append","attr","paddingPercent","domainExtentX","extent","data","d","domainPaddingX","domainExtentY","domainPaddingY","domain","range","axisBottom","axisLeft","getCurrentMouseClickPosition","mouseX","sourceEvent","clientX","node","mouseY","clientY","brush","on","startX","startY","selectArea","abs","selectedArea","layout","length","filterData","k","pow","round","log10","color","densityData","contourDensity","size","bandwidth","insert","enter","geoPath","value","createElement","ref","style","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","number","currentCols","func"],"mappings":"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","file":"DensityChart.25818996.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nfunction DensityChart(props) {\n  let startPosition = [0, 0];\n  let endPosition = [0, 0];\n  const self = useRef();\n  const svg = useRef();\n  const scales = useRef({\n    x: d3.scaleLinear(),\n    y: d3.scaleLinear(),\n  });\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 20,\n    left: 40,\n  };\n\n  const end = () => {\n    if (!d3.event.selection) return;\n    const [x0, y0] = [Math.min(startPosition[0], endPosition[0]),\n      Math.min(startPosition[1], endPosition[1])];\n    const [x1, y1] = [Math.max(startPosition[0], endPosition[0]),\n      Math.max(startPosition[1], endPosition[1])];\n    const filters = [\n      {\n        id: `${props.id}_x`,\n        title: props.title,\n        field: props.fields.x,\n        operation: 'range',\n        values: [numFixed(scales.current.x.invert(x0)), numFixed(scales.current.x.invert(x1))],\n      },\n      {\n        id: `${props.id}_y`,\n        title: props.title,\n        field: props.fields.y,\n        operation: 'range',\n        values: [numFixed(scales.current.y.invert(y1)), numFixed(scales.current.y.invert(y0))],\n      },\n    ];\n    props.filterAdded(filters);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      svg.current = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n      const domainExtentX = d3.extent(props.data, (d) => d[props.fields.x]);\n      const domainPaddingX = (domainExtentX[1] - domainExtentX[0]) * paddingPercent;\n      const domainExtentY = d3.extent(props.data, (d) => d[props.fields.y]);\n      const domainPaddingY = (domainExtentY[1] - domainExtentY[0]) * paddingPercent;\n      scales.current.x\n        .domain([domainExtentX[0] - domainPaddingX,\n          domainExtentX[1] + domainPaddingX])\n        .range([0, innerWidth]);\n\n      scales.current.y\n        .domain([domainExtentY[0] - domainPaddingY,\n          domainExtentY[1] + domainPaddingY])\n        .range([innerHeight, 0]);\n\n      svg.current\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.current.x));\n      svg.current.append('g').call(d3.axisLeft(scales.current.y));\n\n      const getCurrentMouseClickPosition = () => {\n        const mouseX = d3.event.sourceEvent.clientX - svg.current.node().getBoundingClientRect().x\n        - 2 * margin.left;\n        const mouseY = d3.event.sourceEvent.clientY - svg.current.node().getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n\n      const brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          startPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selection').remove('rect');\n        }).on('brush', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX + margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(130, 130, 130, 0.5)');\n        })\n        .on('end', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectedArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX + margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(140, 140, 140, 0.5)');\n          end();\n        });\n\n      svg.current.append('g').call(brush);\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const k = 10 ** (-4 + Math.round(Math.log10(data.length)));\n      const color = d3.scaleLinear().domain([0, k]).range(['white', '#4682b4']);\n\n      const densityData = d3\n        .contourDensity()\n        .x((d) => scales.current.x(d[props.fields.x]))\n        .y((d) => scales.current.y(d[props.fields.y]))\n        .size([innerWidth, innerHeight])\n        .bandwidth(20)(data);\n\n      svg.current.select('#draw_area').remove('g');\n      svg.current\n        .insert('g', 'g')\n        .attr('id', 'draw_area')\n        .selectAll('path')\n        .data(densityData)\n        .enter()\n        .append('path')\n        .attr('d', d3.geoPath())\n        .attr('fill', (d) => color(d.value));\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n  return <div id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default DensityChart;\n\nDensityChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, y: PropTypes.string.isRequired })\n    .isRequired,\n  id: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n"]}