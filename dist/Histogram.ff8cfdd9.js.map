{"version":3,"sources":["components/VisualTools/Chart/Histogram.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","len","length","arr2","l","Symbol","iterator","f","next","done","push","value","return","isArray","Histogram","_ref","data","fields","id","_ref$binsCount","binsCount","filterData","filters","filterAdded","layout","svgRef","useRef","_useState","useState","x","scaleLinear","y","_useState2","Scales","_useState3","hist","histogram","bins","_useState4","margin","top","right","bottom","left","useEffect","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","append","attr","concat","domain","max","d","range","thresholds","ticks","brush","brushX","extent","on","event","selection","_ref2","x0","x1","field","operation","values","numFixed","invert","axisBottom","view","axisLeft","join","Math","style","transition","duration","createElement","ref","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","number","func","currentCols","defaultProps"],"mappings":"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","file":"Histogram.ff8cfdd9.js","sourceRoot":"../source","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\n/**\n * @function Histogram\n * @description Creates an interactive histogram chart\n *              User can select specific range of x by brushing\n * @param {Object} data - total data without filtering\n * @param {Array} fields - contains filed to create histogram on\n * @param {String} id - HTML id for the chart\n * @param {Integer} binsCount - number of bins to split data on\n * @param {Object} filterData - data after applying filters\n * @param {Array} filters - current filters\n * @param {Function} filterAdded - handler for adding new filter\n * @returns {Component}\n */\n\nfunction Histogram({\n  data, fields, id, binsCount = 10, filterData, filters, filterAdded, layout,\n}) {\n  const svgRef = useRef();\n  const [Scales] = useState({\n    x: d3.scaleLinear(),\n    y: d3.scaleLinear(),\n  });\n  const [histogram] = useState({\n    hist: d3.histogram(),\n    bins: null,\n  });\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 30,\n    left: 40,\n  };\n\n  // initialize svg and draw base histogram\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(svgRef.current).selectAll('svg').remove('svg');\n      const rect = svgRef.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      const svg = d3\n        .select(svgRef.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      Scales.x.domain([0, d3.max(data, (d) => d[fields.x])]).range([0, innerWidth]);\n\n      histogram.hist\n        .value((d) => d[fields.x])\n        .domain(Scales.x.domain())\n        .thresholds(Scales.x.ticks(binsCount));\n\n      histogram.bins = histogram.hist(data);\n\n      Scales.y = d3\n        .scaleLinear()\n        .range([innerHeight, 0])\n        .domain([0, d3.max(histogram.bins, (d) => d.length)]);\n\n      // brush\n      const brush = d3\n        .brushX()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ])\n        .on('end', () => {\n          if (d3.event.selection) {\n            const [x0, x1] = [d3.event.selection[0], d3.event.selection[1]];\n            filterAdded([\n              {\n                id,\n                field: fields.x,\n                operation: 'range',\n                values: [numFixed(Scales.x.invert(x0)), numFixed(Scales.x.invert(x1))],\n              },\n            ]);\n          }\n        });\n      svg.append('g').call(brush);\n\n      // draw x-axis\n      svg\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(Scales.x));\n\n      // draw y-axis\n      const view = svg\n        .append('g')\n        .call(d3.axisLeft(Scales.y))\n        .append('g')\n        .attr('class', 'hist-area');\n\n      // draw histogram rectangles\n      view\n        .selectAll('.bar')\n        .data(histogram.bins)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr('x', 1)\n        .attr('transform', (d) => `translate(${Scales.x(d.x0)},${Scales.y(d.length)})`)\n        .attr('width', (d) => Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0))\n        .attr('height', (d) => innerHeight - Scales.y(d.length))\n        .style('fill', '#87CEFA');\n    }, 100);\n  }, [layout]);\n\n  // draw filtered histogram\n  useEffect(() => {\n    setTimeout(() => {\n      const rect = svgRef.current.getBoundingClientRect();\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { bins } = histogram;\n      if (filters.length !== 0) {\n        bins = histogram.hist(filterData);\n      }\n\n      d3.select(svgRef.current)\n        .selectAll('.hist-area')\n        .selectAll('.bar-f')\n        .data(bins)\n        .join('rect')\n        .attr('class', 'bar-f')\n        .style('transform', 'scale(1, -1)')\n        .attr('x', (d) => Scales.x(d.x0))\n        .attr('y', () => -innerHeight)\n        .transition()\n        .duration(1000)\n        .attr('width', (d) => Math.max(Scales.x(d.x1) - Scales.x(d.x0) - 1, 0))\n        .attr('height', (d) => innerHeight - Scales.y(d.length))\n        .style('fill', '#4682B4');\n    }, 100);\n  }, [filters, filterData, layout]);\n  return <div id={id} ref={svgRef} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default Histogram;\n\nHistogram.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired }).isRequired,\n  id: PropTypes.string.isRequired,\n  binsCount: PropTypes.number,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nHistogram.defaultProps = {\n  binsCount: 10,\n};\n"]}