{"version":3,"sources":["components/VisualTools/Chart/DensityChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","DensityChart","props","startPosition","endPosition","self","useRef","svg","scales","x","scaleLinear","y","margin","useEffect","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","append","attr","concat","domainExtentX","extent","data","d","fields","domainPaddingX","domainExtentY","domainPaddingY","domain","range","axisBottom","axisLeft","getCurrentMouseClickPosition","event","sourceEvent","clientX","node","clientY","brush","on","startX","Math","min","startY","abs","selection","_ref","x0","y0","_ref2","max","x1","y1","filters","id","title","field","operation","values","numFixed","invert","filterAdded","end","layout","length","filterData","k","pow","round","log10","color","densityData","contourDensity","size","bandwidth","insert","enter","geoPath","value","createElement","ref","style","_default","exports","propTypes","PropTypes","arrayOf","shape","isRequired","string","number","currentCols","func"],"mappings":"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","file":"DensityChart.ddf945f4.js","sourceRoot":"../source","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nfunction DensityChart(props) {\n  let startPosition = [0, 0];\n  let endPosition = [0, 0];\n  const self = useRef();\n  const svg = useRef();\n  const scales = useRef({\n    x: d3.scaleLinear(),\n    y: d3.scaleLinear(),\n  });\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 20,\n    left: 40,\n  };\n\n  const end = () => {\n    if (!d3.event.selection) return;\n    const [x0, y0] = [Math.min(startPosition[0], endPosition[0]),\n      Math.min(startPosition[1], endPosition[1])];\n    const [x1, y1] = [Math.max(startPosition[0], endPosition[0]),\n      Math.max(startPosition[1], endPosition[1])];\n    const filters = [\n      {\n        id: `${props.id}_x`,\n        title: props.title,\n        field: props.fields.x,\n        operation: 'range',\n        values: [numFixed(scales.current.x.invert(x0)), numFixed(scales.current.x.invert(x1))],\n      },\n      {\n        id: `${props.id}_y`,\n        title: props.title,\n        field: props.fields.y,\n        operation: 'range',\n        values: [numFixed(scales.current.y.invert(y1)), numFixed(scales.current.y.invert(y0))],\n      },\n    ];\n    props.filterAdded(filters);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      d3.select(self.current).selectAll('svg').remove('svg');\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      svg.current = d3\n        .select(self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n      const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n      const domainExtentX = d3.extent(props.data, (d) => d[props.fields.x]);\n      const domainPaddingX = (domainExtentX[1] - domainExtentX[0]) * paddingPercent;\n      const domainExtentY = d3.extent(props.data, (d) => d[props.fields.y]);\n      const domainPaddingY = (domainExtentY[1] - domainExtentY[0]) * paddingPercent;\n      scales.current.x\n        .domain([domainExtentX[0] - domainPaddingX,\n          domainExtentX[1] + domainPaddingX])\n        .range([0, innerWidth]);\n\n      scales.current.y\n        .domain([domainExtentY[0] - domainPaddingY,\n          domainExtentY[1] + domainPaddingY])\n        .range([innerHeight, 0]);\n\n      svg.current\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(scales.current.x));\n      svg.current.append('g').call(d3.axisLeft(scales.current.y));\n\n      const getCurrentMouseClickPosition = () => {\n        const mouseX = d3.event.sourceEvent.clientX - svg.current.node().getBoundingClientRect().x\n        - 2 * margin.left;\n        const mouseY = d3.event.sourceEvent.clientY - svg.current.node().getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n\n      const brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          startPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selection').remove('rect');\n        }).on('brush', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX + margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(130, 130, 130, 0.5)');\n        })\n        .on('end', () => {\n          endPosition = getCurrentMouseClickPosition();\n          svg.current.selectAll('.selected-area').remove('.selected-area');\n          svg.current.selectAll('.selection').remove('rect');\n          const startX = Math.min(startPosition[0], endPosition[0]);\n          const startY = Math.min(startPosition[1], endPosition[1]);\n          const selectedArea = svg.current.append('rect')\n            .attr('class', 'selected-area')\n            .attr('position', 'absolute')\n            .attr('x', startX + margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(endPosition[0] - startPosition[0]))\n            .attr('height', Math.abs(endPosition[1] - startPosition[1]))\n            .attr('fill', 'rgba(140, 140, 140, 0.5)');\n          end();\n        });\n\n      svg.current.append('g').call(brush);\n    }, 100);\n  }, [props.layout]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const rect = self.current.getBoundingClientRect();\n      const innerWidth = rect.width - margin.left - margin.right;\n      const innerHeight = rect.height - margin.top - margin.bottom;\n\n      let { data } = props;\n      if (props.filters.length !== 0) data = props.filterData;\n\n      const k = 10 ** (-4 + Math.round(Math.log10(data.length)));\n      const color = d3.scaleLinear().domain([0, k]).range(['white', '#4682b4']);\n\n      const densityData = d3\n        .contourDensity()\n        .x((d) => scales.current.x(d[props.fields.x]))\n        .y((d) => scales.current.y(d[props.fields.y]))\n        .size([innerWidth, innerHeight])\n        .bandwidth(20)(data);\n\n      svg.current.select('#draw_area').remove('g');\n      svg.current\n        .insert('g', 'g')\n        .attr('id', 'draw_area')\n        .selectAll('path')\n        .data(densityData)\n        .enter()\n        .append('path')\n        .attr('d', d3.geoPath())\n        .attr('fill', (d) => color(d.value));\n    }, 100);\n  }, [props.layout, props.filters, props.filterData]);\n  return <div id={props.id} ref={self} style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default DensityChart;\n\nDensityChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, y: PropTypes.string.isRequired })\n    .isRequired,\n  id: PropTypes.string.isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  layout: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    currentCols: PropTypes.number.isRequired,\n  }).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n"]}