{"version":3,"sources":["components/VisualTools/Chart/ScatterChart.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","_utils","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","_inherits","create","value","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","ScatterChart","exports","_PureComponent","PureComponent","_super","props","_this","self","React","createRef","state","margin","top","right","bottom","left","data","filter","d","fields","x","y","z","componentDidUpdate","_this2","setTimeout","select","current","selectAll","remove","rect","getBoundingClientRect","innerWidth","width","innerHeight","height","canvas","append","attr","style","concat","svg","viewer","xScale","createScaleLiner","yScale","radiusScale","getCurrentMouseClickPosition","console","log","event","sourceEvent","clientX","node","clientY","axisBottom","tickSize","axisLeft","brush","extent","on","startPosition","endPosition","startX","Math","min","startY","abs","end","draw","point","cx","cy","context","beginPath","arc","PI","closePath","fill","stroke","_this3","getContext","clearRect","fillStyle","strokeWidth","strokeStyle","globalAlpha","filters","forEach","drawPoint","filterData","includes","f","range","domainExtent","domainPadding","scaleLinear","domain","nice","selection","_ref","x0","y0","_ref2","max","x1","y1","id","title","field","operation","values","numFixed","invert","filterAdded","createElement","ref","role","propTypes","PropTypes","arrayOf","shape","isRequired","string","func"],"mappings":"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","file":"ScatterChart.b9c02eff.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { numFixed } from '../../../common/utils';\n\nexport default class ScatterChart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.self = React.createRef();\n    this.state = {\n      margin: {\n        top: 5,\n        right: 10,\n        bottom: 25,\n        left: 25,\n      },\n    };\n    this.state.data = this.props.data.filter(\n      (d) => d[this.props.fields.x] !== 'N/A'\n        && d[this.props.fields.y] !== 'N/A'\n        && d[this.props.fields.z] !== 'N/A',\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      d3.select(this.self.current).selectAll('canvas').remove('canvas');\n      d3.select(this.self.current).selectAll('svg').remove('svg');\n      this.rect = this.self.current.getBoundingClientRect();\n      const innerWidth = this.rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = this.rect.height - this.state.margin.top - this.state.margin.bottom;\n\n      this.canvas = d3\n        .select(this.self.current)\n        .append('canvas')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .style('transform', `translate(${this.state.margin.left}px,${this.state.margin.top}px)`);\n\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', this.rect.width)\n        .attr('height', this.rect.height)\n        .attr('transform', `translate(${0},${-innerHeight})`);\n\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},0)`);\n\n      //\n      this.xScale = this.createScaleLiner(this.props.fields.x, [0, innerWidth]);\n      this.yScale = this.createScaleLiner(this.props.fields.y, [innerHeight, 0]);\n      this.radiusScale = this.createScaleLiner(this.props.fields.z, [3, 10]);\n      const getCurrentMouseClickPosition = () => {\n        console.log(svg);\n        const mouseX = d3.event.sourceEvent.clientX - svg.node().getBoundingClientRect().x\n        - this.state.margin.left;\n        const mouseY = d3.event.sourceEvent.clientY - svg.node().getBoundingClientRect().y;\n        return [mouseX, mouseY];\n      };\n      viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).tickSize(-innerHeight));\n\n      // add the y Axis\n      viewer.append('g').call(d3.axisLeft(this.yScale).tickSize(-innerWidth));\n\n      this.brush = d3\n        .brush()\n        .extent([\n          [0, 0],\n          [innerWidth, innerHeight],\n        ]).on('start', () => {\n          this.startPosition = getCurrentMouseClickPosition();\n        }).on('brush', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n        })\n        .on('end', () => {\n          this.endPosition = getCurrentMouseClickPosition();\n          svg.selectAll('rect').remove('rect');\n          const startX = Math.min(this.startPosition[0], this.endPosition[0]);\n          const startY = Math.min(this.startPosition[1], this.endPosition[1]);\n          const selectedArea = svg.append('rect')\n            .attr('position', 'absolute')\n            .attr('x', startX + this.state.margin.left)\n            .attr('y', startY)\n            .attr('width', Math.abs(this.endPosition[0] - this.startPosition[0]))\n            .attr('height', Math.abs(this.endPosition[1] - this.startPosition[1]))\n            .attr('fill', 'rgba(211, 211, 211, 0.5)');\n          this.end();\n        });\n\n      viewer.append('g').call(this.brush);\n\n      this.draw();\n    }, 100);\n  }\n\n  drawPoint(point) {\n    const cx = this.xScale(point[this.props.fields.x]);\n    const cy = this.yScale(point[this.props.fields.y]);\n    const r = this.props.fields.z ? this.radiusScale(point[this.props.fields.z]) : 3;\n\n    this.context.beginPath();\n    this.context.arc(cx, cy, r, 0, 2 * Math.PI);\n    this.context.closePath();\n    this.context.fill();\n    this.context.stroke();\n  }\n\n  draw() {\n    this.context = this.canvas.node().getContext('2d');\n    this.context.clearRect(0, 0, this.rect.width, this.rect.height);\n    this.context.fillStyle = '#87CEEB';\n    this.context.strokeWidth = 1;\n    this.context.strokeStyle = '#4682B4';\n    this.context.globalAlpha = 1;\n\n    if (this.props.filters.length === 0) {\n      this.state.data.forEach((point) => {\n        this.drawPoint(point);\n      });\n    } else {\n      this.state.data.forEach((point) => {\n        if (this.props.filterData.includes(point)) {\n          this.context.fillStyle = '#87CEEB';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#4682B4';\n          this.context.globalAlpha = 1;\n        } else {\n          this.context.fillStyle = '#c0c0c0c0';\n          this.context.strokeWidth = 1;\n          this.context.strokeStyle = '#000000';\n          this.context.globalAlpha = 0.2;\n        }\n        this.drawPoint(point);\n      });\n    }\n  }\n\n  createScaleLiner(f, range) {\n    const paddingPercent = 0.1; // Adjust the percentage of padding as needed\n    const domainExtent = d3.extent(this.state.data, (d) => d[f]);\n    const domainPadding = (domainExtent[1] - domainExtent[0]) * paddingPercent;\n    const scaleLiner = d3\n      .scaleLinear()\n      .domain([domainExtent[0] - domainPadding,\n        domainExtent[1] + domainPadding])\n      .range(range)\n      .nice();\n    return scaleLiner;\n  }\n\n  end() {\n    if (!d3.event.selection) return;\n\n    const [x0, y0] = [Math.min(this.startPosition[0], this.endPosition[0]),\n      Math.min(this.startPosition[1], this.endPosition[1])];\n    const [x1, y1] = [Math.max(this.startPosition[0], this.endPosition[0]),\n      Math.max(this.startPosition[1], this.endPosition[1])];\n\n    const filters = [\n      {\n        id: `${this.props.id}_x`,\n        title: this.props.title,\n        field: this.props.fields.x,\n        operation: 'range',\n        values: [numFixed(this.xScale.invert(x0)), numFixed(this.xScale.invert(x1))],\n      },\n      {\n        id: `${this.props.id}_y`,\n        title: this.props.title,\n        field: this.props.fields.y,\n        operation: 'range',\n        values: [numFixed(this.yScale.invert(y1)), numFixed(this.yScale.invert(y0))],\n      },\n    ];\n    this.props.filterAdded(filters);\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} ref={this.self} role=\"figure\" style={{ width: '100%', height: '100%' }} />\n    );\n  }\n}\n\nScatterChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({\n    x: PropTypes.string.isRequired,\n    y: PropTypes.string.isRequired,\n    z: PropTypes.string,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  filterAdded: PropTypes.func.isRequired,\n};\n"]}