{"version":3,"sources":["components/VisualTools/Chart/KMCurve.js"],"names":["_react","_interopRequireWildcard","require","d3","_propTypes","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","_arrayLikeToArray","toString","slice","name","Array","from","test","isArray","length","_classCallCheck","_defineProperties","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","_inherits","create","value","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","isUndefined","d","undefined","toLowerCase","KMCurve","exports","_PureComponent","PureComponent","_super","props","_this","self","React","createRef","maxTime","NEGATIVE_INFINITY","state","margin","top","right","bottom","left","filter","data","transform","field","fields","_this2","setTimeout","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","svg","select","append","attr","viewer","concat","xScale","scaleLinear","domain","range","yScale","color","scaleOrdinal","map","quantize","interpolateSpectral","axisBottom","ticks","text","time","unit","axisLeft","forEach","drawKMCurve","lg","selectAll","enter","style","offset","x","getBBox","eventValue","censoredValue","group","event","filteredData","collapsed_stage","Math","max","groups","nest","entries","rs","g","risk","values","sortKeys","b","rollup","v","censor","p","points","currentTime","c","push","censored","_this3","line","curve","curveStepAfter","y","datum","point","drawLine","createElement","id","ref","role","propTypes","PropTypes","arrayOf","shape","isRequired","string","defaultProps"],"mappings":"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","file":"KMCurve.f8409a31.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nfunction isUndefined(d) {\n  return d === undefined || d == null || (typeof d === 'string' && d.toLowerCase() === 'na');\n}\nexport default class KMCurve extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.maxTime = Number.NEGATIVE_INFINITY;\n    this.state = {\n      margin: {\n        top: 35,\n        right: 20,\n        bottom: 45,\n        left: 45,\n      },\n    };\n    if (this.props.filter) {\n      this.state.data = this.transform(\n        this.props.data.filter((d) => d[this.props.filter.field] === this.props.filter.value),\n        this.props.fields,\n      );\n    } else {\n      this.state.data = this.transform(this.props.data, this.props.fields);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const rect = this.self.current.getBoundingClientRect();\n      const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n      // create svg\n      const svg = d3\n        .select(this.self.current)\n        .append('svg')\n        .attr('width', rect.width)\n        .attr('height', rect.height);\n      // create viewer\n      const viewer = svg\n        .append('g')\n        .attr('transform', `translate(${this.state.margin.left},${this.state.margin.top})`);\n      //\n      this.xScale = d3.scaleLinear().domain([0, this.maxTime]).range([0, innerWidth]);\n\n      this.yScale = d3.scaleLinear().domain([0, 1]).range([innerHeight, 0]);\n\n      this.color = d3\n        .scaleOrdinal()\n        .domain(this.state.data.map((d) => d.key))\n        .range(d3.quantize((t) => d3.interpolateSpectral(t), this.state.data.length));\n\n      const xaxisGroup = viewer\n        .append('g')\n        .attr('transform', `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(this.xScale).ticks(4)); // .tickSize(-innerWidth));\n      xaxisGroup\n        .append('text')\n        .attr('y', 30)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .text(`Time ${this.props.fields.time.unit ? `(${this.props.fields.time.unit})` : ''}`);\n\n      // add the y Axis\n      const yaxisGroup = viewer.append('g').call(d3.axisLeft(this.yScale).ticks(4)); // .tickSize(-innerWidth)\n      yaxisGroup\n        .append('text')\n        .attr('y', -30)\n        .attr('x', -innerHeight / 3)\n        .attr('fill', 'black')\n        .attr('font-size', 13)\n        .attr('transform', 'rotate(-90)')\n        .text('Survival Probability');\n\n      this.state.data.forEach((d) => this.drawKMCurve(viewer, d));\n\n      const height = 0;\n      const nodeWidth = (d) => d.getBBox().width;\n      const legend = svg\n        .append('g')\n        .attr('class', 'legend')\n        .attr('transform', `translate(${this.state.margin.left + innerWidth / 2},0)`);\n\n      const lg = legend\n        .selectAll('g')\n        .data(this.state.data)\n        .enter()\n        .append('g')\n        .attr('transform', (d, i) => `translate(${i * 100},${height + 15})`);\n\n      lg.append('rect')\n        .style('fill', (d) => this.color(d.key))\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 10)\n        .attr('height', 10);\n\n      lg.append('text')\n        .style('font-family', 'Georgia')\n        .style('font-size', '13px')\n        .attr('x', 17.5)\n        .attr('y', 10)\n        .text((d) => d.key);\n\n      let offset = 0;\n      lg.attr('transform', function transform() {\n        const x = offset;\n        offset += nodeWidth(this) + 10;\n        return `translate(${x},${height + 10})`;\n      });\n    }, 500);\n  }\n\n  transform(data, field) {\n    const { eventValue } = field;\n    const { censoredValue } = field;\n    const group = field.group.field;\n    const time = field.time.field;\n    const event = field.event.field;\n\n    const filteredData = data.filter(\n      (d) => d.collapsed_stage !== 'stage_x/NR'\n        && !isUndefined(d[time])\n        && !isUndefined(d[event])\n        && !isUndefined(d[group]),\n    );\n    this.maxTime = Math.max(...filteredData.map((d) => d[time]));\n    const groups = d3\n      .nest()\n      .key((d) => d[group])\n      .entries(filteredData);\n    const rs = [];\n    groups.forEach((g) => {\n      const { key } = g;\n      let risk = g.values.length;\n      const values = d3\n        .nest()\n        .key((d) => +d[time])\n        .sortKeys((a, b) => +a - +b)\n        .rollup((v) => ({\n          event: v.filter((d) => d[event] === eventValue).length,\n          censor: v.filter((d) => d[event] === censoredValue).length,\n        }))\n        .entries(g.values);\n      let p = 1;\n      const points = [];\n      values.forEach((d) => {\n        const currentTime = +d.key;\n        const e = d.value.event;\n        const c = d.value.censor;\n        if (currentTime < 0) return;\n        if (e > 0) {\n          p *= 1 - e / risk;\n          const censored = false;\n          points.push({ p, currentTime, censored });\n        }\n        if (c > 0) {\n          const censored = true;\n          points.push({ p, currentTime, censored });\n        }\n        risk -= e + c;\n      });\n      rs.push({ key, points });\n    });\n\n    return rs;\n  }\n\n  drawLine(viewer, points, color) {\n    const line = d3\n      .line()\n      .curve(d3.curveStepAfter)\n      .x((d) => this.xScale(d.time))\n      .y((d) => this.yScale(d.p));\n    viewer\n      .append('path')\n      .datum(points)\n      .attr('class', 'line')\n      .style('stroke', color)\n      .attr('d', line);\n\n    points.forEach((point) => {\n      if (point.censored) {\n        const p = [\n          {\n            p: point.p - 0.015,\n            time: point.time,\n          },\n          {\n            p: point.p + 0.015,\n            time: point.time,\n          },\n        ];\n        viewer.append('path').datum(p).attr('class', 'mark').style('stroke', color)\n          .attr('d', line);\n      }\n    });\n  }\n\n  drawKMCurve(viewer, d) {\n    // draw lines\n    this.drawLine(viewer, d.points, this.color(d.key));\n    // draw marks\n  }\n\n  render() {\n    return <div id={this.props.id} ref={this.self} role=\"figure\" style={{ width: '100%', height: '100%' }} />;\n  }\n}\n\nKMCurve.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fields: PropTypes.shape({ x: PropTypes.string.isRequired, time: PropTypes.shape() }).isRequired,\n  filter: PropTypes.shape({ field: PropTypes.string, value: PropTypes.string }),\n  id: PropTypes.string.isRequired,\n};\n\nKMCurve.defaultProps = {\n  filter: {},\n};\n"]}